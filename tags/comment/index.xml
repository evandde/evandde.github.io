<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Comment | EvaNote</title>
    <link>https://evandde.github.io/tags/comment/</link>
      <atom:link href="https://evandde.github.io/tags/comment/index.xml" rel="self" type="application/rss+xml" />
    <description>Comment</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>ko-kr</language><copyright>© 2020–2022 Evan Kim</copyright><lastBuildDate>Fri, 07 Jan 2022 16:23:33 +0900</lastBuildDate>
    <image>
      <url>https://evandde.github.io/media/icon_hu8e7e87b14a52eedd9109bf1b224bd29e_18847_512x512_fill_lanczos_center_3.png</url>
      <title>Comment</title>
      <link>https://evandde.github.io/tags/comment/</link>
    </image>
    
    <item>
      <title>대충보는 C&#43;&#43; &amp; CMake - 7. 주석(comment)</title>
      <link>https://evandde.github.io/praccpp-007-comment/</link>
      <pubDate>Fri, 07 Jan 2022 16:23:33 +0900</pubDate>
      <guid>https://evandde.github.io/praccpp-007-comment/</guid>
      <description>&lt;p&gt;이 글에서는 C++ 코드에서의 주석에 대해 알아봅니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;tldr&#34;&gt;TL;DR&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;주석(Comment)이란 사람만 볼 수 있게끔 적는 메모&lt;/li&gt;
&lt;li&gt;한 줄짜리 주석은 &lt;code&gt;//&lt;/code&gt; 표시를 이용. &lt;code&gt;//&lt;/code&gt; 표시 이후 그 줄이 끝날 때까지의 내용이 주석처리되는 식. 예를 들면, &lt;code&gt;// 주석으로 적을 내용&lt;/code&gt;의 형태로 작성&lt;/li&gt;
&lt;li&gt;여러 줄짜리 주석은 &lt;code&gt;/*&lt;/code&gt;과 &lt;code&gt;*/&lt;/code&gt; 표시를 이용. &lt;code&gt;/*&lt;/code&gt; 표시 이후부터 &lt;code&gt;*/&lt;/code&gt; 표시 이전까지의 내용이 주석처리되는 식. 예를 들면, &lt;code&gt;/* 주석으로 적을 내용 */&lt;/code&gt;의 형태로 작성&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;주석comment&#34;&gt;주석(Comment)&lt;/h2&gt;
&lt;p&gt;주석이란 &lt;strong&gt;사람이 C++ 코드를 이해하기 쉽도록 돕기 위해 적어놓는 설명&lt;/strong&gt;입니다.&lt;/p&gt;
&lt;p&gt;C++ 코드를 보자마자 코드의 구조, 내용, 원리가 한 눈에 들어오는 능력자도 있겠지만, 저처럼 코드를 한참 들여다봐야 간신히 그 내용이 이해가 되는 불쌍한 중생도 있겠지요. 만약 코드에 대한 설명을 사람의 언어(한국어든 영어든)로 풀어서 메모해 둔다면, 누가 그 코드를 보더라도 그 코드가 무슨 역할을 하기 위해 작성된 것인지 금방 이해할 수 있을 것입니다.&lt;/p&gt;
&lt;p&gt;이런 메모는 C++ 언어가 아니라 사람의 언어로 적을 것이므로, 컴파일러가 이 메모를 무시하도록 해 주어야합니다. 그렇지 않으면 &amp;quot;이 내용은 C++ 문법에 맞지 않습니다&amp;quot;라며 에러를 띄울 것이기 때문이죠.&lt;/p&gt;
&lt;p&gt;이렇게 컴파일러는 내용을 무시하고 넘어가게끔 하되 &lt;strong&gt;사람만 알아볼 수 있도록 적어두는 메모&lt;/strong&gt;를 &lt;strong&gt;주석&lt;/strong&gt;이라고 합니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;간혹, 한글로 주석을 적을 경우 유니코드 관련 문제로 인해 오류가 발생하거나 폰트가 깨지는 등의 문제가 발생할 수도 있습니다.&lt;/p&gt;
&lt;p&gt;이 글에서는 이해를 돕고자 한글 주석을 사용하지만, 이후에는 되도록 영어 주석으로 진행할 예정입니다.&lt;/p&gt;

  &lt;/div&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;한-줄짜리-주석&#34;&gt;한 줄짜리 주석(&lt;code&gt;//&lt;/code&gt;)&lt;/h2&gt;
&lt;p&gt;한 줄짜리 주석은 &lt;code&gt;//&lt;/code&gt; 표시를 이용하여 작성합니다. 줄의 어느 위치에서든 쓸 수 있으며, &lt;code&gt;//&lt;/code&gt; 표시 이후로 그 줄이 끝날 때(줄바꿈)까지의 모든 내용이 주석처리됩니다. 예를 들어 코드로 보면 다음과 같습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#include &amp;lt;iostream&amp;gt;

int main(int, char**) {
    // 이 부분은 주석입니다.
    // 다음 줄은 화면에 Hello, world!라는 문구를 표시하는 코드입니다.
    std::cout &amp;lt;&amp;lt; &amp;quot;Hello, world!\n&amp;quot;; // 이렇게 코드에 이어서 쓸 수도 있습니다.
}

// main 함수 바깥에도 쓸 수 있습니다.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;01_linecomment&#34; srcset=&#34;
               /praccpp-007-comment/01_linecomment_hu0dae6e31c7be37e1bd58b130fff5cb0f_17491_710e1e859819b5680fe86bf7766fc58f.png 400w,
               /praccpp-007-comment/01_linecomment_hu0dae6e31c7be37e1bd58b130fff5cb0f_17491_36a5465a5f08e0586a47e3884a960932.png 760w,
               /praccpp-007-comment/01_linecomment_hu0dae6e31c7be37e1bd58b130fff5cb0f_17491_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/praccpp-007-comment/01_linecomment_hu0dae6e31c7be37e1bd58b130fff5cb0f_17491_710e1e859819b5680fe86bf7766fc58f.png&#34;
               width=&#34;744&#34;
               height=&#34;271&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;이와 같이 작성하고 실행해보시면, 이전과 완전히 동일한 결과를 얻을 것입니다.
컴파일러는 주석을 무시하기 때문에 코드 내용 상 변화가 없는 것이나 마찬가지이기 때문입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;03_runresult&#34; srcset=&#34;
               /praccpp-007-comment/03_runresult_hud82ddfc522d9f9665387429ccfb8dde0_8358_e0ea3814e5e5bba50823e3efef8d029d.png 400w,
               /praccpp-007-comment/03_runresult_hud82ddfc522d9f9665387429ccfb8dde0_8358_a036bfc9d6e36b6e528ef8706fd8eb5e.png 760w,
               /praccpp-007-comment/03_runresult_hud82ddfc522d9f9665387429ccfb8dde0_8358_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/praccpp-007-comment/03_runresult_hud82ddfc522d9f9665387429ccfb8dde0_8358_e0ea3814e5e5bba50823e3efef8d029d.png&#34;
               width=&#34;601&#34;
               height=&#34;207&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;여러-줄짜리-주석-&#34;&gt;여러 줄짜리 주석(&lt;code&gt;/*&lt;/code&gt;, &lt;code&gt;*/&lt;/code&gt;)&lt;/h2&gt;
&lt;p&gt;여러 줄짜리 주석은 &lt;code&gt;/*&lt;/code&gt; 표시로 시작하여 &lt;code&gt;*/&lt;/code&gt; 표시로 끝나는 형태로 작성합니다. &lt;code&gt;/*&lt;/code&gt;와 &lt;code&gt;*/&lt;/code&gt; 표시는 어느 위치에서든 쓸 수 있으며, 그 사이의 모든 내용이 주석처리됩니다. 예를 들어 코드로 보면 다음과 같습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#include &amp;lt;iostream&amp;gt;

/* 이 부분은 주석처리 되는 부분입니다.
이렇게 줄바꿈을 해도 여전히 주석입니다.
계속 주석처리 되고 있는 중입니다.
...
이제 주석을 끝내보겠습니다. */

int main(int, char**) {
    /* 이렇게 한 줄만 주석처리해도 됩니다.*/
    std::cout &amp;lt;&amp;lt; &amp;quot;Hello, world!\n&amp;quot;;
    /*
    여러 줄로 
    길게 설명을 
    해야 할 때에 
    활용해보세요
    */
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;02_multilinecomment&#34; srcset=&#34;
               /praccpp-007-comment/02_multilinecomment_hua4ceae26b126b6f82fe045fd7f397d2f_14699_7fab626627f22095aeb132322df6851c.png 400w,
               /praccpp-007-comment/02_multilinecomment_hua4ceae26b126b6f82fe045fd7f397d2f_14699_9d331d04c1015dbd4586a113e0c72681.png 760w,
               /praccpp-007-comment/02_multilinecomment_hua4ceae26b126b6f82fe045fd7f397d2f_14699_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/praccpp-007-comment/02_multilinecomment_hua4ceae26b126b6f82fe045fd7f397d2f_14699_7fab626627f22095aeb132322df6851c.png&#34;
               width=&#34;462&#34;
               height=&#34;479&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;마찬가지로, 실행해보시면 동일한 결과를 얻을 수 있습니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;03_runresult&#34; srcset=&#34;
               /praccpp-007-comment/03_runresult_hud82ddfc522d9f9665387429ccfb8dde0_8358_e0ea3814e5e5bba50823e3efef8d029d.png 400w,
               /praccpp-007-comment/03_runresult_hud82ddfc522d9f9665387429ccfb8dde0_8358_a036bfc9d6e36b6e528ef8706fd8eb5e.png 760w,
               /praccpp-007-comment/03_runresult_hud82ddfc522d9f9665387429ccfb8dde0_8358_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/praccpp-007-comment/03_runresult_hud82ddfc522d9f9665387429ccfb8dde0_8358_e0ea3814e5e5bba50823e3efef8d029d.png&#34;
               width=&#34;601&#34;
               height=&#34;207&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;changelog&#34;&gt;Changelog&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;2022-01-07: 최초 게시&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
