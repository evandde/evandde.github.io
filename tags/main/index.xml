<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>main | EvaNote</title>
    <link>https://evandde.github.io/tags/main/</link>
      <atom:link href="https://evandde.github.io/tags/main/index.xml" rel="self" type="application/rss+xml" />
    <description>main</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>ko-kr</language><copyright>© 2020–2022 Evan Kim</copyright><lastBuildDate>Thu, 16 Dec 2021 16:37:27 +0900</lastBuildDate>
    <image>
      <url>https://evandde.github.io/media/icon_hu8e7e87b14a52eedd9109bf1b224bd29e_18847_512x512_fill_lanczos_center_3.png</url>
      <title>main</title>
      <link>https://evandde.github.io/tags/main/</link>
    </image>
    
    <item>
      <title>대충보는 C&#43;&#43; &amp; CMake - 5. main 함수</title>
      <link>https://evandde.github.io/praccpp-005-whatismainfunc/</link>
      <pubDate>Thu, 16 Dec 2021 16:37:27 +0900</pubDate>
      <guid>https://evandde.github.io/praccpp-005-whatismainfunc/</guid>
      <description>&lt;p&gt;이 글에서는 함수에 대한 기본적인 이해와 더불어 main 함수의 역할을 알아봅니다.&lt;/p&gt;
&lt;p&gt;일단 이 글에서는 함수에 관한 문법적인 요소는 다 빼고, 개념부터 잡겠습니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;tldr&#34;&gt;TL;DR&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;함수(function)란, 일련의 작업과정을 하나로 묶은 것&lt;/li&gt;
&lt;li&gt;프로그램(program)이라는 것도 결국에는 그 프로그램이 수행하고자 하는 일련의 작업과정을 하나로 묶은 것이므로, &lt;strong&gt;함수&lt;/strong&gt;라고 볼 수 있음&lt;/li&gt;
&lt;li&gt;C++에서는 하나의 프로그램에 해당하는 작업과정을 하나로 묶어 &lt;b&gt;&amp;quot;main&amp;quot;&lt;/b&gt;이라는 이름의 함수로 부르자고 정해져 있음. 따라서 모든 C++ 프로그램은 &lt;strong&gt;하나의 main 함수&lt;/strong&gt;를 무조건 가지며, 컴퓨터가 &lt;strong&gt;어떤 프로그램을 실행&lt;/strong&gt;한다는 것은 &lt;strong&gt;그 프로그램의 main 함수를 실행하는 것과 동일&lt;/strong&gt;한 의미임&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;함수function&#34;&gt;함수(function)&lt;/h2&gt;
&lt;h3 id=&#34;기본이론&#34;&gt;기본이론&lt;/h3&gt;
&lt;p&gt;함수란 일련의 작업과정을 하나로 묶어서 부르는 것을 말합니다.&lt;/p&gt;
&lt;p&gt;간단한 예시로, 볼펜의 무게를 재는 방법을 &lt;b&gt;대학원생 A&lt;/b&gt;에게 설명한다고 생각해봅시다. 이 대학원생 A는 비록 아직 할 줄 아는 일은 없지만, 한 번 가르쳐주면 가르쳐준대로 완벽하게 따르는 훌륭한(?) 친구입니다.&lt;/p&gt;
&lt;p&gt;이 친구에게 볼펜의 무게를 재는 방법을 알려주기 위해 다음과 같이 말을 해주면 되겠군요.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;저울을 꺼낸다.&lt;/li&gt;
&lt;li&gt;저울의 영점을 맞춘다.&lt;/li&gt;
&lt;li&gt;저울 위에 볼펜을 올린다.&lt;/li&gt;
&lt;li&gt;저울이 가리키는 값을 읽는다.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;그런데, 볼펜의 무게를 재야 할 때마다 위와 같은 네 단계를 매 번 말해주는 것이 여간 귀찮은 일이 아닙니다. 그래서 이 네 단계의 과정을 &amp;quot;볼펜의 무게 재기&amp;quot;라는 하나의 이름으로 묶어서 말하기로 약속해 보았습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;볼펜의 무게 재기&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;저울을 꺼낸다.&lt;/li&gt;
&lt;li&gt;저울의 영점을 맞춘다.&lt;/li&gt;
&lt;li&gt;저울 위에 볼펜을 올린다.&lt;/li&gt;
&lt;li&gt;저울이 가리키는 값을 읽는다.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;이제는 A에게 &lt;b&gt;&amp;quot;볼펜의 무게를 재라&amp;quot;&lt;/b&gt;라고만 말하면, A는 위의 네 단계를 수행할 것입니다.&lt;/p&gt;
&lt;p&gt;&lt;font color=red&gt;&lt;b&gt;이것이 함수입니다. 우리는 방금 &amp;quot;볼펜의 무게 재기&amp;quot;라는 함수를 만들었습니다.&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;
&lt;h3 id=&#34;함수의-입력인자&#34;&gt;함수의 입력인자&lt;/h3&gt;
&lt;p&gt;볼펜 말고도, 연필의 무게도 재볼 수 있겠군요. &amp;quot;연필의 무게 재기&amp;quot; 함수를 다음과 같이 만들면 될 것 같습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;연필의 무게 재기&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;저울을 꺼낸다.&lt;/li&gt;
&lt;li&gt;저울의 영점을 맞춘다.&lt;/li&gt;
&lt;li&gt;저울 위에 &lt;strong&gt;연필&lt;/strong&gt;을 올린다.&lt;/li&gt;
&lt;li&gt;저울이 가리키는 값을 읽는다.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;그런데 이 함수를 만들고나서 살펴보니, &amp;quot;볼펜의 무게 재기&amp;quot;랑 거의 비슷하군요. 사실상 &lt;strong&gt;볼펜&lt;/strong&gt;을 &lt;strong&gt;연필&lt;/strong&gt;로만 바꾸었을 뿐, 다른 부분은 똑같이 반복되고 있습니다. 게다가 좀 더 생각해보면, 볼펜이나 연필 말고도 &lt;strong&gt;임의의 물건&lt;/strong&gt;에 대해 무게를 잴 때 &lt;b&gt;위와 같은 과정을 그대로 사용&lt;/b&gt;할 수 있을 것 같습니다.&lt;/p&gt;
&lt;p&gt;그래서 이렇게 바꿔보았습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;(물건)의 무게 재기&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;저울을 꺼낸다.&lt;/li&gt;
&lt;li&gt;저울의 영점을 맞춘다.&lt;/li&gt;
&lt;li&gt;저울 위에 &lt;b&gt;(물건)&lt;/b&gt;을 올린다.&lt;/li&gt;
&lt;li&gt;저울이 가리키는 값을 읽는다.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;이렇게 좀 더 일반화된 무게 재기 함수인 &amp;quot;(물건)의 무게 재기&amp;quot;를 만들었습니다. 함수를 여러 개 만들다보면, 지금 보신 것처럼 같은 기능을 하는데 어떤 대상에 대해 수행할 지만 다른 경우가 생깁니다. 이럴 때는 &lt;strong&gt;그 대상을 일반화&lt;/strong&gt;해서 그 대상에 해당하는 부분만 바꿔 쓸 수 있도록 만들어 준 뒤, 함수를 사용할 때 &lt;b&gt;&amp;quot;~~의 무게를 재라&amp;quot;&lt;/b&gt;와 같은 방식으로 &lt;b&gt;그 대상을 집어넣어서 사용&lt;/b&gt;하면 됩니다.&lt;/p&gt;
&lt;p&gt;&lt;font color=red&gt;&lt;b&gt;이처럼 함수를 사용할 때 집어넣는 대상을 함수의 입력인자라고 합니다.&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;
&lt;h3 id=&#34;함수의-출력인자&#34;&gt;함수의 출력인자&lt;/h3&gt;
&lt;p&gt;앞서 만들어 본 &amp;quot;(물건)의 무게 재기&amp;quot;함수를 사용하여 대학원생 A에게 일을 시킵니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;나: 이 지우개의 무게를 재오세요.&lt;br&gt;
대학원생 A: 네.&lt;br&gt;
(잠시 후)&lt;br&gt;
나: 무게 재오라니까 왜 안 재오세요&amp;hellip;?&lt;br&gt;
대학원생 A: &amp;hellip;? 쟀는데요?&lt;br&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;대학원생 A는 분명 지우개의 무게를 쟀습니다. 그럼에도 &amp;quot;나&amp;quot;의 요구사항은 딱히 충족된 것 같지 않군요. 그 이유는 무엇일까요? 지우개의 무게를 재고서 그 값을 대학원생 A가 읽기만하고, &lt;b&gt;&amp;quot;나&amp;quot;에게는 그 결과를 알려주지 않았기 때문&lt;/b&gt;입니다.&lt;/p&gt;
&lt;p&gt;생각해보면 앞서 만든 &amp;quot;(물건)의 무게 재기&amp;quot;라는 함수는 &lt;b&gt;무게를 재는 행위만 하고 끝날 것이 아니라&lt;/b&gt;, 측정 결과인 &lt;b&gt;무게가 얼마인지 알려줘야 할 것&lt;/b&gt; 같습니다.&lt;/p&gt;
&lt;p&gt;그래서 함수를 다음과 같이 바꿔보았습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;(물건)의 무게 재기&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;저울을 꺼낸다.&lt;/li&gt;
&lt;li&gt;저울의 영점을 맞춘다.&lt;/li&gt;
&lt;li&gt;저울 위에 &lt;b&gt;(물건)&lt;/b&gt;을 올린다.&lt;/li&gt;
&lt;li&gt;저울이 가리키는 값을 읽는다.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;무게를 재달라고 한 요청자에게 저울에서 읽은 값을 알려준다.&lt;/b&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;이처럼 어떤 함수들은, 일련의 과정을 수행하고 나서 &lt;b&gt;그 결과로 무언가를 되돌려 줄 수 있습니다&lt;/b&gt;.
&lt;font color=red&gt;&lt;b&gt;이렇게 함수가 요청자에게 되돌려주는 결과를 함수의 출력인자라고 합니다.&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;main-함수&#34;&gt;main 함수&lt;/h2&gt;
&lt;p&gt;컴퓨터 프로그램이란 &lt;b&gt;&amp;quot;어떤 문제를 해결하기 위한 일련의 작업과정을 기술한 명령문의 집합&amp;quot;&lt;/b&gt;입니다. 가만히 생각해보면, 앞서 대학원생 A에게 했던 것과 다를 바가 없습니다. &lt;b&gt;프로그램도 결국에는 함수로 생각할 수 있다는 것&lt;/b&gt;입니다.&lt;/p&gt;
&lt;p&gt;C++ 언어에서는, 하나의 프로그램에 해당하는 작업과정을 묶어서 &lt;strong&gt;main&lt;/strong&gt;이라는 이름의 함수로 부르자고 약속을 하였습니다. 즉, C++ 언어로 만들어진 프로그램이라면, &lt;font color=red&gt;&lt;b&gt;무조건 그 프로그램의 코드에는 main 함수가 한 개 존재&lt;/b&gt;&lt;/font&gt;할 것이며, &lt;font color=red&gt;&lt;b&gt;그 프로그램이 하는 일은 main 함수에 적혀있는 일&lt;/b&gt;&lt;/font&gt;이라는 뜻입니다.&lt;/p&gt;
&lt;h3 id=&#34;main-함수의-입력인자와-출력인자&#34;&gt;main 함수의 입력인자와 출력인자&lt;/h3&gt;
&lt;p&gt;main 함수도 입력인자와 출력인자를 가지고 있습니다. 이를 임의로 바꿀 수는 없고, C++ 언어의 약속으로서 정해져 있습니다.&lt;/p&gt;
&lt;p&gt;입력인자는 그 프로그램을 실행할 때의 실행 명령 문구에 관한 정보들입니다. 이에 관해서는 좀 더 나중에 자세히 살펴보겠습니다. 생략되는 경우도 있습니다.&lt;/p&gt;
&lt;p&gt;출력인자는 그 프로그램이 맡은 일련의 작업을 다 수행한 뒤, 프로그램이 정상적으로 작동 후 종료되었는지의 여부를 알려주는 정보입니다. 생략되는 경우도 있습니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;helloworld-프로젝트의-main-함수&#34;&gt;Helloworld 프로젝트의 main 함수&lt;/h2&gt;
&lt;p&gt;이 시리즈에서 앞서 만들었던 Helloworld 프로젝트도 하나의 C++ 프로그램입니다. 따라서, 여기에도 이 프로그램이 수행하는 내용이 담긴 &lt;b&gt;main 함수가 한 개 존재&lt;/b&gt;합니다.&lt;/p&gt;
&lt;p&gt;main 함수는 다음 그림과 같이 main이라는 이름으로 적혀있으며, main 함수가 수행할 내용은 중괄호(&lt;code&gt;{&lt;/code&gt;, &lt;code&gt;}&lt;/code&gt;)로 감싸져 있습니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;01_main&#34; srcset=&#34;
               /praccpp-005-whatismainfunc/01_main_hu6996c337777a651c6c691bff9186eff8_28720_a4572a3c5c648139c5497986ee6ab4ad.png 400w,
               /praccpp-005-whatismainfunc/01_main_hu6996c337777a651c6c691bff9186eff8_28720_ef909a1d5e92b2a4e4ae8bad3384b6fe.png 760w,
               /praccpp-005-whatismainfunc/01_main_hu6996c337777a651c6c691bff9186eff8_28720_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/praccpp-005-whatismainfunc/01_main_hu6996c337777a651c6c691bff9186eff8_28720_a4572a3c5c648139c5497986ee6ab4ad.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;이 Helloworld 프로젝트의 main 함수에는 딱 한 줄만 적혀있네요.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;std::cout &amp;lt;&amp;lt; &amp;quot;Hello, world!\n&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;우리는 이미 Helloworld 프로젝트를 실행해봤으므로, 문법을 모르더라도 이 줄이 하는 일이 무엇인지 예상할 수 있습니다. &lt;b&gt;이 줄이 하는 일은 &amp;quot;터미널 화면에 &amp;quot;Hello, world!&amp;quot;라는 문구를 출력하라&amp;quot;라는 내용이겠지요.&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;지금은 이정도만 이해하셔도 충분합니다. 좀 더 문법적인 내용은 뒤에서 자세히 살펴봅시다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;changelog&#34;&gt;Changelog&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;2021-12-16: 최초 게시&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
