<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VSCode | EvaNote</title>
    <link>https://evandde.github.io/tags/vscode/</link>
      <atom:link href="https://evandde.github.io/tags/vscode/index.xml" rel="self" type="application/rss+xml" />
    <description>VSCode</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>ko-kr</language><copyright>© 2020–2021 Evan Kim</copyright><lastBuildDate>Fri, 24 Sep 2021 17:57:09 +0900</lastBuildDate>
    <image>
      <url>https://evandde.github.io/media/icon_hu8e7e87b14a52eedd9109bf1b224bd29e_18847_512x512_fill_lanczos_center_3.png</url>
      <title>VSCode</title>
      <link>https://evandde.github.io/tags/vscode/</link>
    </image>
    
    <item>
      <title>Visual Studio Code에서 MSVC 기반 C&#43;&#43;, CMake 환경 설정하기</title>
      <link>https://evandde.github.io/vscode-msvc/</link>
      <pubDate>Thu, 26 Aug 2021 10:05:15 +0900</pubDate>
      <guid>https://evandde.github.io/vscode-msvc/</guid>
      <description>&lt;p&gt;VSCode에서 Microsoft Visual Studio 빌드 도구인 &lt;b&gt;MSVC&lt;/b&gt;를 이용하여 &lt;b&gt;C/C++ 언어&lt;/b&gt; 및 &lt;b&gt;CMake&lt;/b&gt;를 사용하기 위한 환경을 구축하는 방법에 대해 알아봅니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    여기서는 &lt;b&gt;VSCode 설치를 완료한 상태&lt;/b&gt;라고 가정합니다. VSCode 설치 및 기본 세팅은 &lt;a href=&#34;https://evandde.github.io/vscode/&#34;&gt;이 글&lt;/a&gt;을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    MSVC는 Windows에서만 이용 가능합니다. Linux나 Mac을 이용하시는 경우에는 &lt;b&gt;gcc&lt;/b&gt;와 같은 다른 대안을 이용하시기 바랍니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;vs2019-빌드-도구-설치&#34;&gt;VS2019 빌드 도구 설치&lt;/h2&gt;
&lt;p&gt;VSCode는 C 언어용 컴파일러나 디버거를 자체적으로 내장하고있지 않습니다. 때문에 C 언어를 VSCode에서 사용하려면, 컴파일러와 디버거를 직접 설치하고 이를 연동해주는 작업이 필요합니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    Extension을 설치한다고 해서 컴파일러나 디버거가 설치되는 것은 아닙니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;이 글에서는 Microsoft사에서 제공하는 MSVC(Microsoft Visual C++)를 이용하여 진행할 것입니다.&lt;/p&gt;
&lt;h3 id=&#34;다운로드&#34;&gt;다운로드&lt;/h3&gt;
&lt;p&gt;Microsoft에서 제공하는 Visual Studio 2019용 Build Tools는 &lt;a href=&#34;https://visualstudio.microsoft.com/ko/downloads/#build-tools-for-visual-studio-2019&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;이 링크&lt;/a&gt;에서 무료로 받을 수 있습니다. 아래 그림에서 보이는 다운로드 링크를 누르면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;vs2019buildtools_download&#34; srcset=&#34;
               /vscode-msvc/vs2019buildtools_download_hub57466a22a601cab6b68f2e5874681b3_25611_df9e25f1c544aa68a78a92d89e0c13a0.png 400w,
               /vscode-msvc/vs2019buildtools_download_hub57466a22a601cab6b68f2e5874681b3_25611_b06efe6e544273a41390ecc7e564f614.png 760w,
               /vscode-msvc/vs2019buildtools_download_hub57466a22a601cab6b68f2e5874681b3_25611_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/vs2019buildtools_download_hub57466a22a601cab6b68f2e5874681b3_25611_df9e25f1c544aa68a78a92d89e0c13a0.png&#34;
               width=&#34;760&#34;
               height=&#34;135&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;설치&#34;&gt;설치&lt;/h3&gt;
&lt;p&gt;다운받은 뒤 실행하면, 아래 그림과 같은 창이 뜰 것입니다. 이 중 &lt;b&gt;C++를 사용한 데스크톱 개발&lt;/b&gt;을 클릭합니다. 오른쪽 설치 세부 정보에서, 자동으로 선택사항 중 일부가 선택될 것입니다. 혹시라도 &lt;b&gt;Windows용 C++ CMake 도구&lt;/b&gt;가 선택이 안되어있다면, &lt;b&gt;꼭 선택&lt;/b&gt;해주시기 바랍니다. 선택을 완료하셨다면 설치를 진행하시면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;vs2019buildtools_install&#34; srcset=&#34;
               /vscode-msvc/vs2019buildtools_install_huefd9916a1e1dc2faa688934edddc7916_120879_c5d8029504a4fb8ef927f8c6b3a180ce.png 400w,
               /vscode-msvc/vs2019buildtools_install_huefd9916a1e1dc2faa688934edddc7916_120879_0b55a1d22f1be37baad8292a20a41ba4.png 760w,
               /vscode-msvc/vs2019buildtools_install_huefd9916a1e1dc2faa688934edddc7916_120879_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/vs2019buildtools_install_huefd9916a1e1dc2faa688934edddc7916_120879_c5d8029504a4fb8ef927f8c6b3a180ce.png&#34;
               width=&#34;760&#34;
               height=&#34;424&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;실행&#34;&gt;실행&lt;/h3&gt;
&lt;p&gt;제대로 설치가 되었는지 확인해보겠습니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;b&gt;[WIN]+[S]&lt;/b&gt; 를 눌러 검색을 띄움&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;developer powershell&lt;/code&gt;을 입력하여 &lt;b&gt;Developer PowerShell for VS 2019&lt;/b&gt;를 찾은 뒤 실행&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;vs2019buildtools_test1&#34; srcset=&#34;
               /vscode-msvc/vs2019buildtools_test1_hu607f4985e581e7292b5d47d4b801dedf_138468_226fbd82f31d51e44fa9627733e16400.png 400w,
               /vscode-msvc/vs2019buildtools_test1_hu607f4985e581e7292b5d47d4b801dedf_138468_be659fa34a05acdcb7fbe530b7909974.png 760w,
               /vscode-msvc/vs2019buildtools_test1_hu607f4985e581e7292b5d47d4b801dedf_138468_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/vs2019buildtools_test1_hu607f4985e581e7292b5d47d4b801dedf_138468_226fbd82f31d51e44fa9627733e16400.png&#34;
               width=&#34;760&#34;
               height=&#34;623&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;cl&lt;/code&gt; 명령어와 &lt;code&gt;cmake&lt;/code&gt; 명령어를 입력하여, 다음 그림과 같이 사용법(usage)이 뜨는지 확인&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;vs2019buildtools_test2&#34; srcset=&#34;
               /vscode-msvc/vs2019buildtools_test2_hu94a7aa42ba3a8e8312a5ae88b2edc2c9_24846_2a6a75a7035c6176fb951ab1b20f22f7.png 400w,
               /vscode-msvc/vs2019buildtools_test2_hu94a7aa42ba3a8e8312a5ae88b2edc2c9_24846_d0b2445390538f91ec4903fd6b0dd1b7.png 760w,
               /vscode-msvc/vs2019buildtools_test2_hu94a7aa42ba3a8e8312a5ae88b2edc2c9_24846_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/vs2019buildtools_test2_hu94a7aa42ba3a8e8312a5ae88b2edc2c9_24846_2a6a75a7035c6176fb951ab1b20f22f7.png&#34;
               width=&#34;760&#34;
               height=&#34;397&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;이제 여러분은 MSVC에 포함된 C/C++ 빌드 도구 및 CMake 도구를 사용할 수 있게 되었습니다.&lt;/p&gt;
&lt;h3 id=&#34;vscode-실행&#34;&gt;VSCode 실행&lt;/h3&gt;
&lt;p&gt;VSCode와 MSVC를 연동하여 사용하고자 하는 경우에는, &lt;b&gt;&lt;font color=red&gt;반드시 Developer PowerShell for VS 2019를 통해 VSCode를 실행시켜야만 합니다.&lt;/font&gt;&lt;/b&gt; 그렇지 않으면, VSCode에서 MSVC 관련 툴을 인지하지 못합니다.&lt;/p&gt;
&lt;p&gt;Developer PowerShell for VS 2019에서 VSCode를 실행시키는 법은 간단합니다. 다음 그림과 같이 &lt;code&gt;code&lt;/code&gt;라는 명령어만 실행시키시면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;vs2019buildtools_vscode&#34; srcset=&#34;
               /vscode-msvc/vs2019buildtools_vscode_hu8348c4528a86525fa2392b0a2da116ad_13291_bfa1e99fb80419795fa53111b638bdeb.png 400w,
               /vscode-msvc/vs2019buildtools_vscode_hu8348c4528a86525fa2392b0a2da116ad_13291_1f77e81671e3dadffa69895898cd2817.png 760w,
               /vscode-msvc/vs2019buildtools_vscode_hu8348c4528a86525fa2392b0a2da116ad_13291_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/vs2019buildtools_vscode_hu8348c4528a86525fa2392b0a2da116ad_13291_bfa1e99fb80419795fa53111b638bdeb.png&#34;
               width=&#34;760&#34;
               height=&#34;397&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;VSCode 창이 뜨면, &lt;b&gt;[File] - [Open Folder]&lt;/b&gt;를 선택하여, 작업을 진행할 폴더를 선택해주시면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;vscode_openfolder&#34; srcset=&#34;
               /vscode-msvc/vscode_openfolder_hu04d48c7a25e5aaf0265aedbf430106de_54019_a42ed27b8f7572ec2f92b245192b2eee.png 400w,
               /vscode-msvc/vscode_openfolder_hu04d48c7a25e5aaf0265aedbf430106de_54019_6c6f446b400d5cb8ef78e06bf19e9ada.png 760w,
               /vscode-msvc/vscode_openfolder_hu04d48c7a25e5aaf0265aedbf430106de_54019_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/vscode_openfolder_hu04d48c7a25e5aaf0265aedbf430106de_54019_a42ed27b8f7572ec2f92b245192b2eee.png&#34;
               width=&#34;760&#34;
               height=&#34;647&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;extension-설치&#34;&gt;Extension 설치&lt;/h2&gt;
&lt;p&gt;이제 VSCode에서 extension을 설치할 차례입니다.&lt;/p&gt;
&lt;h3 id=&#34;cc&#34;&gt;C/C++&lt;/h3&gt;
&lt;p&gt;VSCode를 켜고 extension 탭으로 간 뒤 &amp;ldquo;&lt;strong&gt;c&lt;/strong&gt;&amp;ldquo;를 검색하세요. 맨 위에 C/C++ extension이 뜰 것입니다. Install 버튼을 눌러 설치합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;extension_c&#34; srcset=&#34;
               /vscode-msvc/extension_c_hu115aacab3740fa41f6835fd9d1b9086c_54413_6effe4ec295e401b02f8e8d25bd8cb0e.png 400w,
               /vscode-msvc/extension_c_hu115aacab3740fa41f6835fd9d1b9086c_54413_d7e0729455c36626dfc5123f0d498ede.png 760w,
               /vscode-msvc/extension_c_hu115aacab3740fa41f6835fd9d1b9086c_54413_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/extension_c_hu115aacab3740fa41f6835fd9d1b9086c_54413_6effe4ec295e401b02f8e8d25bd8cb0e.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;cmake&#34;&gt;CMake&lt;/h3&gt;
&lt;p&gt;이어서 CMake 관련 extension도 설치합니다.&lt;/p&gt;
&lt;p&gt;VSCode를 켜고 extension 탭으로 간 뒤 “&lt;strong&gt;cmake&lt;/strong&gt;“를 검색하세요. 맨 위부터 &lt;strong&gt;CMake&lt;/strong&gt;와 &lt;strong&gt;CMake Tools&lt;/strong&gt;가 뜰 것입니다. 두 가지 모두 Install 버튼을 눌러 설치합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;extension_cmake&#34; srcset=&#34;
               /vscode-msvc/extension_cmake_hu3da5222f7d42ccd615f0b10e3c843ad1_77547_4e6d4b33b76a1390296ae0108ae9ba55.png 400w,
               /vscode-msvc/extension_cmake_hu3da5222f7d42ccd615f0b10e3c843ad1_77547_46089bc2159dbb4772073c745321d074.png 760w,
               /vscode-msvc/extension_cmake_hu3da5222f7d42ccd615f0b10e3c843ad1_77547_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/extension_cmake_hu3da5222f7d42ccd615f0b10e3c843ad1_77547_4e6d4b33b76a1390296ae0108ae9ba55.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;각각의 용도는 이렇습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CMake extension: CMake 명령어에 대한 자동완성 제공. CMakeLists.txt 파일 작성에 도움&lt;/li&gt;
&lt;li&gt;CMake Tools extension: CMake 기반 프로젝트를 관리하는데에 도움&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;테스트&#34;&gt;테스트&lt;/h2&gt;
&lt;p&gt;이제 제대로 설치가 되었는지 확인할 시간입니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    경로에 &lt;strong&gt;한글&lt;/strong&gt;이 있으면 제대로 동작하지 않습니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;hello-world-프로젝트-만들어보기&#34;&gt;Hello world 프로젝트 만들어보기&lt;/h3&gt;
&lt;p&gt;CMake Tools는 &lt;b&gt;CMake: Quick Start&lt;/b&gt;라는 기능을 제공합니다. 손쉽게 CMake 기반의 Hello world 프로젝트를 만들어주는 것이죠.&lt;/p&gt;
&lt;p&gt;적당한 경로에 빈 폴더를 만들어주고 다음과 같이 진행합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cqs1&#34; srcset=&#34;
               /vscode-msvc/cqs1_hu0e7303143497f0e4a137757a573cefc0_45640_caabe28af57f76ad3462e5cede53839c.png 400w,
               /vscode-msvc/cqs1_hu0e7303143497f0e4a137757a573cefc0_45640_3da3f460f72e8cabaaf3889ef5780923.png 760w,
               /vscode-msvc/cqs1_hu0e7303143497f0e4a137757a573cefc0_45640_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/cqs1_hu0e7303143497f0e4a137757a573cefc0_45640_caabe28af57f76ad3462e5cede53839c.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cqs2&#34; srcset=&#34;
               /vscode-msvc/cqs2_hu7f22ed4d7a598ee99fbd02dc85f95eec_42358_2558a20512433bd005186796729aa5a5.png 400w,
               /vscode-msvc/cqs2_hu7f22ed4d7a598ee99fbd02dc85f95eec_42358_f9f11df871b2487e26ca5679338a6be8.png 760w,
               /vscode-msvc/cqs2_hu7f22ed4d7a598ee99fbd02dc85f95eec_42358_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/cqs2_hu7f22ed4d7a598ee99fbd02dc85f95eec_42358_2558a20512433bd005186796729aa5a5.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cqs3&#34; srcset=&#34;
               /vscode-msvc/cqs3_hu8ae8568f48c1e6cc3dda2f57b9ad71bd_73424_90322c3a2e550c599c95d82ba2446d72.png 400w,
               /vscode-msvc/cqs3_hu8ae8568f48c1e6cc3dda2f57b9ad71bd_73424_c10044573126886eedd0e2d972091b76.png 760w,
               /vscode-msvc/cqs3_hu8ae8568f48c1e6cc3dda2f57b9ad71bd_73424_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/cqs3_hu8ae8568f48c1e6cc3dda2f57b9ad71bd_73424_90322c3a2e550c599c95d82ba2446d72.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cqs4&#34; srcset=&#34;
               /vscode-msvc/cqs4_hu651e505c86ff239e93aff82d745041ea_46310_b7233074ab7ba107154fcc97db32ac24.png 400w,
               /vscode-msvc/cqs4_hu651e505c86ff239e93aff82d745041ea_46310_8cd8b9516849d5a9d8d75ca9fb813464.png 760w,
               /vscode-msvc/cqs4_hu651e505c86ff239e93aff82d745041ea_46310_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/cqs4_hu651e505c86ff239e93aff82d745041ea_46310_b7233074ab7ba107154fcc97db32ac24.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cqs5&#34; srcset=&#34;
               /vscode-msvc/cqs5_huccc2f1247fcbf6dd401b7f495cf147cb_50218_17d669e23dfa30cb3dab8686981a3128.png 400w,
               /vscode-msvc/cqs5_huccc2f1247fcbf6dd401b7f495cf147cb_50218_2a9520c56ea9bd1f1d8c0f10ab602f8f.png 760w,
               /vscode-msvc/cqs5_huccc2f1247fcbf6dd401b7f495cf147cb_50218_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/cqs5_huccc2f1247fcbf6dd401b7f495cf147cb_50218_17d669e23dfa30cb3dab8686981a3128.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cqs6&#34; srcset=&#34;
               /vscode-msvc/cqs6_hu95d915dd180392f838a32ab1e81c2198_42933_c41e8bd1a6a9127e52114d072653ffc2.png 400w,
               /vscode-msvc/cqs6_hu95d915dd180392f838a32ab1e81c2198_42933_7c3275d6d1a0e5d48b7a79780d75038b.png 760w,
               /vscode-msvc/cqs6_hu95d915dd180392f838a32ab1e81c2198_42933_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/cqs6_hu95d915dd180392f838a32ab1e81c2198_42933_c41e8bd1a6a9127e52114d072653ffc2.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;실행-1&#34;&gt;실행&lt;/h3&gt;
&lt;p&gt;다음 그림과 같이 실행하시면 됩니다. 동일 폴더 내에 &lt;b&gt;.vscode&lt;/b&gt;라는 폴더가 생기고 그 안에 CMake 설정 등에 관한 &lt;code&gt;.json&lt;/code&gt; 파일이 자동으로 생성될 것입니다. 또한, &lt;b&gt;build&lt;/b&gt;라는 폴더가 생기고 그 안에 &lt;strong&gt;CMake를 통한 빌드 부산물 및 컴파일 결과물&lt;/strong&gt;이 자동으로 생성될 것입니다.&lt;/p&gt;
&lt;p&gt;이후 아래쪽의 &lt;strong&gt;TERMINAL&lt;/strong&gt; 탭을 확인하시면, 자동 생성된 main.cpp의 내용대로 Hello, world!가 출력되는 것을 확인할 수 있습니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;run1&#34; srcset=&#34;
               /vscode-msvc/run1_hu23cbc9ee6d94a3922a35bb52f261e9f6_41631_a0936e7fd0a5303dd4898784745d755f.png 400w,
               /vscode-msvc/run1_hu23cbc9ee6d94a3922a35bb52f261e9f6_41631_0830794d6928faa454db44cb37713ac3.png 760w,
               /vscode-msvc/run1_hu23cbc9ee6d94a3922a35bb52f261e9f6_41631_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/run1_hu23cbc9ee6d94a3922a35bb52f261e9f6_41631_a0936e7fd0a5303dd4898784745d755f.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;run2&#34; srcset=&#34;
               /vscode-msvc/run2_hua87ae9c2ff262c1bd9334f65408d52c2_53270_8782fbb70eef9231d034ed3435be5a6b.png 400w,
               /vscode-msvc/run2_hua87ae9c2ff262c1bd9334f65408d52c2_53270_51d0b8047f56d8954d98888e1a03ec14.png 760w,
               /vscode-msvc/run2_hua87ae9c2ff262c1bd9334f65408d52c2_53270_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/run2_hua87ae9c2ff262c1bd9334f65408d52c2_53270_8782fbb70eef9231d034ed3435be5a6b.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;디버깅&#34;&gt;디버깅&lt;/h3&gt;
&lt;p&gt;다음 그림과 같이 진행하여 디버깅도 가능합니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    맨 처음 그림에서 보이는 바와 같이, CMake type을 Debug로 설정해야 함에 주의하세요!
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug1&#34; srcset=&#34;
               /vscode-msvc/debug1_hu164b5677826c8eacb553a5632840e7f1_67492_6e6ce9ac77aafe17495f6bb3738fcd6d.png 400w,
               /vscode-msvc/debug1_hu164b5677826c8eacb553a5632840e7f1_67492_8bd4fe75f72748f2f1abec2b49ee6738.png 760w,
               /vscode-msvc/debug1_hu164b5677826c8eacb553a5632840e7f1_67492_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/debug1_hu164b5677826c8eacb553a5632840e7f1_67492_6e6ce9ac77aafe17495f6bb3738fcd6d.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug2&#34; srcset=&#34;
               /vscode-msvc/debug2_hua21a153eb3eb6cbbd7dccc89fc1a0738_74148_90d69e79938c9aee1109b9116d6ec3ac.png 400w,
               /vscode-msvc/debug2_hua21a153eb3eb6cbbd7dccc89fc1a0738_74148_f9d287c1cb825e1f442a098e2e351024.png 760w,
               /vscode-msvc/debug2_hua21a153eb3eb6cbbd7dccc89fc1a0738_74148_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/debug2_hua21a153eb3eb6cbbd7dccc89fc1a0738_74148_90d69e79938c9aee1109b9116d6ec3ac.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug3&#34; srcset=&#34;
               /vscode-msvc/debug3_hu571b8c96d405a1ad6a1a679231de34ef_72722_5d1ce6d547d3b6774b361664d026fc88.png 400w,
               /vscode-msvc/debug3_hu571b8c96d405a1ad6a1a679231de34ef_72722_7a86a29cff6db9ce2bed4c66f0c4ae71.png 760w,
               /vscode-msvc/debug3_hu571b8c96d405a1ad6a1a679231de34ef_72722_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/debug3_hu571b8c96d405a1ad6a1a679231de34ef_72722_5d1ce6d547d3b6774b361664d026fc88.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug4&#34; srcset=&#34;
               /vscode-msvc/debug4_hu8260f189d847922232a10d48b8fb98d6_96886_19264063bdb622727eb8d20b9428bf23.png 400w,
               /vscode-msvc/debug4_hu8260f189d847922232a10d48b8fb98d6_96886_dc1e0e7796f2a56584f0e24fc089a09d.png 760w,
               /vscode-msvc/debug4_hu8260f189d847922232a10d48b8fb98d6_96886_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/debug4_hu8260f189d847922232a10d48b8fb98d6_96886_19264063bdb622727eb8d20b9428bf23.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug5&#34; srcset=&#34;
               /vscode-msvc/debug5_hu9bcbe7397ec7a3bd2daf2d3e9f7033fa_86537_4e8880b22573bb0628e8760e43c7d814.png 400w,
               /vscode-msvc/debug5_hu9bcbe7397ec7a3bd2daf2d3e9f7033fa_86537_48f79a1d99308f24c3c1818ab0a64c3b.png 760w,
               /vscode-msvc/debug5_hu9bcbe7397ec7a3bd2daf2d3e9f7033fa_86537_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/debug5_hu9bcbe7397ec7a3bd2daf2d3e9f7033fa_86537_4e8880b22573bb0628e8760e43c7d814.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;command-line-argument-설정&#34;&gt;Command line argument 설정&lt;/h3&gt;
&lt;p&gt;실행하거나 디버깅할 때, command line argument를 넘겨주도록 설정하고 싶을 때가 있습니다.&lt;/p&gt;
&lt;p&gt;이는 &lt;b&gt;.vscode/settings.json 파일을 생성&lt;/b&gt;해주고, 해당 파일에서 &lt;code&gt;cmake.debugConfig&lt;/code&gt;인자로서 입력해줘야 합니다.&lt;/p&gt;
&lt;h4 id=&#34;테스트-코드-수정&#34;&gt;테스트 코드 수정&lt;/h4&gt;
&lt;p&gt;그 전에 먼저 argument가 제대로 동작하는지 확인하기 위해 main.cpp 코드를 수정하겠습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#include &amp;lt;iostream&amp;gt;

int main(int argc, char**) {
    std::cout &amp;lt;&amp;lt; &amp;quot;Hello, world!\n&amp;quot;;
    std::cout &amp;lt;&amp;lt; &amp;quot;argc: &amp;quot; &amp;lt;&amp;lt; argc &amp;lt;&amp;lt; std::endl;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;이 상태로 그냥 실행해보면 다음과 같이 나타날 것입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;arg1&#34; srcset=&#34;
               /vscode-msvc/arg1_hu3a15c3b7e617d931524b050348937c2a_48397_34c28f2952277af9d574ae29d4482c71.png 400w,
               /vscode-msvc/arg1_hu3a15c3b7e617d931524b050348937c2a_48397_f4a8f7ec275524a9111222bf92809d79.png 760w,
               /vscode-msvc/arg1_hu3a15c3b7e617d931524b050348937c2a_48397_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/arg1_hu3a15c3b7e617d931524b050348937c2a_48397_34c28f2952277af9d574ae29d4482c71.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h4 id=&#34;settingsjson-설정-및-실행&#34;&gt;settings.json 설정 및 실행&lt;/h4&gt;
&lt;p&gt;이제 settings.json 파일을 만들어 보겠습니다. (이미 만들어져 있을 수도 있습니다만, 그대로 진행하시면 됩니다)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;다음 그림과 같이 File - Preferences - Settings를 클릭합니다. 단축키는 &lt;b&gt;[CTRL]+[,]&lt;/b&gt; 입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;arg2&#34; srcset=&#34;
               /vscode-msvc/arg2_huee035e19a4a82fd2afe280a473865c1e_95774_56b5c80af94e7c09a01234bd2dc3b9dc.png 400w,
               /vscode-msvc/arg2_huee035e19a4a82fd2afe280a473865c1e_95774_65c616437706abe59a2dbc43109e2633.png 760w,
               /vscode-msvc/arg2_huee035e19a4a82fd2afe280a473865c1e_95774_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/arg2_huee035e19a4a82fd2afe280a473865c1e_95774_56b5c80af94e7c09a01234bd2dc3b9dc.png&#34;
               width=&#34;760&#34;
               height=&#34;549&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;여기서 Workspace 탭을 클릭합니다. 이 프로젝트(workspace)에만 적용되는 설정항목이라는 뜻입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;arg3&#34; srcset=&#34;
               /vscode-msvc/arg3_hu27dcf0e43bc0a941f885a9e8bbb5dd1a_70248_89aded21624db7e599b13f64312ffbc8.png 400w,
               /vscode-msvc/arg3_hu27dcf0e43bc0a941f885a9e8bbb5dd1a_70248_13eb3447d52efcc9587d006f0fe4e81b.png 760w,
               /vscode-msvc/arg3_hu27dcf0e43bc0a941f885a9e8bbb5dd1a_70248_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/arg3_hu27dcf0e43bc0a941f885a9e8bbb5dd1a_70248_89aded21624db7e599b13f64312ffbc8.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;상단 검색창에 &lt;code&gt;cmake.debugConfig&lt;/code&gt;를 검색한 뒤, &lt;u&gt;Edit in settings.json&lt;/u&gt; 부분을 클릭합니다. &lt;code&gt;cmake.debug&lt;/code&gt; 정도만 입력하셔도 바로 뜰 것입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;arg4&#34; srcset=&#34;
               /vscode-msvc/arg4_hub35353a5b53ed0a09d9dc6a0af763b24_87426_76799a240fa2170b3a90649176dbadcb.png 400w,
               /vscode-msvc/arg4_hub35353a5b53ed0a09d9dc6a0af763b24_87426_748696740cce29f2715b14ab0cbbe055.png 760w,
               /vscode-msvc/arg4_hub35353a5b53ed0a09d9dc6a0af763b24_87426_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/arg4_hub35353a5b53ed0a09d9dc6a0af763b24_87426_76799a240fa2170b3a90649176dbadcb.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;클릭하시면 바로 다음과 같이 &lt;code&gt;.vscode/settings.json&lt;/code&gt; 폴더 및 파일이 생성되고, settings.json 파일이 열리며, 그 안에 다음 그림과 같은 내용이 자동으로 작성되어 있을 것입니다. (추가로 다른 내용이 더 쓰여있을 수도 있습니다.)&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;arg5&#34; srcset=&#34;
               /vscode-msvc/arg5_hu78284473b6cc163dc60de15408c7f415_67837_ccbdd3d38192395f02b0ca3a07701225.png 400w,
               /vscode-msvc/arg5_hu78284473b6cc163dc60de15408c7f415_67837_31882fb69a1599a520fda4d0b80951be.png 760w,
               /vscode-msvc/arg5_hu78284473b6cc163dc60de15408c7f415_67837_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/arg5_hu78284473b6cc163dc60de15408c7f415_67837_ccbdd3d38192395f02b0ca3a07701225.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;이제 이 안에 &lt;code&gt;args&lt;/code&gt; 항목을 만들어 command line argument를 설정합니다. 실행파일명 뒤에 이어질 추가적인 argument들만 적어주면 되며, 각 항목은 &amp;ldquo;&amp;quot;(double-quote)로 묶어주고 ,(comma)로 분리해주면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;arg6&#34; srcset=&#34;
               /vscode-msvc/arg6_hu0c67c12b1cda36a60f2a210f9ef8732f_56962_b6ae80161893bbf02e68257e051ba56f.png 400w,
               /vscode-msvc/arg6_hu0c67c12b1cda36a60f2a210f9ef8732f_56962_c9ff1596f853439e269c3e58da89d3ba.png 760w,
               /vscode-msvc/arg6_hu0c67c12b1cda36a60f2a210f9ef8732f_56962_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/arg6_hu0c67c12b1cda36a60f2a210f9ef8732f_56962_b6ae80161893bbf02e68257e051ba56f.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;이제 저장한 뒤, 실행이나 디버깅을 해보면 다음과 같이 command line argument가 잘 반영된 것을 확인할 수 있습니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;arg7&#34; srcset=&#34;
               /vscode-msvc/arg7_hu72e75db658e05d1b13d2f3cc7bc1f901_53536_a83fb439045a7589d4e825bdef5b78dc.png 400w,
               /vscode-msvc/arg7_hu72e75db658e05d1b13d2f3cc7bc1f901_53536_193e7f64d30ffcba4b84ba7d57d00d13.png 760w,
               /vscode-msvc/arg7_hu72e75db658e05d1b13d2f3cc7bc1f901_53536_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/arg7_hu72e75db658e05d1b13d2f3cc7bc1f901_53536_a83fb439045a7589d4e825bdef5b78dc.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>VSCode Python 환경에서 Jupyter 및 plotly 사용하기</title>
      <link>https://evandde.github.io/vscode-jupyter-python-plotly/</link>
      <pubDate>Mon, 23 Aug 2021 23:54:44 +0900</pubDate>
      <guid>https://evandde.github.io/vscode-jupyter-python-plotly/</guid>
      <description>&lt;p&gt;VSCode에서 Python3 언어를 사용할 때, Jupyter와 plotly를 연동하여 사용하는 환경을 구축하는 방법에 대해 알아봅니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    여기서는 &lt;b&gt;VSCode에서의 python3 환경을 구축한 상태&lt;/b&gt;라고 가정합니다. 이에 관한 내용은 &lt;a href=&#34;https://evandde.github.io/vscode-python/&#34;&gt;이 글&lt;/a&gt;을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;소개&#34;&gt;소개&lt;/h2&gt;
&lt;h3 id=&#34;jupyter&#34;&gt;Jupyter&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://jupyter.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jupyter&lt;/a&gt;는 프로그래밍 언어를 이용할 때 &lt;b&gt;인터랙티브하게 개발할 수 있는 환경을 제공&lt;/b&gt;하는 오픈소스 소프트웨어입니다. Python과 연동하게 되면, 셀단위 실행, 변수 모니터링 등 다양한 기능을 활용할 수 있죠.&lt;/p&gt;
&lt;h3 id=&#34;plotly&#34;&gt;plotly&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://plotly.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;plotly&lt;/a&gt;는 인터랙티브하게 이용할 수 있는 데이터 가시화 패키지입니다. Python과도 연동하여 사용 가능하며, 무엇보다 UI가 고급스럽고 마우스를 이용한 여러가지 조작이 가능합니다. 데이터 가시화를 위해 가장 많이 알려진 패키지는 matplotlib입니다만, 저는 개인적으로 plotly가 더 예뻐서 이쪽을 선호합니다.&lt;/p&gt;
&lt;h3 id=&#34;사용-예시&#34;&gt;사용 예시&lt;/h3&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;00_example&#34; srcset=&#34;
               /vscode-jupyter-python-plotly/00_example_hu84b3308bc8aaa370638fd580fe0a687c_176482_109edb5ec40c64e4e0479da7ccc609ab.png 400w,
               /vscode-jupyter-python-plotly/00_example_hu84b3308bc8aaa370638fd580fe0a687c_176482_0cdc06034602e3d4b765570b9c0b4e05.png 760w,
               /vscode-jupyter-python-plotly/00_example_hu84b3308bc8aaa370638fd580fe0a687c_176482_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-jupyter-python-plotly/00_example_hu84b3308bc8aaa370638fd580fe0a687c_176482_109edb5ec40c64e4e0479da7ccc609ab.png&#34;
               width=&#34;760&#34;
               height=&#34;619&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;jupyter-설치-및-실행&#34;&gt;Jupyter 설치 및 실행&lt;/h2&gt;
&lt;h3 id=&#34;extension설치&#34;&gt;Extension설치&lt;/h3&gt;
&lt;p&gt;먼저 VSCode에서 Jupyter extension을 설치하겠습니다.&lt;/p&gt;
&lt;p&gt;VSCode를 켜고, extension 탭으로 간 뒤 &amp;quot;&lt;b&gt;jupyter&lt;/b&gt;&amp;quot;를 검색하세요. 맨 위에 jupyter extension이 뜰 것입니다. Install 버튼을 눌러 설치합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;01_extension_jupyter&#34; srcset=&#34;
               /vscode-jupyter-python-plotly/01_extension_jupyter_hucf331c4ef50858724f10e1d614990a97_98890_5827adfa0276741e7449619fc8b6dd8e.png 400w,
               /vscode-jupyter-python-plotly/01_extension_jupyter_hucf331c4ef50858724f10e1d614990a97_98890_dad5b1bfe85c8bac300eb0dc569217bb.png 760w,
               /vscode-jupyter-python-plotly/01_extension_jupyter_hucf331c4ef50858724f10e1d614990a97_98890_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-jupyter-python-plotly/01_extension_jupyter_hucf331c4ef50858724f10e1d614990a97_98890_5827adfa0276741e7449619fc8b6dd8e.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;ipykernel-설치&#34;&gt;ipykernel 설치&lt;/h3&gt;
&lt;p&gt;python에서 jupyter를 사용하기 위해서는, python 패키지 중 &lt;b&gt;ipykernel&lt;/b&gt;을 설치해야 합니다. VSCode에서 Jupyter를 실행해보면 ipykernel이 없는 경우 다음 그림과 같이 &lt;b&gt;ipykernel을 설치할 것인지 묻는 알림창이 자동으로 뜹니다&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;02_install_ipykernel&#34; srcset=&#34;
               /vscode-jupyter-python-plotly/02_install_ipykernel_hu7c5969babf2ed4168b4504aaf1c01636_48594_740cb887a2947aac2590b50eed08b0b3.png 400w,
               /vscode-jupyter-python-plotly/02_install_ipykernel_hu7c5969babf2ed4168b4504aaf1c01636_48594_a68919893e6a489beb591d5b89d2a495.png 760w,
               /vscode-jupyter-python-plotly/02_install_ipykernel_hu7c5969babf2ed4168b4504aaf1c01636_48594_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-jupyter-python-plotly/02_install_ipykernel_hu7c5969babf2ed4168b4504aaf1c01636_48594_740cb887a2947aac2590b50eed08b0b3.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;만약 이 창이 안뜬다면, powershell이나 vscode의 Terminal에서 다음 명령어를 입력하여 직접 설치해주셔도 됩니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install ipykernel
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;실행&#34;&gt;실행&lt;/h3&gt;
&lt;p&gt;[View] - [Command Palette]를 눌러 명령창을 띄운 뒤, &amp;quot;&lt;b&gt;jupyter interactive&lt;/b&gt;&amp;quot;를 입력하여 Jupyter: Create Interactive Window를 클릭합니다. 다음 그림을 참고하세요.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;03_run_jupyter&#34; srcset=&#34;
               /vscode-jupyter-python-plotly/03_run_jupyter_hu625978a17bd1a8668e96036751bba67f_51742_9d9a31ada0268504e86a8016d29a7ee1.png 400w,
               /vscode-jupyter-python-plotly/03_run_jupyter_hu625978a17bd1a8668e96036751bba67f_51742_2944e1121b61fdc0b1a58993230e1dcb.png 760w,
               /vscode-jupyter-python-plotly/03_run_jupyter_hu625978a17bd1a8668e96036751bba67f_51742_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-jupyter-python-plotly/03_run_jupyter_hu625978a17bd1a8668e96036751bba67f_51742_9d9a31ada0268504e86a8016d29a7ee1.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;04_run_jupyter&#34; srcset=&#34;
               /vscode-jupyter-python-plotly/04_run_jupyter_hu6ed25e2c3ad2973c88acd659e3feee89_54354_dee4eb1faa0930088a0d65064ba2e270.png 400w,
               /vscode-jupyter-python-plotly/04_run_jupyter_hu6ed25e2c3ad2973c88acd659e3feee89_54354_0bc16652c785ecc542c67633062b0932.png 760w,
               /vscode-jupyter-python-plotly/04_run_jupyter_hu6ed25e2c3ad2973c88acd659e3feee89_54354_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-jupyter-python-plotly/04_run_jupyter_hu6ed25e2c3ad2973c88acd659e3feee89_54354_dee4eb1faa0930088a0d65064ba2e270.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Jupyter Interactive Window가 잘 떴다면, 아래쪽의 명령줄 부분에 명령어를 입력한 뒤 &lt;b&gt;[SHIFT]+[ENTER]&lt;/b&gt; 키를 눌러 정상 동작 여부를 확인해보실 수 있습니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;05_install_ipykernel&#34; srcset=&#34;
               /vscode-jupyter-python-plotly/05_install_ipykernel_hu69cce9727a4d5ee17f46e7f28c15b5d8_87260_404ef556bfacf4b50fa6e40df5ebdba5.png 400w,
               /vscode-jupyter-python-plotly/05_install_ipykernel_hu69cce9727a4d5ee17f46e7f28c15b5d8_87260_946adedda8dd0ef3019d6cc377d2c19a.png 760w,
               /vscode-jupyter-python-plotly/05_install_ipykernel_hu69cce9727a4d5ee17f46e7f28c15b5d8_87260_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-jupyter-python-plotly/05_install_ipykernel_hu69cce9727a4d5ee17f46e7f28c15b5d8_87260_404ef556bfacf4b50fa6e40df5ebdba5.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;더불어, 창 위쪽의 Variables 버튼을 누르면 다음 그림과 같이 현재 메모리에 저장된 변수도 모니터링할 수 있습니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;06_variables&#34; srcset=&#34;
               /vscode-jupyter-python-plotly/06_variables_hu1399600719818c75ef5c973b561de23b_51335_c39410c47c8059b1e5c53a2564460c48.png 400w,
               /vscode-jupyter-python-plotly/06_variables_hu1399600719818c75ef5c973b561de23b_51335_f1b47011e5e113df055096305288ab8a.png 760w,
               /vscode-jupyter-python-plotly/06_variables_hu1399600719818c75ef5c973b561de23b_51335_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-jupyter-python-plotly/06_variables_hu1399600719818c75ef5c973b561de23b_51335_c39410c47c8059b1e5c53a2564460c48.png&#34;
               width=&#34;760&#34;
               height=&#34;648&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;python-인터프리터-설정&#34;&gt;python 인터프리터 설정&lt;/h3&gt;
&lt;p&gt;Jupyter에서 사용할 인터프리터는 Jupyter Interactive Window의 오른쪽 위에서 선택할 수 있습니다. venv 등을 사용하고 있거나, 여러 버전의 python을 이용하는 경우에는 이를 통해 원하는 인터프리터로 변경하여 선택할 수 있습니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;07_pythonselect&#34; srcset=&#34;
               /vscode-jupyter-python-plotly/07_pythonselect_huf637478f69785b337c9523802c51b2f5_84611_885940754a5c4ab9fcccafe683b2e9dd.png 400w,
               /vscode-jupyter-python-plotly/07_pythonselect_huf637478f69785b337c9523802c51b2f5_84611_97532b06853e94cb25097ae7b0d3e77b.png 760w,
               /vscode-jupyter-python-plotly/07_pythonselect_huf637478f69785b337c9523802c51b2f5_84611_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-jupyter-python-plotly/07_pythonselect_huf637478f69785b337c9523802c51b2f5_84611_885940754a5c4ab9fcccafe683b2e9dd.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;py-파일과의-연동&#34;&gt;.py 파일과의 연동&lt;/h3&gt;
&lt;p&gt;python 코드로 작성한 파일에 대해서도 Jupyter를 통해 실행시킬 수 있습니다. 테스트를 위해 main.py 파일을 만들고 다음과 같이 코드를 작성하겠습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# %%
arr = [1, 2, 3]

# %%
for i in arr:
    print(i)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;여기서 주석을 &lt;code&gt;# %%&lt;/code&gt;라고 달았는데요, 이렇게 달아주면 Jupyter에서 &lt;code&gt;# %%&lt;/code&gt;와 다음 &lt;code&gt;# %%&lt;/code&gt;까지의 영역을 &lt;b&gt;Cell&lt;/b&gt;이라는 단위로 구분지어줍니다. 그러면, Jupyter에서 각 Cell 단위로 실행시키거나 디버깅을 수행해볼 수 있습니다. 다음 그림을 참고하세요.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;08_cell&#34; srcset=&#34;
               /vscode-jupyter-python-plotly/08_cell_huca81c7c74f805326abd99b5423ef466d_65950_4ac80e5251a2425d5cf0a2cff50f3177.png 400w,
               /vscode-jupyter-python-plotly/08_cell_huca81c7c74f805326abd99b5423ef466d_65950_e2b6bc513c07a6ee50aa43c1b14de14d.png 760w,
               /vscode-jupyter-python-plotly/08_cell_huca81c7c74f805326abd99b5423ef466d_65950_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-jupyter-python-plotly/08_cell_huca81c7c74f805326abd99b5423ef466d_65950_4ac80e5251a2425d5cf0a2cff50f3177.png&#34;
               width=&#34;760&#34;
               height=&#34;648&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;plotly-설치-및-jupyter-연동&#34;&gt;plotly 설치 및 Jupyter 연동&lt;/h2&gt;
&lt;h3 id=&#34;설치&#34;&gt;설치&lt;/h3&gt;
&lt;p&gt;이제 &lt;b&gt;plotly&lt;/b&gt;를 사용하기 위한 환경을 구축해봅시다.&lt;/p&gt;
&lt;p&gt;필요한 패키지는 3가지입니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;plotly 패키지: plotly를 사용하기 위해 당연히 필수&lt;/li&gt;
&lt;li&gt;nbformat 패키지: plotly를 Jupyter에서 사용하기 위해 필요한 패키지&lt;/li&gt;
&lt;li&gt;pandas 패키지: plotly에 넣어줄 데이터 관리를 위해 사실상 필수인 패키지&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;세 가지 패키지 모두 &lt;code&gt;pip&lt;/code&gt;를 이용하여 설치를 할 것입니다. &lt;b&gt;Powershell&lt;/b&gt;이나 &lt;b&gt;vscode의 Terminal&lt;/b&gt;에서 다음 명령어를 입력하여 설치할 수 있습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install plotly
pip install nbformat
pip install pandas
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;실행-1&#34;&gt;실행&lt;/h3&gt;
&lt;p&gt;모든 패키지를 설치하셨다면, &lt;b&gt;&lt;font color=red&gt;실행에 앞서 Jupyter Interactive Window 창을 다시 한 번 껐다가 켜시기 바랍니다.&lt;/font&gt;&lt;/b&gt; 그래야만 Jupyter에서 방금 설치한 패키지 상황을 인지합니다.&lt;/p&gt;
&lt;p&gt;이제 간단한 예제를 통해 테스트를 해봅시다. 다음 코드는 plotly 홈페이지에서 제공하는 공식 예제 중 하나입니다. (&lt;a href=&#34;https://plotly.com/python/plotly-express/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;참고링크&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;앞서 Jupyter의 test를 수행했던 명령줄에 다음 코드를 입력한 뒤, &lt;b&gt;[SHIFT]+[ENTER]&lt;/b&gt; 키를 눌러줍니다. 참고로, 명령줄 내에서 그냥 [ENTER] 키를 누르시면 줄바꿈이 됩니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import plotly.express as px
df = px.data.iris()
fig = px.scatter(df, x=&amp;quot;sepal_width&amp;quot;, y=&amp;quot;sepal_length&amp;quot;, color=&amp;quot;species&amp;quot;)
fig.show()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;다음 그림과 같이, 실행 결과로 그래프가 잘 나오면 성공입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;09_plotly&#34; srcset=&#34;
               /vscode-jupyter-python-plotly/09_plotly_hu07d51a1745c38e8e1a633129b3cf4bdf_85789_a8c43ee5d59c630ea06ae426272fd760.png 400w,
               /vscode-jupyter-python-plotly/09_plotly_hu07d51a1745c38e8e1a633129b3cf4bdf_85789_48ca846e018f4d84598a98127e06eab5.png 760w,
               /vscode-jupyter-python-plotly/09_plotly_hu07d51a1745c38e8e1a633129b3cf4bdf_85789_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-jupyter-python-plotly/09_plotly_hu07d51a1745c38e8e1a633129b3cf4bdf_85789_a8c43ee5d59c630ea06ae426272fd760.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;10_plotly&#34; srcset=&#34;
               /vscode-jupyter-python-plotly/10_plotly_hu72315a7564607626f096777b42aef0c3_136558_af1533c167b558b4516ffa60acafdef3.png 400w,
               /vscode-jupyter-python-plotly/10_plotly_hu72315a7564607626f096777b42aef0c3_136558_c999626570426091a1dfb4d517702364.png 760w,
               /vscode-jupyter-python-plotly/10_plotly_hu72315a7564607626f096777b42aef0c3_136558_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-jupyter-python-plotly/10_plotly_hu72315a7564607626f096777b42aef0c3_136558_af1533c167b558b4516ffa60acafdef3.png&#34;
               width=&#34;760&#34;
               height=&#34;619&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://jupyter.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Project Jupyter | Home&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://code.visualstudio.com/docs/datascience/jupyter-notebooks&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Working with Jupyter Notebooks in Visual Studio Code&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://plotly.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plotly: The front end for ML and data science models&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Visual Studio Code에서 Python3의 venv 사용하기</title>
      <link>https://evandde.github.io/vscode-python-venv/</link>
      <pubDate>Mon, 22 Feb 2021 12:50:01 +0900</pubDate>
      <guid>https://evandde.github.io/vscode-python-venv/</guid>
      <description>&lt;p&gt;VSCode에서 Python3의 기능 중 가상환경을 설정하는 venv를 사용하는 방법에 대해 알아봅니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    여기서는 &lt;b&gt;VSCode에서의 python3 환경을 구축한 상태&lt;/b&gt;라고 가정합니다. 이에 관한 내용은 &lt;a href=&#34;https://evandde.github.io/vscode-python/&#34;&gt;이 글&lt;/a&gt;을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;가상환경-생성&#34;&gt;가상환경 생성&lt;/h2&gt;
&lt;p&gt;다음 명령어를 통해 python3에서 제공하는 venv 기능을 사용할 수 있습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;python -m venv ./venv
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;vscode에서의-설정&#34;&gt;VSCode에서의 설정&lt;/h2&gt;
&lt;p&gt;vscode를 실행하고, &lt;code&gt;.py&lt;/code&gt; 확장자의 빈 파일을 한 개 생성합니다. 그러면, vscode에서 자동으로 python 파일임을 인식하여 &lt;strong&gt;왼쪽 아래에 python 인터프리터가 연동되는 것을 확인할 수 있습니다&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;newfile&#34; srcset=&#34;
               /vscode-python-venv/newfile_hufbedf9c76eedf5682024779181477235_38316_d4ed2b67376f93ba31de438cddc58cb1.png 400w,
               /vscode-python-venv/newfile_hufbedf9c76eedf5682024779181477235_38316_37d04a63028dcb9501134a7ab4b50b67.png 760w,
               /vscode-python-venv/newfile_hufbedf9c76eedf5682024779181477235_38316_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python-venv/newfile_hufbedf9c76eedf5682024779181477235_38316_d4ed2b67376f93ba31de438cddc58cb1.png&#34;
               width=&#34;760&#34;
               height=&#34;571&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;이 곳을 클릭하면 다음과 같이 연동할 python 인터프리터의 목록이 뜹니다.&lt;/p&gt;
&lt;p&gt;다음 그림을 따라 우리가 만들어둔 &lt;code&gt;venv/Scripts/python.exe&lt;/code&gt;를 인터프리터로 선택해주면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;selectpython1&#34; srcset=&#34;
               /vscode-python-venv/selectpython1_hu1814e1b35c11d8f3a219191ee330fac8_52889_a4c0c4f74ffb8d6b6454679cbeeed090.png 400w,
               /vscode-python-venv/selectpython1_hu1814e1b35c11d8f3a219191ee330fac8_52889_5f4e4faf1c5302fccb6da2f17d2b577c.png 760w,
               /vscode-python-venv/selectpython1_hu1814e1b35c11d8f3a219191ee330fac8_52889_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python-venv/selectpython1_hu1814e1b35c11d8f3a219191ee330fac8_52889_a4c0c4f74ffb8d6b6454679cbeeed090.png&#34;
               width=&#34;760&#34;
               height=&#34;571&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;selectpython2&#34; srcset=&#34;
               /vscode-python-venv/selectpython2_huf3c3f0c157cbe815198cc7c758825965_32669_5f87d5c7aec8ec38e4c2e5b82b4ee184.png 400w,
               /vscode-python-venv/selectpython2_huf3c3f0c157cbe815198cc7c758825965_32669_5c2d4767ae0f3328a7bb3107bc815029.png 760w,
               /vscode-python-venv/selectpython2_huf3c3f0c157cbe815198cc7c758825965_32669_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python-venv/selectpython2_huf3c3f0c157cbe815198cc7c758825965_32669_5f87d5c7aec8ec38e4c2e5b82b4ee184.png&#34;
               width=&#34;760&#34;
               height=&#34;571&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;selectpython3&#34; srcset=&#34;
               /vscode-python-venv/selectpython3_hub7f3cb9643ae745be6b48394f2e50cdf_49574_15c2bf6fd278654efbb63e8aa9f96fd2.png 400w,
               /vscode-python-venv/selectpython3_hub7f3cb9643ae745be6b48394f2e50cdf_49574_5058619fc1a18325576fddc7993948e0.png 760w,
               /vscode-python-venv/selectpython3_hub7f3cb9643ae745be6b48394f2e50cdf_49574_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python-venv/selectpython3_hub7f3cb9643ae745be6b48394f2e50cdf_49574_15c2bf6fd278654efbb63e8aa9f96fd2.png&#34;
               width=&#34;760&#34;
               height=&#34;572&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;이 과정을 완료하면, &lt;code&gt;.vscode&lt;/code&gt;라는 폴더가 생기게 되고 이 안에 settings.json이라는 파일이 자동 생성됩니다. 이 파일을 열어보면, python 인터프리터의 경로가 우리가 만든 venv의 것으로 설정되고 있음을 확인할 수 있습니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;settings_json&#34; srcset=&#34;
               /vscode-python-venv/settings_json_hu33259f9b5f60deca83d74c432fff1574_35498_950013125438d6295bda148d2b4a101f.png 400w,
               /vscode-python-venv/settings_json_hu33259f9b5f60deca83d74c432fff1574_35498_0d9921d861c9edf99f1036ee5cc41d33.png 760w,
               /vscode-python-venv/settings_json_hu33259f9b5f60deca83d74c432fff1574_35498_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python-venv/settings_json_hu33259f9b5f60deca83d74c432fff1574_35498_950013125438d6295bda148d2b4a101f.png&#34;
               width=&#34;760&#34;
               height=&#34;572&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Visual Studio Code에서 Python3 환경 설정하기</title>
      <link>https://evandde.github.io/vscode-python/</link>
      <pubDate>Mon, 22 Feb 2021 11:33:18 +0900</pubDate>
      <guid>https://evandde.github.io/vscode-python/</guid>
      <description>&lt;p&gt;VSCode에서 Python3 언어를 사용하기 위해 실행/디버깅 등이 가능한 환경을 구축하는 방법에 대해 알아봅니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    여기서는 &lt;b&gt;VSCode 설치를 완료한 상태&lt;/b&gt;라고 가정합니다. VSCode 설치 및 기본 세팅은 &lt;a href=&#34;https://evandde.github.io/vscode/&#34;&gt;이 글&lt;/a&gt;을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;컴파일러디버거-설치&#34;&gt;컴파일러/디버거 설치&lt;/h2&gt;
&lt;p&gt;VSCode는 Python3 언어용 인터프리터를 자체적으로 내장하고있지 않습니다. 때문에 Python3 언어를 VSCode에서 사용하려면, 인터프리터를 직접 설치하고 이를 연동해주는 작업이 필요합니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    Extension을 설치한다고 해서 인터프리터가 설치되는 것은 아닙니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;windows를-이용하는-경우&#34;&gt;Windows를 이용하는 경우&lt;/h3&gt;
&lt;p&gt;Windows는 기본적으로 Python3 언어용 인터프리터를 제공하지 않습니다. 따라서, 우리가 직접 설치해주어야 합니다.&lt;/p&gt;
&lt;p&gt;이는 chocolatey를 통해 쉽게 설치할 수 있습니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Chocolatey는 Windows용 패키지 관리자입니다. 아직 사용 방법을 모르신다면, &lt;a href=&#34;https://evandde.github.io/chocolatey/&#34;&gt;이 글&lt;/a&gt;을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;choco install python -y
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;python&#34; srcset=&#34;
               /vscode-python/python_hu6e2d05cb9a13539a28afd7639719bf5c_41500_703bb37218bd66563d4e36da4f28e468.png 400w,
               /vscode-python/python_hu6e2d05cb9a13539a28afd7639719bf5c_41500_11fd434edc6ee46a7e147ed94c4a04e4.png 760w,
               /vscode-python/python_hu6e2d05cb9a13539a28afd7639719bf5c_41500_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python/python_hu6e2d05cb9a13539a28afd7639719bf5c_41500_703bb37218bd66563d4e36da4f28e468.png&#34;
               width=&#34;740&#34;
               height=&#34;494&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;다음 명령어를 통해 설치가 잘 되었는지 확인해보세요.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;python --version
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;Chocolatey 특성 상, 설치한 직후에는 &lt;code&gt;python&lt;/code&gt; 명령어를 인식하지 못할 수 있습니다.&lt;/p&gt;
&lt;p&gt;PowerShell을 껐다 켜거나, &lt;code&gt;refreshenv&lt;/code&gt; 명령어를 활용하세요.&lt;/p&gt;

  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;python_version_windows&#34; srcset=&#34;
               /vscode-python/python_version_windows_hu387b960dddce961ae4b280eb6c79089d_2919_92890a0be2655ca0d77ed47cd717dbd7.png 400w,
               /vscode-python/python_version_windows_hu387b960dddce961ae4b280eb6c79089d_2919_4622c0f932ccf2499dff9c47085e2f70.png 760w,
               /vscode-python/python_version_windows_hu387b960dddce961ae4b280eb6c79089d_2919_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python/python_version_windows_hu387b960dddce961ae4b280eb6c79089d_2919_92890a0be2655ca0d77ed47cd717dbd7.png&#34;
               width=&#34;480&#34;
               height=&#34;41&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;extension-설치&#34;&gt;Extension 설치&lt;/h2&gt;
&lt;p&gt;이제 VSCode에서 extension을 설치할 차례입니다.&lt;/p&gt;
&lt;p&gt;VSCode를 켜고 extension 탭으로 간 뒤 &amp;quot;&lt;strong&gt;python&lt;/strong&gt;&amp;quot;를 검색하세요. 맨 위에 python extension이 뜰 것입니다. Install 버튼을 눌러 설치합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;extension_python&#34; srcset=&#34;
               /vscode-python/extension_python_hu5ac9417cd662cdf9460ddfba50989f19_72511_ad2e777e59664c609e2bc81c4fa56b1d.png 400w,
               /vscode-python/extension_python_hu5ac9417cd662cdf9460ddfba50989f19_72511_bf1a4e1d4575305c39fb888add3b0126.png 760w,
               /vscode-python/extension_python_hu5ac9417cd662cdf9460ddfba50989f19_72511_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python/extension_python_hu5ac9417cd662cdf9460ddfba50989f19_72511_ad2e777e59664c609e2bc81c4fa56b1d.png&#34;
               width=&#34;760&#34;
               height=&#34;571&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;테스트&#34;&gt;테스트&lt;/h2&gt;
&lt;p&gt;이제 제대로 설치가 되었는지 확인할 시간입니다.&lt;/p&gt;
&lt;h3 id=&#34;코드-작성&#34;&gt;코드 작성&lt;/h3&gt;
&lt;p&gt;Explorer 탭으로 이동하여 적당한 경로에 &lt;b&gt;main.py&lt;/b&gt;라는 새 파일을 만들어주고 다음과 같이 작성하도록 하겠습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(&amp;quot;Hello, World!&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;codewriting&#34; srcset=&#34;
               /vscode-python/codewriting_hu3258aa037c885de537f74aef06ed958c_38131_44b6e59100ba6c21f3737ad02b2b1435.png 400w,
               /vscode-python/codewriting_hu3258aa037c885de537f74aef06ed958c_38131_2999fa9618f6388a376fb978f9fffa3f.png 760w,
               /vscode-python/codewriting_hu3258aa037c885de537f74aef06ed958c_38131_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python/codewriting_hu3258aa037c885de537f74aef06ed958c_38131_44b6e59100ba6c21f3737ad02b2b1435.png&#34;
               width=&#34;695&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;실행&#34;&gt;실행&lt;/h3&gt;
&lt;p&gt;다음 그림과 같이 [Run]-[Run Without Debugging]을 눌러 실행하시면 됩니다.&lt;/p&gt;
&lt;p&gt;이후 아래쪽의 &lt;strong&gt;TERMINAL&lt;/strong&gt; 탭을 확인하시면, 우리가 작성한대로 Hello, World!가 화면에 출력되는 것을 확인할 수 있습니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;run1&#34; srcset=&#34;
               /vscode-python/run1_hu2e74798ec29e178f2d2d60cef2edcb88_42206_51c57614711bb021536456f995e838cb.png 400w,
               /vscode-python/run1_hu2e74798ec29e178f2d2d60cef2edcb88_42206_943b665ca312c50cf36a7de895ba9f9e.png 760w,
               /vscode-python/run1_hu2e74798ec29e178f2d2d60cef2edcb88_42206_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python/run1_hu2e74798ec29e178f2d2d60cef2edcb88_42206_51c57614711bb021536456f995e838cb.png&#34;
               width=&#34;760&#34;
               height=&#34;571&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;run2&#34; srcset=&#34;
               /vscode-python/run2_hu15dd6c7e5bc1232eda1d5a0707ac041f_52244_ea85ba663330cae3476d81755912bee8.png 400w,
               /vscode-python/run2_hu15dd6c7e5bc1232eda1d5a0707ac041f_52244_7dafbdad8ec61ed19f3e19c142daa49b.png 760w,
               /vscode-python/run2_hu15dd6c7e5bc1232eda1d5a0707ac041f_52244_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python/run2_hu15dd6c7e5bc1232eda1d5a0707ac041f_52244_ea85ba663330cae3476d81755912bee8.png&#34;
               width=&#34;760&#34;
               height=&#34;571&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;디버깅&#34;&gt;디버깅&lt;/h3&gt;
&lt;p&gt;다음 그림과 같이 진행하여 디버깅도 가능합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug1&#34; srcset=&#34;
               /vscode-python/debug1_huea92c79a15bd67ab41dc987ee2336c1e_44850_a643b0d95fb82fa8b90991df5ce3c690.png 400w,
               /vscode-python/debug1_huea92c79a15bd67ab41dc987ee2336c1e_44850_47b45d5186e3383dbffeb8e4475d2756.png 760w,
               /vscode-python/debug1_huea92c79a15bd67ab41dc987ee2336c1e_44850_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python/debug1_huea92c79a15bd67ab41dc987ee2336c1e_44850_a643b0d95fb82fa8b90991df5ce3c690.png&#34;
               width=&#34;760&#34;
               height=&#34;571&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug2&#34; srcset=&#34;
               /vscode-python/debug2_hub256b7d4345ed72aeb0efacbcea9146d_63096_afd30996f992a43e300b34bc8d1710b8.png 400w,
               /vscode-python/debug2_hub256b7d4345ed72aeb0efacbcea9146d_63096_e26d3b9bc3ad62944bd5ac86af167661.png 760w,
               /vscode-python/debug2_hub256b7d4345ed72aeb0efacbcea9146d_63096_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python/debug2_hub256b7d4345ed72aeb0efacbcea9146d_63096_afd30996f992a43e300b34bc8d1710b8.png&#34;
               width=&#34;760&#34;
               height=&#34;571&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug3&#34; srcset=&#34;
               /vscode-python/debug3_hu9259eb6f4bf6485a560db9bdf2b16733_58711_1ecf6f1ceb709b12731f62c58d826339.png 400w,
               /vscode-python/debug3_hu9259eb6f4bf6485a560db9bdf2b16733_58711_7f04a88eb9d72b6d41cc240a7d03e2ef.png 760w,
               /vscode-python/debug3_hu9259eb6f4bf6485a560db9bdf2b16733_58711_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python/debug3_hu9259eb6f4bf6485a560db9bdf2b16733_58711_1ecf6f1ceb709b12731f62c58d826339.png&#34;
               width=&#34;760&#34;
               height=&#34;571&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug4&#34; srcset=&#34;
               /vscode-python/debug4_hu0fb868517a0036bb1dcc579f0bc70fe0_55281_491478477d1985c5abd72e7e96e547bc.png 400w,
               /vscode-python/debug4_hu0fb868517a0036bb1dcc579f0bc70fe0_55281_442d12385300746a883668fe9ba844a8.png 760w,
               /vscode-python/debug4_hu0fb868517a0036bb1dcc579f0bc70fe0_55281_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python/debug4_hu0fb868517a0036bb1dcc579f0bc70fe0_55281_491478477d1985c5abd72e7e96e547bc.png&#34;
               width=&#34;760&#34;
               height=&#34;571&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug5&#34; srcset=&#34;
               /vscode-python/debug5_hu05174299344a0a4de7c35a5fba4d3e93_54773_cd5f4569022f58b0365b35c4ae70cfa3.png 400w,
               /vscode-python/debug5_hu05174299344a0a4de7c35a5fba4d3e93_54773_606e538de1a728f6ff2b3a4c56053a3a.png 760w,
               /vscode-python/debug5_hu05174299344a0a4de7c35a5fba4d3e93_54773_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python/debug5_hu05174299344a0a4de7c35a5fba4d3e93_54773_cd5f4569022f58b0365b35c4ae70cfa3.png&#34;
               width=&#34;760&#34;
               height=&#34;571&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;추천-extension&#34;&gt;추천 extension&lt;/h3&gt;
&lt;p&gt;VSCode에서 python을 사용할 경우, import한 패키지의 내장함수에 대해 자동완성이 잘 이루어지지 않는 경우가 많습니다. 개인적으로는 이 때문에 한동안 VSCode에서 python을 사용하는 것이 꺼려졌습니다.&lt;/p&gt;
&lt;p&gt;이런 문제를 해결하기 위해 &lt;strong&gt;Pylance&lt;/strong&gt;라는 extension을 강력히 추천드립니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;pylance&#34; srcset=&#34;
               /vscode-python/pylance_hu93ecdcad1a2c88a746d67dacb1229e42_129562_08ff78f5e657792b612a3a9b10cfe4a6.png 400w,
               /vscode-python/pylance_hu93ecdcad1a2c88a746d67dacb1229e42_129562_71ec2427e9851a2d8bc0e80687bc08b5.png 760w,
               /vscode-python/pylance_hu93ecdcad1a2c88a746d67dacb1229e42_129562_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python/pylance_hu93ecdcad1a2c88a746d67dacb1229e42_129562_08ff78f5e657792b612a3a9b10cfe4a6.png&#34;
               width=&#34;760&#34;
               height=&#34;571&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Visual Studio Code와 Windows Subsystem for Linux 연동하기</title>
      <link>https://evandde.github.io/vscode-wsl/</link>
      <pubDate>Wed, 25 Nov 2020 10:42:23 +0900</pubDate>
      <guid>https://evandde.github.io/vscode-wsl/</guid>
      <description>&lt;p&gt;VSCode와 WSL을 연동하여 사용하는 방법에 대해 알아봅니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    여기서는 &lt;b&gt;WSL1 혹은 WSL2&lt;/b&gt; 설치가 완료된 상태라고 가정합니다. 이에 관한 전반적인 내용은 &lt;a href=&#34;https://evandde.github.io/wsl/&#34;&gt;이 글&lt;/a&gt;을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    여기서는 &lt;b&gt;VSCode&lt;/b&gt; 설치가 완료된 상태라고 가정합니다. VSCode 설치 및 기본 세팅은 &lt;a href=&#34;https://evandde.github.io/vscode/&#34;&gt;이 글&lt;/a&gt;을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;remote-wsl-확장-설치&#34;&gt;Remote WSL 확장 설치&lt;/h2&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Remote WSL 확장을 설치하기 위해서는, &lt;b&gt;1.35 버전 이상&lt;/b&gt;의 VSCode가 필요합니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;VSCode를 켜고 extension 탭으로 간 뒤 &amp;quot;&lt;strong&gt;wsl&lt;/strong&gt;&amp;quot;를 검색하세요. 맨 위에 &lt;b&gt;Remote - WSL extension&lt;/b&gt;이 뜰 것입니다. Install 버튼을 눌러 설치합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;extension_wsl&#34; srcset=&#34;
               /vscode-wsl/extension_wsl_hu31afeebf120d8ac309f15d19d69fda50_80471_3eab379f164895b5cf04f97656d18119.png 400w,
               /vscode-wsl/extension_wsl_hu31afeebf120d8ac309f15d19d69fda50_80471_87b7d291fba01da023cdb7a0c5387836.png 760w,
               /vscode-wsl/extension_wsl_hu31afeebf120d8ac309f15d19d69fda50_80471_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-wsl/extension_wsl_hu31afeebf120d8ac309f15d19d69fda50_80471_3eab379f164895b5cf04f97656d18119.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;linux-배포판-최신화-및-라이브러리-설치&#34;&gt;Linux 배포판 최신화 및 라이브러리 설치&lt;/h2&gt;
&lt;p&gt;일부 WSL 배포판의 경우에는 VSCode를 실행하기 위한 라이브러리가 없을 수 있습니다.&lt;/p&gt;
&lt;p&gt;이 경우에는 패키지매니저(&lt;code&gt;apt&lt;/code&gt;, &lt;code&gt;yum&lt;/code&gt;)를 최신화하고, 필요한 라이브러리를 설치하시기 바랍니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Debian이나 Ubuntu의 경우 apt를 활용한 예&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt update -y &amp;amp;&amp;amp; sudo apt upgrade -y
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;wget&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;이나 ca 인증서&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;를 다운받아야 할 수 있습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Debian이나 Ubuntu의 경우 apt를 활용한 예&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install wget -y
sudo apt install ca-certificates -y
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;실행해보기&#34;&gt;실행해보기&lt;/h2&gt;
&lt;h3 id=&#34;wsl-터미널에서-실행&#34;&gt;WSL 터미널에서 실행&lt;/h3&gt;
&lt;p&gt;원하는 프로젝트의 디렉토리에서 &lt;code&gt;code .&lt;/code&gt; 명령어를 입력합니다.&lt;/p&gt;
&lt;p&gt;첫 실행 시에는 자동으로 설치가 진행된 뒤 VSCode가 실행됩니다.&lt;/p&gt;
&lt;p&gt;실행한 뒤, 창 왼쪽 아래의 초록색 부분에 &lt;b&gt;WSL: [배포판 이름]&lt;/b&gt;이 정상적으로 뜬다면 성공입니다.&lt;/p&gt;














&lt;figure  id=&#34;figure-ref-get-started-using-vs-code-with-windows-subsystem-for-linux--microsoft-docshttpsdocsmicrosoftcomen-uswindowswsltutorialswsl-vscode&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Ref.: [Get started using VS Code with Windows Subsystem for Linux | Microsoft Docs](https://docs.microsoft.com/en-us/windows/wsl/tutorials/wsl-vscode)&#34;
           src=&#34;https://evandde.github.io/vscode-wsl/wsl-open-vs-code.gif&#34;
           loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Ref.: &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/tutorials/wsl-vscode&#34;&gt;Get started using VS Code with Windows Subsystem for Linux | Microsoft Docs&lt;/a&gt;
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;h3 id=&#34;vscode에서-실행&#34;&gt;VSCode에서 실행&lt;/h3&gt;
&lt;p&gt;다음 그림과 같이 진행합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;vscode_open_remotewsl1&#34; srcset=&#34;
               /vscode-wsl/vscode_open_remotewsl1_huaa1c17110882f41aa0a4384ed1b766f0_46007_c107efe44e721ebf4a9cb02a607116ea.png 400w,
               /vscode-wsl/vscode_open_remotewsl1_huaa1c17110882f41aa0a4384ed1b766f0_46007_7ec7a1a72568b5cbaee46f1cb4f0a686.png 760w,
               /vscode-wsl/vscode_open_remotewsl1_huaa1c17110882f41aa0a4384ed1b766f0_46007_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-wsl/vscode_open_remotewsl1_huaa1c17110882f41aa0a4384ed1b766f0_46007_c107efe44e721ebf4a9cb02a607116ea.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;vscode_open_remotewsl2&#34; srcset=&#34;
               /vscode-wsl/vscode_open_remotewsl2_hu99f3459e099ff8fc97eb6a43aa703d64_46816_a2d36fd35c86f8cb7aa429678fb68d47.png 400w,
               /vscode-wsl/vscode_open_remotewsl2_hu99f3459e099ff8fc97eb6a43aa703d64_46816_4b0ae88d9910a058601da9ecd31b20be.png 760w,
               /vscode-wsl/vscode_open_remotewsl2_hu99f3459e099ff8fc97eb6a43aa703d64_46816_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-wsl/vscode_open_remotewsl2_hu99f3459e099ff8fc97eb6a43aa703d64_46816_a2d36fd35c86f8cb7aa429678fb68d47.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;vscode_open_remotewsl3&#34; srcset=&#34;
               /vscode-wsl/vscode_open_remotewsl3_hua9c4c0917fe0f9e88673719e1c794159_76269_3fcc2404b1f1ebd9ad90ebb242bd55be.png 400w,
               /vscode-wsl/vscode_open_remotewsl3_hua9c4c0917fe0f9e88673719e1c794159_76269_ba439e65bc21c69c989a85551483a6ec.png 760w,
               /vscode-wsl/vscode_open_remotewsl3_hua9c4c0917fe0f9e88673719e1c794159_76269_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-wsl/vscode_open_remotewsl3_hua9c4c0917fe0f9e88673719e1c794159_76269_3fcc2404b1f1ebd9ad90ebb242bd55be.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;wsl에-확장-설치하기&#34;&gt;WSL에 확장 설치하기&lt;/h2&gt;
&lt;p&gt;Extension 탭을 열면 위쪽에는 Local(윈도우)에 설치된 확장 목록이, 아래쪽에는 WSL에 설치된 확장 목록이 뜹니다.&lt;/p&gt;
&lt;p&gt;이미 로컬에 설치된 확장을 설치할 수도 있고, WSL에만 확장을 설치할 수도 있습니다.&lt;/p&gt;
&lt;p&gt;다음 그림을 참고하세요.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;extension_copy1&#34; srcset=&#34;
               /vscode-wsl/extension_copy1_hu2dbe3ec6e318ac7fb7f8ef0b62ea57b3_150478_b2e0722f782bf38067604cd7f3f0f0ea.png 400w,
               /vscode-wsl/extension_copy1_hu2dbe3ec6e318ac7fb7f8ef0b62ea57b3_150478_eaad8e696e95f81ede7ce27598cfce33.png 760w,
               /vscode-wsl/extension_copy1_hu2dbe3ec6e318ac7fb7f8ef0b62ea57b3_150478_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-wsl/extension_copy1_hu2dbe3ec6e318ac7fb7f8ef0b62ea57b3_150478_b2e0722f782bf38067604cd7f3f0f0ea.png&#34;
               width=&#34;760&#34;
               height=&#34;584&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;extension_copy2&#34; srcset=&#34;
               /vscode-wsl/extension_copy2_hud8a81bc5f5eca29be782f6935b8b62e7_84124_1d2ffe353fac757515f707957fd4d788.png 400w,
               /vscode-wsl/extension_copy2_hud8a81bc5f5eca29be782f6935b8b62e7_84124_c7c5d6fed26ae5ca61d188efb29503bb.png 760w,
               /vscode-wsl/extension_copy2_hud8a81bc5f5eca29be782f6935b8b62e7_84124_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-wsl/extension_copy2_hud8a81bc5f5eca29be782f6935b8b62e7_84124_1d2ffe353fac757515f707957fd4d788.png&#34;
               width=&#34;760&#34;
               height=&#34;584&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;extension_copy3&#34; srcset=&#34;
               /vscode-wsl/extension_copy3_hu7c330a01e9857d89173737c29c11fd46_99783_301652b25a1cdf4cdee107c215ac79ba.png 400w,
               /vscode-wsl/extension_copy3_hu7c330a01e9857d89173737c29c11fd46_99783_52648a9ff9a399171c1f7c934865ef89.png 760w,
               /vscode-wsl/extension_copy3_hu7c330a01e9857d89173737c29c11fd46_99783_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-wsl/extension_copy3_hu7c330a01e9857d89173737c29c11fd46_99783_301652b25a1cdf4cdee107c215ac79ba.png&#34;
               width=&#34;760&#34;
               height=&#34;584&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;extension_copy4&#34; srcset=&#34;
               /vscode-wsl/extension_copy4_hu408d3fb6cb7459c36fd03cda3fd53eaf_99852_0b0d5a0b238f9afb859dacfdd9c460b8.png 400w,
               /vscode-wsl/extension_copy4_hu408d3fb6cb7459c36fd03cda3fd53eaf_99852_6b31a7796e435cdeb8023f50bcf73c87.png 760w,
               /vscode-wsl/extension_copy4_hu408d3fb6cb7459c36fd03cda3fd53eaf_99852_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-wsl/extension_copy4_hu408d3fb6cb7459c36fd03cda3fd53eaf_99852_0b0d5a0b238f9afb859dacfdd9c460b8.png&#34;
               width=&#34;760&#34;
               height=&#34;584&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;extension_copy5&#34; srcset=&#34;
               /vscode-wsl/extension_copy5_hu9d1e06428f495f8dae4da46e316505c1_70666_2cdc28818baedbfc656f66afcecadfea.png 400w,
               /vscode-wsl/extension_copy5_hu9d1e06428f495f8dae4da46e316505c1_70666_51ab29c428e9a4ec761e0091e0d14b09.png 760w,
               /vscode-wsl/extension_copy5_hu9d1e06428f495f8dae4da46e316505c1_70666_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-wsl/extension_copy5_hu9d1e06428f495f8dae4da46e316505c1_70666_2cdc28818baedbfc656f66afcecadfea.png&#34;
               width=&#34;760&#34;
               height=&#34;584&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;웹 서버로부터 데이터를 다운 받기 위한 명령어&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;SSL 기반의 응용프로그램이 SSL 연결의 신뢰성을 검사할 수 있도록 허용하기 위한 인증서&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;</description>
    </item>
    
    <item>
      <title>Visual Studio Code에서 CMake 환경 설정하기</title>
      <link>https://evandde.github.io/vscode-cmake/</link>
      <pubDate>Fri, 13 Nov 2020 10:04:24 +0900</pubDate>
      <guid>https://evandde.github.io/vscode-cmake/</guid>
      <description>&lt;p&gt;VSCode에서 CMake 기반의 프로젝트를 만들고, 실행/디버깅 등이 가능한 환경을 구축하는 방법에 대해 알아봅니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    여기서는 VSCode 설치 후, &lt;b&gt;C++ 언어를 사용하기 위한 환경 구축까지 완료한 상태&lt;/b&gt;라고 가정합니다. C++ 언어 사용을 위한 환경 구축은 &lt;a href=&#34;https://evandde.github.io/vscode-cpp/&#34;&gt;이 글&lt;/a&gt;을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;cmake-설치&#34;&gt;CMake 설치&lt;/h2&gt;
&lt;p&gt;VSCode는 CMake를 자체적으로 내장하고있지 않습니다. 때문에 CMake를 직접 설치하고 이를 연동해주는 작업이 필요합니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    Extension을 설치한다고 해서 CMake가 설치되는 것은 아닙니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;windows를-이용하는-경우&#34;&gt;Windows를 이용하는 경우&lt;/h3&gt;
&lt;p&gt;Chocolatey를 이용하면 쉽게 설치할 수 있습니다. 다만, chocolatey로 CMake를 설치하는 경우 &lt;code&gt;PATH&lt;/code&gt; 환경변수가 자동으로 잡히지 않아, 추가적인 명령어를 입력해주어야 합니다. 다음 명령어를 입력하세요.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Chocolatey는 Windows용 패키지 관리자입니다. 아직 사용 방법을 모르신다면, &lt;a href=&#34;https://evandde.github.io/chocolatey/&#34;&gt;이 글&lt;/a&gt;을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;choco install cmake -y --installargs &#39;ADD_CMAKE_TO_PATH=System&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cmake_windows&#34; srcset=&#34;
               /vscode-cmake/cmake_windows_huf9d6185fcc3b986572bd5104885e87fd_46967_9771e93ed3e87c576f6fb2867e7b5956.png 400w,
               /vscode-cmake/cmake_windows_huf9d6185fcc3b986572bd5104885e87fd_46967_f38a49ff98e14257a9b883dedfdabf5a.png 760w,
               /vscode-cmake/cmake_windows_huf9d6185fcc3b986572bd5104885e87fd_46967_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/cmake_windows_huf9d6185fcc3b986572bd5104885e87fd_46967_9771e93ed3e87c576f6fb2867e7b5956.png&#34;
               width=&#34;760&#34;
               height=&#34;331&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;다음 명령어를 통해 설치가 잘 되었는지 확인해보세요.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;cmake --version
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;Chocolatey 특성 상, 설치한 직후에는 &lt;code&gt;cmake&lt;/code&gt; 명령어를 인식하지 못할 수 있습니다.&lt;/p&gt;
&lt;p&gt;PowerShell을 껐다 켜거나, &lt;code&gt;refreshenv&lt;/code&gt; 명령어를 활용하세요.&lt;/p&gt;

  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cmake_version_windows&#34; srcset=&#34;
               /vscode-cmake/cmake_version_windows_hu89a6af564cc18670337a8f92b68e3118_12456_0bc90b9ece12811ecdcb9939d2704be4.png 400w,
               /vscode-cmake/cmake_version_windows_hu89a6af564cc18670337a8f92b68e3118_12456_afb26016a1a0ad67fc17e85ed1c59bba.png 760w,
               /vscode-cmake/cmake_version_windows_hu89a6af564cc18670337a8f92b68e3118_12456_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/cmake_version_windows_hu89a6af564cc18670337a8f92b68e3118_12456_0bc90b9ece12811ecdcb9939d2704be4.png&#34;
               width=&#34;760&#34;
               height=&#34;122&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;linux를-이용하는-경우&#34;&gt;Linux를 이용하는 경우&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://salsa.debian.org/apt-team/apt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;apt(apt-get)&lt;/a&gt;나 &lt;a href=&#34;http://yum.baseurl.org/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;yum&lt;/a&gt;을 이용하면 쉽게 설치할 수 있습니다.&lt;/p&gt;
&lt;p&gt;예를 들어 &lt;code&gt;apt&lt;/code&gt;를 이용하여 설치한다면 다음 명령어를 입력합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install cmake -y
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cmake_linux&#34; srcset=&#34;
               /vscode-cmake/cmake_linux_huaed6654e1f9d1908b9a5d0635f33e73f_34421_08db8804eb063c564c76702499a0f070.png 400w,
               /vscode-cmake/cmake_linux_huaed6654e1f9d1908b9a5d0635f33e73f_34421_68103a3937f845ce58583da48ddc4d0e.png 760w,
               /vscode-cmake/cmake_linux_huaed6654e1f9d1908b9a5d0635f33e73f_34421_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/cmake_linux_huaed6654e1f9d1908b9a5d0635f33e73f_34421_08db8804eb063c564c76702499a0f070.png&#34;
               width=&#34;760&#34;
               height=&#34;300&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;다음 명령어를 통해 설치가 잘 되었는지 확인해보세요.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cmake --version
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cmake_version_linux&#34; srcset=&#34;
               /vscode-cmake/cmake_version_linux_hua78ef093bdc60e6242f0783d85dba23b_5482_1a5c2e360d69d4f6e5ccd10c0e5ee3b7.png 400w,
               /vscode-cmake/cmake_version_linux_hua78ef093bdc60e6242f0783d85dba23b_5482_1d69aa391dc32fc422821a292d815295.png 760w,
               /vscode-cmake/cmake_version_linux_hua78ef093bdc60e6242f0783d85dba23b_5482_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/cmake_version_linux_hua78ef093bdc60e6242f0783d85dba23b_5482_1a5c2e360d69d4f6e5ccd10c0e5ee3b7.png&#34;
               width=&#34;736&#34;
               height=&#34;77&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;extension-설치&#34;&gt;Extension 설치&lt;/h2&gt;
&lt;p&gt;이제 VSCode에서 extension을 설치할 차례입니다.&lt;/p&gt;
&lt;p&gt;VSCode를 켜고 extension 탭으로 간 뒤 “&lt;strong&gt;cmake&lt;/strong&gt;“를 검색하세요. 맨 위부터 &lt;strong&gt;CMake&lt;/strong&gt;와 &lt;strong&gt;CMake Tools&lt;/strong&gt;가 뜰 것입니다. 두 가지 모두 Install 버튼을 눌러 설치합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;extension_cmake&#34; srcset=&#34;
               /vscode-cmake/extension_cmake_hu3da5222f7d42ccd615f0b10e3c843ad1_77547_4e6d4b33b76a1390296ae0108ae9ba55.png 400w,
               /vscode-cmake/extension_cmake_hu3da5222f7d42ccd615f0b10e3c843ad1_77547_46089bc2159dbb4772073c745321d074.png 760w,
               /vscode-cmake/extension_cmake_hu3da5222f7d42ccd615f0b10e3c843ad1_77547_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/extension_cmake_hu3da5222f7d42ccd615f0b10e3c843ad1_77547_4e6d4b33b76a1390296ae0108ae9ba55.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;각각의 용도는 이렇습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CMake extension: CMake 명령어에 대한 자동완성 제공. CMakeLists.txt 파일 작성에 도움.&lt;/li&gt;
&lt;li&gt;CMake Tools extension: CMake 기반 프로젝트를 관리하는데에 도움.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;테스트&#34;&gt;테스트&lt;/h2&gt;
&lt;p&gt;이제 제대로 설치가 되었는지 확인할 시간입니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    경로에 &lt;strong&gt;한글&lt;/strong&gt;이 있으면 제대로 동작하지 않습니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;hello-world-프로젝트-만들어보기&#34;&gt;Hello world 프로젝트 만들어보기&lt;/h3&gt;
&lt;p&gt;CMake Tools는 &lt;b&gt;CMake: Quick Start&lt;/b&gt;라는 기능을 제공합니다. 손쉽게 CMake 기반의 Hello world 프로젝트를 만들어주는 것이죠.&lt;/p&gt;
&lt;p&gt;적당한 경로에 빈 폴더를 만들어주고 다음과 같이 진행합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cqs1&#34; srcset=&#34;
               /vscode-cmake/cqs1_hu0e7303143497f0e4a137757a573cefc0_45640_caabe28af57f76ad3462e5cede53839c.png 400w,
               /vscode-cmake/cqs1_hu0e7303143497f0e4a137757a573cefc0_45640_3da3f460f72e8cabaaf3889ef5780923.png 760w,
               /vscode-cmake/cqs1_hu0e7303143497f0e4a137757a573cefc0_45640_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/cqs1_hu0e7303143497f0e4a137757a573cefc0_45640_caabe28af57f76ad3462e5cede53839c.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cqs2&#34; srcset=&#34;
               /vscode-cmake/cqs2_hu7f22ed4d7a598ee99fbd02dc85f95eec_42358_2558a20512433bd005186796729aa5a5.png 400w,
               /vscode-cmake/cqs2_hu7f22ed4d7a598ee99fbd02dc85f95eec_42358_f9f11df871b2487e26ca5679338a6be8.png 760w,
               /vscode-cmake/cqs2_hu7f22ed4d7a598ee99fbd02dc85f95eec_42358_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/cqs2_hu7f22ed4d7a598ee99fbd02dc85f95eec_42358_2558a20512433bd005186796729aa5a5.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cqs3&#34; srcset=&#34;
               /vscode-cmake/cqs3_hu8ae8568f48c1e6cc3dda2f57b9ad71bd_73424_90322c3a2e550c599c95d82ba2446d72.png 400w,
               /vscode-cmake/cqs3_hu8ae8568f48c1e6cc3dda2f57b9ad71bd_73424_c10044573126886eedd0e2d972091b76.png 760w,
               /vscode-cmake/cqs3_hu8ae8568f48c1e6cc3dda2f57b9ad71bd_73424_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/cqs3_hu8ae8568f48c1e6cc3dda2f57b9ad71bd_73424_90322c3a2e550c599c95d82ba2446d72.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cqs4&#34; srcset=&#34;
               /vscode-cmake/cqs4_hu651e505c86ff239e93aff82d745041ea_46310_b7233074ab7ba107154fcc97db32ac24.png 400w,
               /vscode-cmake/cqs4_hu651e505c86ff239e93aff82d745041ea_46310_8cd8b9516849d5a9d8d75ca9fb813464.png 760w,
               /vscode-cmake/cqs4_hu651e505c86ff239e93aff82d745041ea_46310_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/cqs4_hu651e505c86ff239e93aff82d745041ea_46310_b7233074ab7ba107154fcc97db32ac24.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cqs5&#34; srcset=&#34;
               /vscode-cmake/cqs5_huccc2f1247fcbf6dd401b7f495cf147cb_50218_17d669e23dfa30cb3dab8686981a3128.png 400w,
               /vscode-cmake/cqs5_huccc2f1247fcbf6dd401b7f495cf147cb_50218_2a9520c56ea9bd1f1d8c0f10ab602f8f.png 760w,
               /vscode-cmake/cqs5_huccc2f1247fcbf6dd401b7f495cf147cb_50218_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/cqs5_huccc2f1247fcbf6dd401b7f495cf147cb_50218_17d669e23dfa30cb3dab8686981a3128.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cqs6&#34; srcset=&#34;
               /vscode-cmake/cqs6_hu95d915dd180392f838a32ab1e81c2198_42933_c41e8bd1a6a9127e52114d072653ffc2.png 400w,
               /vscode-cmake/cqs6_hu95d915dd180392f838a32ab1e81c2198_42933_7c3275d6d1a0e5d48b7a79780d75038b.png 760w,
               /vscode-cmake/cqs6_hu95d915dd180392f838a32ab1e81c2198_42933_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/cqs6_hu95d915dd180392f838a32ab1e81c2198_42933_c41e8bd1a6a9127e52114d072653ffc2.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;실행&#34;&gt;실행&lt;/h3&gt;
&lt;p&gt;다음 그림과 같이 실행하시면 됩니다. 동일 폴더 내에 &lt;b&gt;.vscode&lt;/b&gt;라는 폴더가 생기고 그 안에 CMake 설정 등에 관한 &lt;code&gt;.json&lt;/code&gt; 파일이 자동으로 생성될 것입니다. 또한, &lt;b&gt;build&lt;/b&gt;라는 폴더가 생기고 그 안에 &lt;strong&gt;CMake를 통한 빌드 부산물 및 컴파일 결과물&lt;/strong&gt;이 자동으로 생성될 것입니다.&lt;/p&gt;
&lt;p&gt;이후 아래쪽의 &lt;strong&gt;TERMINAL&lt;/strong&gt; 탭을 확인하시면, 자동 생성된 main.cpp의 내용대로 Hello, world!가 출력되는 것을 확인할 수 있습니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;run1&#34; srcset=&#34;
               /vscode-cmake/run1_hu23cbc9ee6d94a3922a35bb52f261e9f6_41631_a0936e7fd0a5303dd4898784745d755f.png 400w,
               /vscode-cmake/run1_hu23cbc9ee6d94a3922a35bb52f261e9f6_41631_0830794d6928faa454db44cb37713ac3.png 760w,
               /vscode-cmake/run1_hu23cbc9ee6d94a3922a35bb52f261e9f6_41631_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/run1_hu23cbc9ee6d94a3922a35bb52f261e9f6_41631_a0936e7fd0a5303dd4898784745d755f.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;run2&#34; srcset=&#34;
               /vscode-cmake/run2_hua87ae9c2ff262c1bd9334f65408d52c2_53270_8782fbb70eef9231d034ed3435be5a6b.png 400w,
               /vscode-cmake/run2_hua87ae9c2ff262c1bd9334f65408d52c2_53270_51d0b8047f56d8954d98888e1a03ec14.png 760w,
               /vscode-cmake/run2_hua87ae9c2ff262c1bd9334f65408d52c2_53270_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/run2_hua87ae9c2ff262c1bd9334f65408d52c2_53270_8782fbb70eef9231d034ed3435be5a6b.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;디버깅&#34;&gt;디버깅&lt;/h3&gt;
&lt;p&gt;다음 그림과 같이 진행하여 디버깅도 가능합니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    맨 처음 그림에서 보이는 바와 같이, CMake type을 Debug로 설정해야 함에 주의하세요!
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug1&#34; srcset=&#34;
               /vscode-cmake/debug1_hu164b5677826c8eacb553a5632840e7f1_67492_6e6ce9ac77aafe17495f6bb3738fcd6d.png 400w,
               /vscode-cmake/debug1_hu164b5677826c8eacb553a5632840e7f1_67492_8bd4fe75f72748f2f1abec2b49ee6738.png 760w,
               /vscode-cmake/debug1_hu164b5677826c8eacb553a5632840e7f1_67492_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/debug1_hu164b5677826c8eacb553a5632840e7f1_67492_6e6ce9ac77aafe17495f6bb3738fcd6d.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug2&#34; srcset=&#34;
               /vscode-cmake/debug2_hua21a153eb3eb6cbbd7dccc89fc1a0738_74148_90d69e79938c9aee1109b9116d6ec3ac.png 400w,
               /vscode-cmake/debug2_hua21a153eb3eb6cbbd7dccc89fc1a0738_74148_f9d287c1cb825e1f442a098e2e351024.png 760w,
               /vscode-cmake/debug2_hua21a153eb3eb6cbbd7dccc89fc1a0738_74148_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/debug2_hua21a153eb3eb6cbbd7dccc89fc1a0738_74148_90d69e79938c9aee1109b9116d6ec3ac.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug3&#34; srcset=&#34;
               /vscode-cmake/debug3_hu571b8c96d405a1ad6a1a679231de34ef_72722_5d1ce6d547d3b6774b361664d026fc88.png 400w,
               /vscode-cmake/debug3_hu571b8c96d405a1ad6a1a679231de34ef_72722_7a86a29cff6db9ce2bed4c66f0c4ae71.png 760w,
               /vscode-cmake/debug3_hu571b8c96d405a1ad6a1a679231de34ef_72722_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/debug3_hu571b8c96d405a1ad6a1a679231de34ef_72722_5d1ce6d547d3b6774b361664d026fc88.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug4&#34; srcset=&#34;
               /vscode-cmake/debug4_hu8260f189d847922232a10d48b8fb98d6_96886_19264063bdb622727eb8d20b9428bf23.png 400w,
               /vscode-cmake/debug4_hu8260f189d847922232a10d48b8fb98d6_96886_dc1e0e7796f2a56584f0e24fc089a09d.png 760w,
               /vscode-cmake/debug4_hu8260f189d847922232a10d48b8fb98d6_96886_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/debug4_hu8260f189d847922232a10d48b8fb98d6_96886_19264063bdb622727eb8d20b9428bf23.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug5&#34; srcset=&#34;
               /vscode-cmake/debug5_hu9bcbe7397ec7a3bd2daf2d3e9f7033fa_86537_4e8880b22573bb0628e8760e43c7d814.png 400w,
               /vscode-cmake/debug5_hu9bcbe7397ec7a3bd2daf2d3e9f7033fa_86537_48f79a1d99308f24c3c1818ab0a64c3b.png 760w,
               /vscode-cmake/debug5_hu9bcbe7397ec7a3bd2daf2d3e9f7033fa_86537_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/debug5_hu9bcbe7397ec7a3bd2daf2d3e9f7033fa_86537_4e8880b22573bb0628e8760e43c7d814.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;command-line-argument-설정&#34;&gt;Command line argument 설정&lt;/h3&gt;
&lt;p&gt;실행하거나 디버깅할 때, command line argument를 넘겨주도록 설정하고 싶을 때가 있습니다.&lt;/p&gt;
&lt;p&gt;이는 &lt;b&gt;.vscode/settings.json 파일을 생성&lt;/b&gt;해주고, 해당 파일에서 &lt;code&gt;cmake.debugConfig&lt;/code&gt;인자로서 입력해줘야 합니다.&lt;/p&gt;
&lt;h4 id=&#34;테스트-코드-수정&#34;&gt;테스트 코드 수정&lt;/h4&gt;
&lt;p&gt;그 전에 먼저 argument가 제대로 동작하는지 확인하기 위해 main.cpp 코드를 수정하겠습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#include &amp;lt;iostream&amp;gt;

int main(int argc, char**) {
    std::cout &amp;lt;&amp;lt; &amp;quot;Hello, world!\n&amp;quot;;
    std::cout &amp;lt;&amp;lt; &amp;quot;argc: &amp;quot; &amp;lt;&amp;lt; argc &amp;lt;&amp;lt; std::endl;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;이 상태로 그냥 실행해보면 다음과 같이 나타날 것입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;arg1&#34; srcset=&#34;
               /vscode-cmake/arg1_hu3a15c3b7e617d931524b050348937c2a_48397_34c28f2952277af9d574ae29d4482c71.png 400w,
               /vscode-cmake/arg1_hu3a15c3b7e617d931524b050348937c2a_48397_f4a8f7ec275524a9111222bf92809d79.png 760w,
               /vscode-cmake/arg1_hu3a15c3b7e617d931524b050348937c2a_48397_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/arg1_hu3a15c3b7e617d931524b050348937c2a_48397_34c28f2952277af9d574ae29d4482c71.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h4 id=&#34;settingsjson-설정-및-실행&#34;&gt;settings.json 설정 및 실행&lt;/h4&gt;
&lt;p&gt;이제 settings.json 파일을 만들어 보겠습니다. (이미 만들어져 있을 수도 있습니다만, 그대로 진행하시면 됩니다)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;다음 그림과 같이 File - Preferences - Settings를 클릭합니다. 단축키는 &lt;b&gt;[CTRL]+[,]&lt;/b&gt; 입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;arg2&#34; srcset=&#34;
               /vscode-cmake/arg2_huee035e19a4a82fd2afe280a473865c1e_95774_56b5c80af94e7c09a01234bd2dc3b9dc.png 400w,
               /vscode-cmake/arg2_huee035e19a4a82fd2afe280a473865c1e_95774_65c616437706abe59a2dbc43109e2633.png 760w,
               /vscode-cmake/arg2_huee035e19a4a82fd2afe280a473865c1e_95774_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/arg2_huee035e19a4a82fd2afe280a473865c1e_95774_56b5c80af94e7c09a01234bd2dc3b9dc.png&#34;
               width=&#34;760&#34;
               height=&#34;549&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;여기서 Workspace 탭을 클릭합니다. 이 프로젝트(workspace)에만 적용되는 설정항목이라는 뜻입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;arg3&#34; srcset=&#34;
               /vscode-cmake/arg3_hu27dcf0e43bc0a941f885a9e8bbb5dd1a_70248_89aded21624db7e599b13f64312ffbc8.png 400w,
               /vscode-cmake/arg3_hu27dcf0e43bc0a941f885a9e8bbb5dd1a_70248_13eb3447d52efcc9587d006f0fe4e81b.png 760w,
               /vscode-cmake/arg3_hu27dcf0e43bc0a941f885a9e8bbb5dd1a_70248_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/arg3_hu27dcf0e43bc0a941f885a9e8bbb5dd1a_70248_89aded21624db7e599b13f64312ffbc8.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;상단 검색창에 &lt;code&gt;cmake.debugConfig&lt;/code&gt;를 검색한 뒤, &lt;u&gt;Edit in settings.json&lt;/u&gt; 부분을 클릭합니다. &lt;code&gt;cmake.debug&lt;/code&gt; 정도만 입력하셔도 바로 뜰 것입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;arg4&#34; srcset=&#34;
               /vscode-cmake/arg4_hub35353a5b53ed0a09d9dc6a0af763b24_87426_76799a240fa2170b3a90649176dbadcb.png 400w,
               /vscode-cmake/arg4_hub35353a5b53ed0a09d9dc6a0af763b24_87426_748696740cce29f2715b14ab0cbbe055.png 760w,
               /vscode-cmake/arg4_hub35353a5b53ed0a09d9dc6a0af763b24_87426_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/arg4_hub35353a5b53ed0a09d9dc6a0af763b24_87426_76799a240fa2170b3a90649176dbadcb.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;클릭하시면 바로 다음과 같이 &lt;code&gt;.vscode/settings.json&lt;/code&gt; 폴더 및 파일이 생성되고, settings.json 파일이 열리며, 그 안에 다음 그림과 같은 내용이 자동으로 작성되어 있을 것입니다. (추가로 다른 내용이 더 쓰여있을 수도 있습니다.)&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;arg5&#34; srcset=&#34;
               /vscode-cmake/arg5_hu78284473b6cc163dc60de15408c7f415_67837_ccbdd3d38192395f02b0ca3a07701225.png 400w,
               /vscode-cmake/arg5_hu78284473b6cc163dc60de15408c7f415_67837_31882fb69a1599a520fda4d0b80951be.png 760w,
               /vscode-cmake/arg5_hu78284473b6cc163dc60de15408c7f415_67837_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/arg5_hu78284473b6cc163dc60de15408c7f415_67837_ccbdd3d38192395f02b0ca3a07701225.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;이제 이 안에 &lt;code&gt;args&lt;/code&gt; 항목을 만들어 command line argument를 설정합니다. 실행파일명 뒤에 이어질 추가적인 argument들만 적어주면 되며, 각 항목은 &amp;ldquo;&amp;quot;(double-quote)로 묶어주고 ,(comma)로 분리해주면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;arg6&#34; srcset=&#34;
               /vscode-cmake/arg6_hu0c67c12b1cda36a60f2a210f9ef8732f_56962_b6ae80161893bbf02e68257e051ba56f.png 400w,
               /vscode-cmake/arg6_hu0c67c12b1cda36a60f2a210f9ef8732f_56962_c9ff1596f853439e269c3e58da89d3ba.png 760w,
               /vscode-cmake/arg6_hu0c67c12b1cda36a60f2a210f9ef8732f_56962_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/arg6_hu0c67c12b1cda36a60f2a210f9ef8732f_56962_b6ae80161893bbf02e68257e051ba56f.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;이제 저장한 뒤, 실행이나 디버깅을 해보면 다음과 같이 command line argument가 잘 반영된 것을 확인할 수 있습니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;arg7&#34; srcset=&#34;
               /vscode-cmake/arg7_hu72e75db658e05d1b13d2f3cc7bc1f901_53536_a83fb439045a7589d4e825bdef5b78dc.png 400w,
               /vscode-cmake/arg7_hu72e75db658e05d1b13d2f3cc7bc1f901_53536_193e7f64d30ffcba4b84ba7d57d00d13.png 760w,
               /vscode-cmake/arg7_hu72e75db658e05d1b13d2f3cc7bc1f901_53536_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/arg7_hu72e75db658e05d1b13d2f3cc7bc1f901_53536_a83fb439045a7589d4e825bdef5b78dc.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://chocolatey.org/packages/cmake&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://chocolatey.org/packages/cmake&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://vector-of-bool.github.io/docs/vscode-cmake-tools/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://vector-of-bool.github.io/docs/vscode-cmake-tools/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://code.visualstudio.com/docs/getstarted/settings&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://code.visualstudio.com/docs/getstarted/settings&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Visual Studio Code에서 GCC/MinGW 기반 C, C&#43;&#43; 환경 설정하기</title>
      <link>https://evandde.github.io/vscode-cpp/</link>
      <pubDate>Thu, 12 Nov 2020 16:40:31 +0900</pubDate>
      <guid>https://evandde.github.io/vscode-cpp/</guid>
      <description>&lt;p&gt;VSCode에서 C 언어 및 C++ 언어를 사용하기 위해 실행/디버깅 등이 가능한 환경을 구축하는 방법에 대해 알아봅니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    여기서는 &lt;b&gt;VSCode 설치를 완료한 상태&lt;/b&gt;라고 가정합니다. VSCode 설치 및 기본 세팅은 &lt;a href=&#34;https://evandde.github.io/vscode/&#34;&gt;이 글&lt;/a&gt;을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;컴파일러디버거-설치&#34;&gt;컴파일러/디버거 설치&lt;/h2&gt;
&lt;p&gt;VSCode는 C 언어용 컴파일러나 디버거를 자체적으로 내장하고있지 않습니다. 때문에 C 언어를 VSCode에서 사용하려면, 컴파일러와 디버거를 직접 설치하고 이를 연동해주는 작업이 필요합니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    Extension을 설치한다고 해서 컴파일러나 디버거가 설치되는 것은 아닙니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;windows를-이용하는-경우&#34;&gt;Windows를 이용하는 경우&lt;/h3&gt;
&lt;p&gt;Windows는 기본적으로 C 언어용 컴파일러나 디버거를 제공하지 않습니다. 따라서, 우리가 직접 설치해주어야 합니다.&lt;/p&gt;
&lt;p&gt;이 글에서는 &lt;strong&gt;&lt;a href=&#34;http://www.mingw.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MinGW&lt;/a&gt;&lt;/strong&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;를 이용하도록 하겠습니다. MinGW는 chocolatey를 통해 쉽게 설치할 수 있습니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Chocolatey는 Windows용 패키지 관리자입니다. 아직 사용 방법을 모르신다면, &lt;a href=&#34;https://evandde.github.io/chocolatey/&#34;&gt;이 글&lt;/a&gt;을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;choco install mingw -y
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;&lt;b&gt; 2021년 6월 28일 수정&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;2021년 1월 12일에 chocolatey repo에 등록된 mingw-w64 10.2.0 버전에서 gdb.exe가 누락된 사항이 발견되었습니다.&lt;/p&gt;
&lt;p&gt;현 시점에서는 Chocolatey로 MinGW를 설치 시 다음과 같이 입력하여 이전 버전인 8.1.0 버전으로 설치하시기를 권장합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;choco install mingw -y --version=8.1.0
&lt;/code&gt;&lt;/pre&gt;

  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;mingw&#34; srcset=&#34;
               /vscode-cpp/mingw_hud2d42d6840e6382d3092f466b6f083f0_69601_4a0158719c3551a2d375ef1b2c35ad80.png 400w,
               /vscode-cpp/mingw_hud2d42d6840e6382d3092f466b6f083f0_69601_59651aa1a8ad4756dfd14517fcece68f.png 760w,
               /vscode-cpp/mingw_hud2d42d6840e6382d3092f466b6f083f0_69601_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/mingw_hud2d42d6840e6382d3092f466b6f083f0_69601_4a0158719c3551a2d375ef1b2c35ad80.png&#34;
               width=&#34;760&#34;
               height=&#34;483&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;다음 명령어를 통해 설치가 잘 되었는지 확인해보세요.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;gcc --version
gdb --version
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;Chocolatey 특성 상, 설치한 직후에는 &lt;code&gt;gcc&lt;/code&gt;, &lt;code&gt;gdb&lt;/code&gt; 명령어를 인식하지 못할 수 있습니다.&lt;/p&gt;
&lt;p&gt;PowerShell을 껐다 켜거나, &lt;code&gt;refreshenv&lt;/code&gt; 명령어를 활용하세요.&lt;/p&gt;

  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;gccgdb_version_windows&#34; srcset=&#34;
               /vscode-cpp/gccgdb_version_windows_hue37915aa608bae256dd62c3c3068b260_49032_83dff4d7e4d41ad76cb8eed09febf5a3.png 400w,
               /vscode-cpp/gccgdb_version_windows_hue37915aa608bae256dd62c3c3068b260_49032_42175046d4dad78409fa82d381a5d8ac.png 760w,
               /vscode-cpp/gccgdb_version_windows_hue37915aa608bae256dd62c3c3068b260_49032_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/gccgdb_version_windows_hue37915aa608bae256dd62c3c3068b260_49032_83dff4d7e4d41ad76cb8eed09febf5a3.png&#34;
               width=&#34;760&#34;
               height=&#34;437&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;linux를-이용하는-경우&#34;&gt;Linux를 이용하는 경우&lt;/h3&gt;
&lt;p&gt;대부분의 Linux 배포판은 gcc&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;와 gdb&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;를 기본적으로 제공합니다.&lt;/p&gt;
&lt;p&gt;터미널을 켜서 다음 명령어를 입력했을 때 버전 정보가 정상적으로 출력되면 설치되어 있는 것입니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gcc --version
gdb --version
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;gccgdb_version_linux&#34; srcset=&#34;
               /vscode-cpp/gccgdb_version_linux_hu31f77190b1307c8e73ffe9e2ec5e112c_23718_7755913bd0b1090e437853543509463f.png 400w,
               /vscode-cpp/gccgdb_version_linux_hu31f77190b1307c8e73ffe9e2ec5e112c_23718_4101639bc24c33d29948d3a304ae3381.png 760w,
               /vscode-cpp/gccgdb_version_linux_hu31f77190b1307c8e73ffe9e2ec5e112c_23718_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/gccgdb_version_linux_hu31f77190b1307c8e73ffe9e2ec5e112c_23718_7755913bd0b1090e437853543509463f.png&#34;
               width=&#34;707&#34;
               height=&#34;248&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;만약 설치가 되어있지 않다면, 패키지 관리자인 &lt;code&gt;apt&lt;/code&gt;나 &lt;code&gt;yum&lt;/code&gt;을 이용하여 설치하시기를 권장합니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;extension-설치&#34;&gt;Extension 설치&lt;/h2&gt;
&lt;p&gt;이제 VSCode에서 extension을 설치할 차례입니다.&lt;/p&gt;
&lt;p&gt;VSCode를 켜고 extension 탭으로 간 뒤 &amp;ldquo;&lt;strong&gt;c&lt;/strong&gt;&amp;ldquo;를 검색하세요. 맨 위에 C/C++ extension이 뜰 것입니다. Install 버튼을 눌러 설치합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;extension_c&#34; srcset=&#34;
               /vscode-cpp/extension_c_hu115aacab3740fa41f6835fd9d1b9086c_54413_6effe4ec295e401b02f8e8d25bd8cb0e.png 400w,
               /vscode-cpp/extension_c_hu115aacab3740fa41f6835fd9d1b9086c_54413_d7e0729455c36626dfc5123f0d498ede.png 760w,
               /vscode-cpp/extension_c_hu115aacab3740fa41f6835fd9d1b9086c_54413_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/extension_c_hu115aacab3740fa41f6835fd9d1b9086c_54413_6effe4ec295e401b02f8e8d25bd8cb0e.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;테스트&#34;&gt;테스트&lt;/h2&gt;
&lt;p&gt;이제 제대로 설치가 되었는지 확인할 시간입니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    경로에 &lt;strong&gt;한글&lt;/strong&gt;이 있으면 제대로 동작하지 않습니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;코드-작성&#34;&gt;코드 작성&lt;/h3&gt;
&lt;p&gt;Explorer 탭으로 이동하여 적당한 경로에 &lt;b&gt;main.cpp&lt;/b&gt;라는 새 파일을 만들어주고 다음과 같이 작성하도록 하겠습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#include &amp;lt;iostream&amp;gt;

int main(int argc, char **)
{
    std::cout &amp;lt;&amp;lt; &amp;quot;Hello, World!&amp;quot; &amp;lt;&amp;lt; std::endl;
    std::cout &amp;lt;&amp;lt; &amp;quot;argc: &amp;quot; &amp;lt;&amp;lt; argc &amp;lt;&amp;lt; std::endl;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;codewriting&#34; srcset=&#34;
               /vscode-cpp/codewriting_hu5265b2e32d201fa8dc1d8701db5e3ce3_68027_a5033151e66c2286b7236c5783188134.png 400w,
               /vscode-cpp/codewriting_hu5265b2e32d201fa8dc1d8701db5e3ce3_68027_0ab0e51abc4a2b55beedf2dbf77c7bad.png 760w,
               /vscode-cpp/codewriting_hu5265b2e32d201fa8dc1d8701db5e3ce3_68027_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/codewriting_hu5265b2e32d201fa8dc1d8701db5e3ce3_68027_a5033151e66c2286b7236c5783188134.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;실행&#34;&gt;실행&lt;/h3&gt;
&lt;p&gt;다음 그림과 같이 실행하시면 됩니다. 동일 폴더 내에 &lt;b&gt;.vscode&lt;/b&gt;라는 폴더가 생기고, 그 안에 컴파일 옵션에 관한 설정이 적힌 &lt;code&gt;.json&lt;/code&gt; 파일이 자동으로 생성될 것입니다.&lt;/p&gt;
&lt;p&gt;이후 아래쪽의 &lt;strong&gt;TERMINAL&lt;/strong&gt; 탭을 확인하시면, 우리가 작성한대로 두 줄이 화면에 출력되는 것을 확인할 수 있습니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;C++이 아닌 &lt;strong&gt;C 언어&lt;/strong&gt;로 작성하였다면, 세 번째 그림에서 g++.exe대신 &lt;b&gt;gcc.exe를 선택&lt;/b&gt;하시면 됩니다.&lt;/p&gt;
&lt;p&gt;아마 gcc.exe만 선택 가능하게끔 뜰 것입니다.&lt;/p&gt;

  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;run1&#34; srcset=&#34;
               /vscode-cpp/run1_hu52a9019c1184d2b9fd9aab9c9d8c95e4_58870_a4ec28ad4af3a5047c00231403a0e7e9.png 400w,
               /vscode-cpp/run1_hu52a9019c1184d2b9fd9aab9c9d8c95e4_58870_a5ad4c2e597002ee2ef1f7428efc0a80.png 760w,
               /vscode-cpp/run1_hu52a9019c1184d2b9fd9aab9c9d8c95e4_58870_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/run1_hu52a9019c1184d2b9fd9aab9c9d8c95e4_58870_a4ec28ad4af3a5047c00231403a0e7e9.png&#34;
               width=&#34;760&#34;
               height=&#34;569&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;run2&#34; srcset=&#34;
               /vscode-cpp/run2_hu14425b5936a3daeb9dc20b354bde779a_43119_51d7dca2fb20f88b543e62ce6c7bf337.png 400w,
               /vscode-cpp/run2_hu14425b5936a3daeb9dc20b354bde779a_43119_aba5919f52ebb7228451c1367ae30f85.png 760w,
               /vscode-cpp/run2_hu14425b5936a3daeb9dc20b354bde779a_43119_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/run2_hu14425b5936a3daeb9dc20b354bde779a_43119_51d7dca2fb20f88b543e62ce6c7bf337.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;run3&#34; srcset=&#34;
               /vscode-cpp/run3_hub8f211d0c8f8ef855494fea902468013_55193_222d1f1cfe70ebceb10d717aaff40b1e.png 400w,
               /vscode-cpp/run3_hub8f211d0c8f8ef855494fea902468013_55193_e28eb11faef440a2c60c8db33010d87a.png 760w,
               /vscode-cpp/run3_hub8f211d0c8f8ef855494fea902468013_55193_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/run3_hub8f211d0c8f8ef855494fea902468013_55193_222d1f1cfe70ebceb10d717aaff40b1e.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;run4&#34; srcset=&#34;
               /vscode-cpp/run4_hue8fd9039d89c9c975cf91efada4036df_114331_633eef85eeb6eaf9f80e8e81717854e7.png 400w,
               /vscode-cpp/run4_hue8fd9039d89c9c975cf91efada4036df_114331_82f36961dec929f382c26db5e7fb7b41.png 760w,
               /vscode-cpp/run4_hue8fd9039d89c9c975cf91efada4036df_114331_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/run4_hue8fd9039d89c9c975cf91efada4036df_114331_633eef85eeb6eaf9f80e8e81717854e7.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;실행을 하실 때, &lt;b&gt;main.cpp가 활성화된 상태에서 실행&lt;/b&gt;하세요.&lt;/p&gt;
&lt;p&gt;이 방법을 통해 자동으로 만들어진 launch.json 파일은 &lt;b&gt;&amp;ldquo;활성화된 파일의 이름.exe&amp;rdquo;&lt;/b&gt;를 실행합니다.&lt;/p&gt;
&lt;p&gt;예를들어 launch.json을 보면서 실행 버튼을 누르면, launch.exe를 찾아 실행하려고 하기 때문에 에러가 발생합니다.&lt;/p&gt;

  &lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;디버깅&#34;&gt;디버깅&lt;/h3&gt;
&lt;p&gt;다음 그림과 같이 진행하여 디버깅도 가능합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug1&#34; srcset=&#34;
               /vscode-cpp/debug1_huee9e2a433bb92ff56aea0e3873d5958d_74913_f8f6163795764a377baf486c395e79d5.png 400w,
               /vscode-cpp/debug1_huee9e2a433bb92ff56aea0e3873d5958d_74913_4a13082008f3fa5b3677afc6c55a95fb.png 760w,
               /vscode-cpp/debug1_huee9e2a433bb92ff56aea0e3873d5958d_74913_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/debug1_huee9e2a433bb92ff56aea0e3873d5958d_74913_f8f6163795764a377baf486c395e79d5.png&#34;
               width=&#34;760&#34;
               height=&#34;572&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug2&#34; srcset=&#34;
               /vscode-cpp/debug2_hua50440bfff40a6da8f2d0888a89a4c65_86088_8082201454e6d7adf8e0275a65760b4b.png 400w,
               /vscode-cpp/debug2_hua50440bfff40a6da8f2d0888a89a4c65_86088_6e19ee49020d9d703822d2f3e95a209a.png 760w,
               /vscode-cpp/debug2_hua50440bfff40a6da8f2d0888a89a4c65_86088_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/debug2_hua50440bfff40a6da8f2d0888a89a4c65_86088_8082201454e6d7adf8e0275a65760b4b.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug3&#34; srcset=&#34;
               /vscode-cpp/debug3_hu75ddfbdaf40c5f8341057da80ea90c3b_78867_7c673a3e3775560aebe55755d1d3cf4d.png 400w,
               /vscode-cpp/debug3_hu75ddfbdaf40c5f8341057da80ea90c3b_78867_3594c91c136da35faa9869353eb8f325.png 760w,
               /vscode-cpp/debug3_hu75ddfbdaf40c5f8341057da80ea90c3b_78867_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/debug3_hu75ddfbdaf40c5f8341057da80ea90c3b_78867_7c673a3e3775560aebe55755d1d3cf4d.png&#34;
               width=&#34;760&#34;
               height=&#34;572&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug4&#34; srcset=&#34;
               /vscode-cpp/debug4_huee020204c52e58149d7df10f808c06f2_80913_194ef73fe7ad9214105c6e61f9f5d468.png 400w,
               /vscode-cpp/debug4_huee020204c52e58149d7df10f808c06f2_80913_cbd4f38336d2b2e47632a78886e9598a.png 760w,
               /vscode-cpp/debug4_huee020204c52e58149d7df10f808c06f2_80913_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/debug4_huee020204c52e58149d7df10f808c06f2_80913_194ef73fe7ad9214105c6e61f9f5d468.png&#34;
               width=&#34;760&#34;
               height=&#34;569&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug5&#34; srcset=&#34;
               /vscode-cpp/debug5_hu212bbef05a0c2737d6ce7389bf4327f6_62005_0c4b81f052bd1dc318e5282dee7396c9.png 400w,
               /vscode-cpp/debug5_hu212bbef05a0c2737d6ce7389bf4327f6_62005_cdc4d9c7e3ede44e1c23f05e3b37d6a9.png 760w,
               /vscode-cpp/debug5_hu212bbef05a0c2737d6ce7389bf4327f6_62005_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/debug5_hu212bbef05a0c2737d6ce7389bf4327f6_62005_0c4b81f052bd1dc318e5282dee7396c9.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;command-line-argument-설정&#34;&gt;Command line argument 설정&lt;/h3&gt;
&lt;p&gt;실행하거나 디버깅할 때, command line argument를 넘겨주도록 설정하고 싶을 때가 있습니다.&lt;/p&gt;
&lt;p&gt;이 부분은 아까 자동으로 만들어졌던 &lt;b&gt;launch.json&lt;/b&gt; 파일의 &lt;b&gt;args 값&lt;/b&gt;을 통해 설정합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;args1&#34; srcset=&#34;
               /vscode-cpp/args1_hu7f277c1f4935011f99e87d9e4a095153_86943_f1f0c25542760007db66132373fa41b6.png 400w,
               /vscode-cpp/args1_hu7f277c1f4935011f99e87d9e4a095153_86943_2b113fd69436ef12692e5f62acd18104.png 760w,
               /vscode-cpp/args1_hu7f277c1f4935011f99e87d9e4a095153_86943_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/args1_hu7f277c1f4935011f99e87d9e4a095153_86943_f1f0c25542760007db66132373fa41b6.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;args2&#34; srcset=&#34;
               /vscode-cpp/args2_hu5bc6b5ad26b7135c3411762cb190937b_93732_eda1308cdefe5b26629a2a19b79695d8.png 400w,
               /vscode-cpp/args2_hu5bc6b5ad26b7135c3411762cb190937b_93732_6afbd584d11344d7fe3b77dbf5529628.png 760w,
               /vscode-cpp/args2_hu5bc6b5ad26b7135c3411762cb190937b_93732_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/args2_hu5bc6b5ad26b7135c3411762cb190937b_93732_eda1308cdefe5b26629a2a19b79695d8.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;args3&#34; srcset=&#34;
               /vscode-cpp/args3_hub793b610b49b9b0002b9d7beb42a089a_69712_c5b24194fba8437dff5c4831ccfdb6b7.png 400w,
               /vscode-cpp/args3_hub793b610b49b9b0002b9d7beb42a089a_69712_df436a76155a523c2f7747a29b3176af.png 760w,
               /vscode-cpp/args3_hub793b610b49b9b0002b9d7beb42a089a_69712_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/args3_hub793b610b49b9b0002b9d7beb42a089a_69712_c5b24194fba8437dff5c4831ccfdb6b7.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;args4&#34; srcset=&#34;
               /vscode-cpp/args4_hu7ee3fb4b707b5e5725bd0a8797709d8f_65884_992be4acd52b0aa4d47f949a2f1dfc20.png 400w,
               /vscode-cpp/args4_hu7ee3fb4b707b5e5725bd0a8797709d8f_65884_6a30e4380661d5d3180d92bc0238f396.png 760w,
               /vscode-cpp/args4_hu7ee3fb4b707b5e5725bd0a8797709d8f_65884_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/args4_hu7ee3fb4b707b5e5725bd0a8797709d8f_65884_992be4acd52b0aa4d47f949a2f1dfc20.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Minimalist GNU for Windows. 마이크로소프트 Windows로 포팅한 GNU 소프트웨어 도구 모음&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;GNU Compiler Collection. 혹은 그 중 하나인 GNU C Compiler. C 언어 컴파일러의 일종.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;GNU Debugger. C 언어 디버거의 일종.&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;</description>
    </item>
    
    <item>
      <title>Visual Studio Code 소개, 설치, 기본 세팅</title>
      <link>https://evandde.github.io/vscode/</link>
      <pubDate>Thu, 12 Nov 2020 11:22:31 +0900</pubDate>
      <guid>https://evandde.github.io/vscode/</guid>
      <description>&lt;p&gt;요즘 개발자 사이에서 인기있는 코딩 툴. &lt;strong&gt;Visual Studio Code&lt;/strong&gt;에 대해 살펴보고, 설치 및 기본 세팅 방법까지 알아봅니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;vscode_logo&#34; srcset=&#34;
               /vscode/vscode_logo_hub58b0ad656b469a04cb691e21fc092d7_17189_e0226bcd87c6518e4ecfddf5de21624b.png 400w,
               /vscode/vscode_logo_hub58b0ad656b469a04cb691e21fc092d7_17189_1c0117b9250d6b39bd8ed26e7996540b.png 760w,
               /vscode/vscode_logo_hub58b0ad656b469a04cb691e21fc092d7_17189_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode/vscode_logo_hub58b0ad656b469a04cb691e21fc092d7_17189_e0226bcd87c6518e4ecfddf5de21624b.png&#34;
               width=&#34;760&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;tldr&#34;&gt;TL;DR&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;공식 홈페이지: &lt;a href=&#34;https://code.visualstudio.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://code.visualstudio.com/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GitHub: &lt;a href=&#34;https://github.com/Microsoft/vscode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/Microsoft/vscode&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다운로드: &lt;a href=&#34;https://code.visualstudio.com/download&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://code.visualstudio.com/download&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Windows의 경우 chocolatey를 통해서도 설치 가능&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;choco install vscode -y
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;설치는 그냥 &lt;strong&gt;다음&lt;/strong&gt;버튼만 눌러서 진행해도 괜찮음&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[CTRL]+[SHIFT]+[X] 누르면 Extension 탭이 열림. 원하는 extension을 설치하여 이용.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;모든 extension 보기(Marketplace): &lt;a href=&#34;https://marketplace.visualstudio.com/vscode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://marketplace.visualstudio.com/vscode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    VSCode는 컴파일러, 디버거 등을 내장하고 있지 않습니다. 사용하는 언어에 맞추어 따로 설치하고 연동하는 방식으로 사용하셔야 합니다. 이에 관한 자세한 내용은 본 블로그의 &lt;a href=&#34;https://evandde.github.io/categories/vscode/&#34;&gt;VSCode 카테고리&lt;/a&gt; 글을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;visual-studio-code-소개&#34;&gt;Visual Studio Code 소개&lt;/h2&gt;
&lt;p&gt;Visual Studio Code는 &lt;strong&gt;마이크로소프트&lt;/strong&gt;에서 개발하여 2016년에 출시한 &lt;del&gt;고급 메모장&lt;/del&gt;&lt;strong&gt;IDE&lt;/strong&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;입니다. 줄여서 &lt;strong&gt;VSCode&lt;/strong&gt; 혹은 &lt;strong&gt;VSC&lt;/strong&gt;라고도 부릅니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://code.visualstudio.com/docs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;원문&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Getting started&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio Code는 가벼우면서도 강력한 소스 코드 편집기로, Windows, macOS, Linux에서 모두 사용 가능합니다. VSCode는 기본적으로 JavaScript, TypeScript, Node.js를 지원하며, 다양한 확장(extension)을 통해 다른 언어(C, C++, C#, Java, Python, PHP, Go 등)나 런타임(.NET, Unity 등)을 지원하도록 설정할 수 있습니다. 이 &lt;a href=&#34;https://code.visualstudio.com/docs/getstarted/introvideos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;소개영상&lt;/a&gt;(영어)을 통해 VSCode로의 여행을 시작해보세요.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;저는 이전에 Visual Studio, PyCharm, Eclipse, QtCreator, Vim+Plugin 등의 IDE를 사용해보았습니다만, 올 초 즈음부터 VSCode로 정착했습니다. 그 이유는 다음과 같습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;가볍다.&lt;/li&gt;
&lt;li&gt;무료다.&lt;/li&gt;
&lt;li&gt;Windows와 Linux에서 모두 사용 가능하다.&lt;/li&gt;
&lt;li&gt;WSL과 같은 원격 환경에서의 개발을 지원한다.&lt;/li&gt;
&lt;li&gt;내가 사용하는 여러 종류의 프로그래밍 언어를 하나의 IDE로 관리할 수 있다. (C++, Python, Go, Markdown, HTML, CSS, JavaScript)&lt;/li&gt;
&lt;li&gt;설정해놓은 환경이 동기화되어, 여러 대의 컴퓨터를 사용해도 동일한 환경에서 작업할 수 있다.&lt;/li&gt;
&lt;li&gt;&lt;del&gt;뭔가 프로그래밍 고수가 된 것 같은 착각이 든다&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;vscode-설치하기&#34;&gt;VSCode 설치하기&lt;/h2&gt;
&lt;p&gt;다음 방법 중 편한 방법을 선택하여 진행하시면 됩니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;공식 홈페이지에서 설치 프로그램을 다운받아 설치&lt;/li&gt;
&lt;li&gt;Chocolatey 프로그램을 통해 설치(Windows에서만 가능)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;설치-프로그램-다운받아-설치&#34;&gt;설치 프로그램 다운받아 설치&lt;/h3&gt;
&lt;h4 id=&#34;설치파일-다운로드&#34;&gt;설치파일 다운로드&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;공식 홈페이지&lt;/a&gt; 첫화면에 있는 다운로드 버튼을 누르면 설치 프로그램이 다운로드 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;mainpage_download&#34; srcset=&#34;
               /vscode/mainpage_download_hufc464033e495f88261d6484504eb9237_371107_b9cb34c2f83e07af7eabd65c08e0d5e2.png 400w,
               /vscode/mainpage_download_hufc464033e495f88261d6484504eb9237_371107_d7547492aba88799ef40d20c0cc49ce8.png 760w,
               /vscode/mainpage_download_hufc464033e495f88261d6484504eb9237_371107_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode/mainpage_download_hufc464033e495f88261d6484504eb9237_371107_b9cb34c2f83e07af7eabd65c08e0d5e2.png&#34;
               width=&#34;732&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;혹은, &lt;a href=&#34;https://code.visualstudio.com/download&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;다운로드 페이지&lt;/a&gt;를 이용하셔도 좋습니다.&lt;/p&gt;
&lt;h4 id=&#34;설치파일-실행&#34;&gt;설치파일 실행&lt;/h4&gt;
&lt;p&gt;User installer를 받으셨거나, 공식 홈페이지 첫화면에서 다운로드 받으신 경우에는, 설치 프로그램을 실행시키면 다음과 같은 경고가 뜰 수 있습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;이 설치파일은 관리자 권한으로 실행되지 않습니다. 시스템을 이용하는 모든 사용자가 VSCode를 쓰고자 한다면, System Installer를 다운받아 설치하세요. 그냥 진행해도 괜찮습니까?&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;install_warning&#34; srcset=&#34;
               /vscode/install_warning_hu48d02a51faed26f6ada0cf7f7622eea8_6129_a3377eb22fdf35f25d3fdf4ca0d9717c.png 400w,
               /vscode/install_warning_hu48d02a51faed26f6ada0cf7f7622eea8_6129_43ec44130e4f67adc7cb207716e8b696.png 760w,
               /vscode/install_warning_hu48d02a51faed26f6ada0cf7f7622eea8_6129_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode/install_warning_hu48d02a51faed26f6ada0cf7f7622eea8_6129_a3377eb22fdf35f25d3fdf4ca0d9717c.png&#34;
               width=&#34;413&#34;
               height=&#34;185&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;일반적인 개인사용자 분들은 그냥 확인을 눌러 진행&lt;/strong&gt;하시면 됩니다. 여러개의 Windows 계정이 존재하고 이 모든 계정에서 사용하게끔 하고 싶으신 분들의 경우에는, System Installer를 다운받아서 설치를 진행하시기 바랍니다.&lt;/p&gt;
&lt;p&gt;그 이후에는 경로 설정 등의 내용이므로 특별한 이유가 없다면 그냥 &lt;strong&gt;다음&lt;/strong&gt;버튼만 눌러주시면 됩니다.&lt;/p&gt;
&lt;h3 id=&#34;chocolatey를-통해-설치windows&#34;&gt;Chocolatey를 통해 설치(Windows)&lt;/h3&gt;
&lt;p&gt;Chocolatey를 이용하신다면, 다음 명령어를 통해 간단하게 설치하실 수 있습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;choco install vscode -y
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;install_choco&#34; srcset=&#34;
               /vscode/install_choco_hu00848fd8df6252c4dbc7ff29e5fcba54_71153_0bb805bbd30908215e1000aefcb210cb.png 400w,
               /vscode/install_choco_hu00848fd8df6252c4dbc7ff29e5fcba54_71153_6a4ba4498c282f06239b7fce97ac54fc.png 760w,
               /vscode/install_choco_hu00848fd8df6252c4dbc7ff29e5fcba54_71153_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode/install_choco_hu00848fd8df6252c4dbc7ff29e5fcba54_71153_0bb805bbd30908215e1000aefcb210cb.png&#34;
               width=&#34;760&#34;
               height=&#34;477&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Chocolatey를 설치하고 이용하는 방법이 궁금하다면, &lt;a href=&#34;https://evandde.github.io/chocolatey/&#34;&gt;이 글&lt;/a&gt;을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;첫-화면-살펴보기&#34;&gt;첫 화면 살펴보기&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;vscode_fisrtview&#34; srcset=&#34;
               /vscode/vscode_fisrtview_hu98a461d620bb1c97124d8eca02f3ea0f_240766_7c2a00c7e62ad95a401192d9b77b7cf1.png 400w,
               /vscode/vscode_fisrtview_hu98a461d620bb1c97124d8eca02f3ea0f_240766_2f794fb88904ea371d26e0394ae87511.png 760w,
               /vscode/vscode_fisrtview_hu98a461d620bb1c97124d8eca02f3ea0f_240766_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode/vscode_fisrtview_hu98a461d620bb1c97124d8eca02f3ea0f_240766_7c2a00c7e62ad95a401192d9b77b7cf1.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;extension-살펴보기&#34;&gt;Extension 살펴보기&lt;/h2&gt;
&lt;p&gt;VSCode에는 정말 다양한 extension이 존재하며, 계속 개발되고 있습니다.&lt;/p&gt;
&lt;p&gt;현재 제공하는 모든 extension은 &lt;a href=&#34;https://marketplace.visualstudio.com/vscode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;marketplace 페이지&lt;/a&gt;에서 살펴볼 수 있습니다.&lt;/p&gt;
&lt;p&gt;이 글에서는 우선 간단하게 언어 설정이나 테마 설정과 같은 기본적인 extension을 살펴보겠습니다.&lt;/p&gt;
&lt;h3 id=&#34;language-pack-extension&#34;&gt;Language pack extension&lt;/h3&gt;
&lt;p&gt;VSCode는 영어뿐만 아니라, &lt;strong&gt;한국어&lt;/strong&gt;를 비롯하여, 중국어, 일본어, 스페인어, 러시아어, 독일어,&amp;hellip; 등 다양한 언어를 지원합니다. Microsoft에서 직접 제공하는 언어 팩이죠.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;strong&gt;Language pack&lt;/strong&gt;으로 검색하시면 다양한 언어 팩을 확인할 수 있습니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;한국어 팩을 설치하시려면, &lt;strong&gt;korean을 검색&lt;/strong&gt;하여 나오는 &lt;strong&gt;Korean Language Pack for Visual Studio Code&lt;/strong&gt;를 설치하면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;kopack&#34; srcset=&#34;
               /vscode/kopack_hua27a478d535d002cf8cb6de84ac364c9_87533_63bc2a2475a67d9c48cb297cbf074208.png 400w,
               /vscode/kopack_hua27a478d535d002cf8cb6de84ac364c9_87533_72e1323c580a8c7e891fb2e601852b31.png 760w,
               /vscode/kopack_hua27a478d535d002cf8cb6de84ac364c9_87533_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode/kopack_hua27a478d535d002cf8cb6de84ac364c9_87533_63bc2a2475a67d9c48cb297cbf074208.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;설치는 금방 끝납니다.&lt;/p&gt;
&lt;p&gt;오른쪽 아래에 &lt;strong&gt;Restart Now 버튼&lt;/strong&gt;이 나타나면, 눌러서 VSCode를 재시작하시기 바랍니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;kopack_restart&#34; srcset=&#34;
               /vscode/kopack_restart_hu16760a2b6cd9e5a92a05d802200e203a_8225_261c847b493d023035963d17185aec77.png 400w,
               /vscode/kopack_restart_hu16760a2b6cd9e5a92a05d802200e203a_8225_eb5b8739adae1fca9bd69f761b5ebf8a.png 760w,
               /vscode/kopack_restart_hu16760a2b6cd9e5a92a05d802200e203a_8225_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode/kopack_restart_hu16760a2b6cd9e5a92a05d802200e203a_8225_261c847b493d023035963d17185aec77.png&#34;
               width=&#34;503&#34;
               height=&#34;195&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;(개인적으로는 에러 검색 등의 용이성 때문에, 그냥 영어모드로 이용하고 있습니다)&lt;/p&gt;
&lt;h3 id=&#34;themeicon-extension&#34;&gt;Theme/icon extension&lt;/h3&gt;
&lt;p&gt;Marketplace에 보면 테마나 아이콘도 정말 다양하게 있습니다. 다음 그림과 같이 필터를 &lt;strong&gt;Themes 카테고리&lt;/strong&gt;로 설정하시면, 테마/아이콘에 관련된 extension들을 살펴볼 수 있습니다.&lt;/p&gt;
&lt;p&gt;테마/아이콘 변경은 왼쪽 아래의 설정아이콘을 통해 가능합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;theme&#34; srcset=&#34;
               /vscode/theme_huf34cb39c24e079bb9844e8100caef5f8_66743_0e5912b658176b4b21ab1ba9e2db7d1c.png 400w,
               /vscode/theme_huf34cb39c24e079bb9844e8100caef5f8_66743_3f92e44f7ad57b5bdb5e6cdb6c9f8c4c.png 760w,
               /vscode/theme_huf34cb39c24e079bb9844e8100caef5f8_66743_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode/theme_huf34cb39c24e079bb9844e8100caef5f8_66743_0e5912b658176b4b21ab1ba9e2db7d1c.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;theme_change&#34; srcset=&#34;
               /vscode/theme_change_hu52c14d4ac40959c65407d8137fc30c37_190741_f54be95f58cf14e1f88c796770fc4ec0.png 400w,
               /vscode/theme_change_hu52c14d4ac40959c65407d8137fc30c37_190741_2455ab8c80980b167a9c5ffc904a20bd.png 760w,
               /vscode/theme_change_hu52c14d4ac40959c65407d8137fc30c37_190741_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode/theme_change_hu52c14d4ac40959c65407d8137fc30c37_190741_f54be95f58cf14e1f88c796770fc4ec0.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;extension설정-동기화하기&#34;&gt;Extension/설정 동기화하기&lt;/h2&gt;
&lt;p&gt;VSCode는 설치한 Extension목록, 설정값 등을 다른 컴퓨터에서도 동기화하여 동일하게 사용할 수 있도록, &lt;strong&gt;Sync 기능을 제공&lt;/strong&gt;합니다.&lt;/p&gt;
&lt;p&gt;동기화를 위해서는 &lt;strong&gt;Microsoft 계정, GitHub 계정 둘 중 하나가 필요&lt;/strong&gt;합니다.&lt;/p&gt;
&lt;h3 id=&#34;sync-켜기&#34;&gt;Sync 켜기&lt;/h3&gt;
&lt;p&gt;왼쪽 아래의 &lt;strong&gt;계정 아이콘&lt;/strong&gt;을 클릭하여 Sync 기능을 활성화할 수 있습니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;sync&#34; srcset=&#34;
               /vscode/sync_hub4123ab2c6c6b674280e527321382fae_35519_73d0e13e6e4d18c2cd576906c187765e.png 400w,
               /vscode/sync_hub4123ab2c6c6b674280e527321382fae_35519_aa3dcb5ed722b38704913f62c90723cf.png 760w,
               /vscode/sync_hub4123ab2c6c6b674280e527321382fae_35519_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode/sync_hub4123ab2c6c6b674280e527321382fae_35519_73d0e13e6e4d18c2cd576906c187765e.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;작성일(2020년 11월) 기준, 다음과 같은 경고가 뜨네요.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;동기화 기능은 아직 준비단계입니다. 사용하기 전에 관련 문서를 읽어보세요.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;sync_warning&#34; srcset=&#34;
               /vscode/sync_warning_hu0906452124b75270b823b99e9d105aa8_5079_31b6a5e8acd197c320da3d746e033e07.png 400w,
               /vscode/sync_warning_hu0906452124b75270b823b99e9d105aa8_5079_72d5e19132c746702a6b2760101c4001.png 760w,
               /vscode/sync_warning_hu0906452124b75270b823b99e9d105aa8_5079_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode/sync_warning_hu0906452124b75270b823b99e9d105aa8_5079_31b6a5e8acd197c320da3d746e033e07.png&#34;
               width=&#34;558&#34;
               height=&#34;128&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;del&gt;아무도 안읽어보시겠죠&lt;/del&gt; &lt;strong&gt;Turn On&lt;/strong&gt;을 눌러 넘어갑니다.&lt;/p&gt;
&lt;p&gt;그러면 창 위에 다음 그림과 같이 동기화할 항목을 선택하는 내용과 함께 &lt;strong&gt;Sign in &amp;amp; Turn On&lt;/strong&gt; 버튼이 뜹니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;sync1&#34; srcset=&#34;
               /vscode/sync1_hu09ced26c7c6b9e428a9ae1ae4be158e3_13083_89fc7dcfe05569d86ea108d39fa1238d.png 400w,
               /vscode/sync1_hu09ced26c7c6b9e428a9ae1ae4be158e3_13083_46180ed2c9fbb95e1dc09ee0fcce697c.png 760w,
               /vscode/sync1_hu09ced26c7c6b9e428a9ae1ae4be158e3_13083_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode/sync1_hu09ced26c7c6b9e428a9ae1ae4be158e3_13083_89fc7dcfe05569d86ea108d39fa1238d.png&#34;
               width=&#34;652&#34;
               height=&#34;233&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sign in &amp;amp; Turn On&lt;/strong&gt; 버튼을 누르면, 계정 종류를 선택하는 항목이 뜹니다. 여기서 &lt;strong&gt;Microsoft로 로그인&lt;/strong&gt;이나 &lt;strong&gt;GitHub으로 로그인&lt;/strong&gt; 중 편하신 쪽으로 선택하시면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;sync2&#34; srcset=&#34;
               /vscode/sync2_hu0b968b7f7bc51aec80fc133399e9f3d2_7037_be493f4a2dc1bb6735fce6687bb7a3a4.png 400w,
               /vscode/sync2_hu0b968b7f7bc51aec80fc133399e9f3d2_7037_7a32e15688ad06d8557c092a5eb4d73a.png 760w,
               /vscode/sync2_hu0b968b7f7bc51aec80fc133399e9f3d2_7037_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode/sync2_hu0b968b7f7bc51aec80fc133399e9f3d2_7037_be493f4a2dc1bb6735fce6687bb7a3a4.png&#34;
               width=&#34;642&#34;
               height=&#34;165&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;GitHub 계정으로 로그인하시는 경우에는, GitHub과 VSCode 연동을 승인하는 페이지가 뜹니다.&lt;/p&gt;
&lt;p&gt;다음과 같은 경고창이 뜨면 &lt;strong&gt;Open&lt;/strong&gt;을 눌러 진행하시면 됩니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;sync_github.png&#34; alt=&#34;sync_github&#34;&gt;&lt;/p&gt;

  &lt;/div&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://code.visualstudio.com/&lt;/a&gt;&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;통합 개발 환경(Integrated Development Environment). 프로젝트 관리, 소스코드 편집, 컴파일, 디버그, 바이너리 배포 등, 개발에 필요한 여러 기능을 한데 묶어놓은 프로그램.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;</description>
    </item>
    
    <item>
      <title>대충보는 C&#43;&#43; &amp; CMake - 1. 실습환경 만들기</title>
      <link>https://evandde.github.io/praccpp-001-envsetting/</link>
      <pubDate>Fri, 24 Sep 2021 17:57:09 +0900</pubDate>
      <guid>https://evandde.github.io/praccpp-001-envsetting/</guid>
      <description>&lt;p&gt;&lt;b&gt;Windows 10&lt;/b&gt; 환경에서 Microsoft Visual C++ (MSVC)를 이용하여 C++ 및 CMake 개발 환경을 구축하고 VSCode를 설치하여 연동하는 방법을 살펴봅니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;microsoft-visual-c-설치&#34;&gt;Microsoft Visual C++ 설치&lt;/h2&gt;
&lt;h3 id=&#34;다운로드&#34;&gt;다운로드&lt;/h3&gt;
&lt;p&gt;현재 시점에서 최신 버전에 해당하는, &lt;b&gt;Visual Studio 2019용 Build Tools&lt;/b&gt;를 다운로드 받겠습니다.&lt;/p&gt;
&lt;p&gt;Microsoft에서 제공하는 Visual Studio 2019용 Build Tools는 &lt;a href=&#34;https://visualstudio.microsoft.com/ko/downloads/#build-tools-for-visual-studio-2019&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;이 링크&lt;/a&gt;에서 무료로 받을 수 있습니다. 아래 그림에서 보이는 다운로드 링크를 누르면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;01_vs2019buildtools_download&#34; srcset=&#34;
               /praccpp-001-envsetting/01_vs2019buildtools_download_hub57466a22a601cab6b68f2e5874681b3_25611_909f8b98a44ad6a4f6cf4df19f3ef6ba.png 400w,
               /praccpp-001-envsetting/01_vs2019buildtools_download_hub57466a22a601cab6b68f2e5874681b3_25611_8578db8bcfddfb3e89d513c19e7ed0e7.png 760w,
               /praccpp-001-envsetting/01_vs2019buildtools_download_hub57466a22a601cab6b68f2e5874681b3_25611_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/praccpp-001-envsetting/01_vs2019buildtools_download_hub57466a22a601cab6b68f2e5874681b3_25611_909f8b98a44ad6a4f6cf4df19f3ef6ba.png&#34;
               width=&#34;760&#34;
               height=&#34;135&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;설치&#34;&gt;설치&lt;/h3&gt;
&lt;p&gt;다운받은 파일(&lt;code&gt;vs_buildtools_....exe&lt;/code&gt;)을 실행합니다. 다음 그림과 같은 창이 뜰 수 있습니다. &lt;b&gt;계속&lt;/b&gt; 버튼을 누르고 잠시 기다려줍니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;02_vs2019buildtools_install&#34; srcset=&#34;
               /praccpp-001-envsetting/02_vs2019buildtools_install_hu6e02cd8b0b7d1d230c309820161a8cdd_19149_4efc43656ed797e74ddf58cb381dc51d.png 400w,
               /praccpp-001-envsetting/02_vs2019buildtools_install_hu6e02cd8b0b7d1d230c309820161a8cdd_19149_7e57b38156a4bcbdd92e55c5a68a663a.png 760w,
               /praccpp-001-envsetting/02_vs2019buildtools_install_hu6e02cd8b0b7d1d230c309820161a8cdd_19149_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/praccpp-001-envsetting/02_vs2019buildtools_install_hu6e02cd8b0b7d1d230c309820161a8cdd_19149_4efc43656ed797e74ddf58cb381dc51d.png&#34;
               width=&#34;480&#34;
               height=&#34;280&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;다운로드를 마치고 설치 준비가 다 되면, 다음 그림과 같은 창이 뜰 것입니다. 이 중 &lt;b&gt;C++를 사용한 데스크톱 개발&lt;/b&gt;을 클릭합니다. 오른쪽 설치 세부 정보에서, 자동으로 선택사항 중 일부가 선택될 것입니다. 혹시라도 &lt;b&gt;Windows용 C++ CMake 도구&lt;/b&gt;가 선택이 안되어있다면, &lt;b&gt;꼭 선택&lt;/b&gt;해주시기 바랍니다. 선택을 완료하셨다면 &lt;b&gt;Install&lt;/b&gt; 버튼을 눌러 설치를 진행하시면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;03_vs2019buildtools_install&#34; srcset=&#34;
               /praccpp-001-envsetting/03_vs2019buildtools_install_huefd9916a1e1dc2faa688934edddc7916_120879_3802a8ff8d6569e57d6b90ed90dc4033.png 400w,
               /praccpp-001-envsetting/03_vs2019buildtools_install_huefd9916a1e1dc2faa688934edddc7916_120879_8fed8aa0d866cb0977b6d1166f22591b.png 760w,
               /praccpp-001-envsetting/03_vs2019buildtools_install_huefd9916a1e1dc2faa688934edddc7916_120879_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/praccpp-001-envsetting/03_vs2019buildtools_install_huefd9916a1e1dc2faa688934edddc7916_120879_3802a8ff8d6569e57d6b90ed90dc4033.png&#34;
               width=&#34;760&#34;
               height=&#34;424&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;실행&#34;&gt;실행&lt;/h3&gt;
&lt;p&gt;설치가 완료되었다면, 잘 실행되는지 테스트를 해보아야 합니다. 앞으로 진행할 실습을 시작할 때마다, 이 &lt;b&gt;Developer PowerShell for VS 2019&lt;/b&gt;를 켜주어야 합니다. &lt;b&gt;작업표시줄에 고정&lt;/b&gt;하거나, &lt;b&gt;시작화면에 고정&lt;/b&gt;하거나, 혹은 &lt;b&gt;바탕화면에 단축 아이콘&lt;/b&gt;을 만드시는 등, 실행하기 편하도록 해두시기를 추천드립니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;b&gt;[WIN]+[S]&lt;/b&gt; 를 눌러 검색을 띄움&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;developer powershell&lt;/code&gt;을 입력하여 &lt;b&gt;Developer PowerShell for VS 2019&lt;/b&gt;를 찾은 뒤 실행&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;04_vs2019buildtools_test1&#34; srcset=&#34;
               /praccpp-001-envsetting/04_vs2019buildtools_test1_hu607f4985e581e7292b5d47d4b801dedf_138468_9e520458cb5b5fcc62dbf79c7daf6f75.png 400w,
               /praccpp-001-envsetting/04_vs2019buildtools_test1_hu607f4985e581e7292b5d47d4b801dedf_138468_4e142f530f81ad56b5a45665a47bdc0f.png 760w,
               /praccpp-001-envsetting/04_vs2019buildtools_test1_hu607f4985e581e7292b5d47d4b801dedf_138468_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/praccpp-001-envsetting/04_vs2019buildtools_test1_hu607f4985e581e7292b5d47d4b801dedf_138468_9e520458cb5b5fcc62dbf79c7daf6f75.png&#34;
               width=&#34;760&#34;
               height=&#34;623&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;cl&lt;/code&gt; 명령어와 &lt;code&gt;cmake&lt;/code&gt; 명령어를 각각 입력하여, 다음 그림과 같이 각각의 사용법(usage)이 뜨는지 확인&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;05_vs2019buildtools_test2&#34; srcset=&#34;
               /praccpp-001-envsetting/05_vs2019buildtools_test2_hu94a7aa42ba3a8e8312a5ae88b2edc2c9_24846_44a9d9706cd9e3255bce1f784eac3e01.png 400w,
               /praccpp-001-envsetting/05_vs2019buildtools_test2_hu94a7aa42ba3a8e8312a5ae88b2edc2c9_24846_3befd5a34a8b7a447e978981ce71caff.png 760w,
               /praccpp-001-envsetting/05_vs2019buildtools_test2_hu94a7aa42ba3a8e8312a5ae88b2edc2c9_24846_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/praccpp-001-envsetting/05_vs2019buildtools_test2_hu94a7aa42ba3a8e8312a5ae88b2edc2c9_24846_44a9d9706cd9e3255bce1f784eac3e01.png&#34;
               width=&#34;760&#34;
               height=&#34;397&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;vscode-설치&#34;&gt;VSCode 설치&lt;/h2&gt;
&lt;h3 id=&#34;다운로드-1&#34;&gt;다운로드&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;공식 홈페이지&lt;/a&gt; 첫화면에 있는 다운로드 버튼을 누르면 설치 프로그램이 다운로드 됩니다.&lt;/p&gt;
&lt;p&gt;혹은, &lt;a href=&#34;https://code.visualstudio.com/download&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;다운로드 페이지&lt;/a&gt;를 이용하시면 좀 더 다양한 옵션의 설치 파일을 다운로드 받을 수 있습니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;06_vscode_mainpage_download&#34; srcset=&#34;
               /praccpp-001-envsetting/06_vscode_mainpage_download_hufc464033e495f88261d6484504eb9237_371107_5032079348e1f8b63c47acc58d00d188.png 400w,
               /praccpp-001-envsetting/06_vscode_mainpage_download_hufc464033e495f88261d6484504eb9237_371107_e485de552509a5a298763d268417dd8a.png 760w,
               /praccpp-001-envsetting/06_vscode_mainpage_download_hufc464033e495f88261d6484504eb9237_371107_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/praccpp-001-envsetting/06_vscode_mainpage_download_hufc464033e495f88261d6484504eb9237_371107_5032079348e1f8b63c47acc58d00d188.png&#34;
               width=&#34;732&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;설치-1&#34;&gt;설치&lt;/h3&gt;
&lt;p&gt;다운받은 파일(&lt;code&gt;VSCode...Setup-....exe&lt;/code&gt;)을 실행합니다.&lt;/p&gt;
&lt;p&gt;공식 홈페이지 첫화면에서 다운로드 버튼을 눌렀거나, User installer를 받으신 경우에는, 권한 이슈로 인해 다음과 같은 경고가 뜰 수 있습니다. 개인 컴퓨터에 작업을 수행하고 있는 일반적인 경우라면, &lt;b&gt;확인 &lt;/b&gt;버튼을 누르고 진행하시면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;07_vscode_install_warning&#34; srcset=&#34;
               /praccpp-001-envsetting/07_vscode_install_warning_hu48d02a51faed26f6ada0cf7f7622eea8_6129_e0b102a8223aa77038f3df9aa151f1d9.png 400w,
               /praccpp-001-envsetting/07_vscode_install_warning_hu48d02a51faed26f6ada0cf7f7622eea8_6129_7a434070efdaae037b5a501caa1beeb9.png 760w,
               /praccpp-001-envsetting/07_vscode_install_warning_hu48d02a51faed26f6ada0cf7f7622eea8_6129_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/praccpp-001-envsetting/07_vscode_install_warning_hu48d02a51faed26f6ada0cf7f7622eea8_6129_e0b102a8223aa77038f3df9aa151f1d9.png&#34;
               width=&#34;413&#34;
               height=&#34;185&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;설치 과정 중 다음과 같은 화면이 뜰 텐데, 여기서 다른 건 몰라도 &lt;b&gt;다음 그림에 표시한 세 가지 항목은 체크해 두시길 권장&lt;/b&gt;합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;08_vscode_install&#34; srcset=&#34;
               /praccpp-001-envsetting/08_vscode_install_hu5f444f29464cd1fc206f6e3c6be42c2c_24527_be0695542f04faefe9122a652983f34c.png 400w,
               /praccpp-001-envsetting/08_vscode_install_hu5f444f29464cd1fc206f6e3c6be42c2c_24527_c34c609d7dbcf724b827810f58fc9891.png 760w,
               /praccpp-001-envsetting/08_vscode_install_hu5f444f29464cd1fc206f6e3c6be42c2c_24527_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/praccpp-001-envsetting/08_vscode_install_hu5f444f29464cd1fc206f6e3c6be42c2c_24527_be0695542f04faefe9122a652983f34c.png&#34;
               width=&#34;598&#34;
               height=&#34;464&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;실행-1&#34;&gt;실행&lt;/h3&gt;
&lt;p&gt;VSCode를 실행시키는 것만이 목적이라면 그냥 시작메뉴나 바탕화면에 있는 Visual Studio Code를 실행시키면 됩니다.&lt;/p&gt;
&lt;p&gt;하지만, &lt;font color=red&gt;&lt;b&gt;우리는 MSVC와 연동해서 VSCode를 실행시켜야 하므로, 반드시 다음의 방법으로 실행해주셔야 합니다&lt;/b&gt;&lt;/font&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;위에서 켜보았던 &lt;b&gt;Developer PowerShell for VS 2019&lt;/b&gt;를 실행&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;명령줄에 &lt;code&gt;code&lt;/code&gt;라고 입력하여 &lt;b&gt;VSCode&lt;/b&gt;를 실행&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;09_vscode_run&#34; srcset=&#34;
               /praccpp-001-envsetting/09_vscode_run_hua461e13989bf23c0cb14046057f8973e_11313_110c40b3170ab34fc73b0f8d6f41a128.png 400w,
               /praccpp-001-envsetting/09_vscode_run_hua461e13989bf23c0cb14046057f8973e_11313_30a03729ba673b7a17f400996e7b337b.png 760w,
               /praccpp-001-envsetting/09_vscode_run_hua461e13989bf23c0cb14046057f8973e_11313_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/praccpp-001-envsetting/09_vscode_run_hua461e13989bf23c0cb14046057f8973e_11313_110c40b3170ab34fc73b0f8d6f41a128.png&#34;
               width=&#34;643&#34;
               height=&#34;129&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다음과 같은 창이 떴다면 정상적으로 실행이 된 것입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;10_vscode_run&#34; srcset=&#34;
               /praccpp-001-envsetting/10_vscode_run_hu0b0e1eda9dd677061eff8de8c8a75a99_71769_36f07cc44663cd8e4afc0ffeac1a0acb.png 400w,
               /praccpp-001-envsetting/10_vscode_run_hu0b0e1eda9dd677061eff8de8c8a75a99_71769_fb08da58e0a9a0a8779eb8abf404899d.png 760w,
               /praccpp-001-envsetting/10_vscode_run_hu0b0e1eda9dd677061eff8de8c8a75a99_71769_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/praccpp-001-envsetting/10_vscode_run_hu0b0e1eda9dd677061eff8de8c8a75a99_71769_36f07cc44663cd8e4afc0ffeac1a0acb.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;필수-extension-설치&#34;&gt;필수 Extension 설치&lt;/h2&gt;
&lt;p&gt;이어서, 이 시리즈를 진행하기 위해 필수적인 &lt;strong&gt;VSCode의 extension들을 설치&lt;/strong&gt;하도록 하겠습니다.&lt;/p&gt;
&lt;p&gt;Extension에 관한 내용을 살펴보기 위해서는, 첫 화면의 &lt;strong&gt;맨 왼쪽에 있는 아이콘 중 5번째에 있는 것&lt;/strong&gt;을 누르거나, 단축키 &lt;b&gt;[CTRL]+[SHIFT]+[X]&lt;/b&gt;를 누르면 됩니다. 이후, 검색 란에 키워드를 입력하여 원하는 extension을 찾아서 설치할 수 있습니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;11_vscode_extension&#34; srcset=&#34;
               /praccpp-001-envsetting/11_vscode_extension_hua79e4ac25bcc1889071411ce591649da_143263_065250876e363ceba80f04bcf267c811.png 400w,
               /praccpp-001-envsetting/11_vscode_extension_hua79e4ac25bcc1889071411ce591649da_143263_d3b714f23fe078ee1c4c6572870fb957.png 760w,
               /praccpp-001-envsetting/11_vscode_extension_hua79e4ac25bcc1889071411ce591649da_143263_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/praccpp-001-envsetting/11_vscode_extension_hua79e4ac25bcc1889071411ce591649da_143263_065250876e363ceba80f04bcf267c811.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;extension-1-cc&#34;&gt;Extension 1: C/C++&lt;/h3&gt;
&lt;p&gt;&amp;quot;&lt;b&gt;C/C++&lt;/b&gt;&amp;quot;이라고 검색하시면 다음과 같은 extension이 뜹니다. &lt;strong&gt;Install&lt;/strong&gt; 버튼을 눌러 설치하시면 됩니다.&lt;/p&gt;
&lt;p&gt;이 extension은 VSCode에서 C 언어 및 C++ 언어를 사용함에 있어, &lt;strong&gt;여러 C 언어 및 C++ 언어용 컴파일러 및 빌드도구와의 연동&lt;/strong&gt;이나 &lt;strong&gt;자동완성 기능&lt;/strong&gt; 등을 사용할 수 있게 해줍니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;12_vscode_ccpp_extension&#34; srcset=&#34;
               /praccpp-001-envsetting/12_vscode_ccpp_extension_hu114703246117f9ee3ec0c95693f134bb_116957_4c13d9c73e3a16a3befcca4640106e1a.png 400w,
               /praccpp-001-envsetting/12_vscode_ccpp_extension_hu114703246117f9ee3ec0c95693f134bb_116957_e4b20650c198d3cd81590a14f05a165d.png 760w,
               /praccpp-001-envsetting/12_vscode_ccpp_extension_hu114703246117f9ee3ec0c95693f134bb_116957_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/praccpp-001-envsetting/12_vscode_ccpp_extension_hu114703246117f9ee3ec0c95693f134bb_116957_4c13d9c73e3a16a3befcca4640106e1a.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;extension-2-cmake-tools-cmake&#34;&gt;Extension 2: CMake Tools (+CMake)&lt;/h3&gt;
&lt;p&gt;&amp;quot;&lt;b&gt;CMake Tools&lt;/b&gt;&amp;quot;이라고 검색하시면 다음과 같은 extension이 뜹니다. &lt;strong&gt;Install&lt;/strong&gt; 버튼을 눌러 설치하시면 됩니다.&lt;/p&gt;
&lt;p&gt;이 extension은 VSCode에서 CMake를 바로 사용할 수 있도록 &lt;strong&gt;CMake와 연동&lt;/strong&gt;을 해주고, &lt;strong&gt;CMake 기반의 빌드 작업을 좀 더 쉽게 수행할 수 있도록 여러 UI를 제공&lt;/strong&gt;합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;13_vscode_cmaketools_extension&#34; srcset=&#34;
               /praccpp-001-envsetting/13_vscode_cmaketools_extension_hu135c962e182735c05b83f1a7877aab93_153536_e009a687ecc1beb33f19cd98c42757c8.png 400w,
               /praccpp-001-envsetting/13_vscode_cmaketools_extension_hu135c962e182735c05b83f1a7877aab93_153536_45ce2078f5add597652348d7ebbcc091.png 760w,
               /praccpp-001-envsetting/13_vscode_cmaketools_extension_hu135c962e182735c05b83f1a7877aab93_153536_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/praccpp-001-envsetting/13_vscode_cmaketools_extension_hu135c962e182735c05b83f1a7877aab93_153536_e009a687ecc1beb33f19cd98c42757c8.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;이걸 깔면, 바로 밑에 있는 &lt;b&gt;&amp;quot;CMake&amp;quot;&lt;/b&gt; extension도 알아서 자동으로 설치될텐데요, &lt;b&gt;그냥 같이 깔리게 두시면 됩니다&lt;/b&gt;. 이 extension은 CMake Tools에서 제공하지 않는, &lt;strong&gt;CMake 스크립트 작성 시 도움을 주는 여러 기능&lt;/strong&gt;이나 &lt;b&gt;문법에 따른 강조기능(Syntax Highlighting)&lt;/b&gt; 등을 제공합니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;정리&#34;&gt;정리&lt;/h2&gt;
&lt;p&gt;이 글에서는 MSVC의 구성요소인 C++ 빌드 도구와 CMake를 설치하였고, IDE로서 활용할 수 있는 VSCode를 설치 및 세팅하였습니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;changelog&#34;&gt;Changelog&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;2021-09-24: 최초 게시&lt;/li&gt;
&lt;li&gt;2021-10-06: 필수 Extension 설치 내용 추가&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
