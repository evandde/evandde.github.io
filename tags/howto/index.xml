<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HowTo | EvaNote</title>
    <link>https://evandde.github.io/tags/howto/</link>
      <atom:link href="https://evandde.github.io/tags/howto/index.xml" rel="self" type="application/rss+xml" />
    <description>HowTo</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>ko-kr</language><copyright>© 2020–2021 Evan Kim</copyright><lastBuildDate>Fri, 24 Sep 2021 14:21:45 +0900</lastBuildDate>
    <image>
      <url>https://evandde.github.io/media/icon_hu8e7e87b14a52eedd9109bf1b224bd29e_18847_512x512_fill_lanczos_center_3.png</url>
      <title>HowTo</title>
      <link>https://evandde.github.io/tags/howto/</link>
    </image>
    
    <item>
      <title>BIT Hacks - 자연수 승수 계산을 비트연산으로 빠르게 하는 법</title>
      <link>https://evandde.github.io/bithacks-power/</link>
      <pubDate>Fri, 24 Sep 2021 14:21:45 +0900</pubDate>
      <guid>https://evandde.github.io/bithacks-power/</guid>
      <description>&lt;p&gt;자연수 승수 연산에 한해, 비트연산 트릭을 활용하여 C++에서 기본으로 제공하는 pow() 함수보다 빠르게 계산하는 방법을 알아봅니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;tldr&#34;&gt;TL;DR&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;double pow_int(double base, int exp)
{
    double result = 1.;
    while (exp)
    {
        if (exp &amp;amp; 1)
            result *= base;
        exp &amp;gt;&amp;gt;= 1;
        base *= base;
    }
    return result;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;01_result&#34; srcset=&#34;
               /bithacks-power/01_result_huef670fe8e129f9b27517dd7a606eb88f_2674_2f48893f03abd14ce0c371db43bdab63.png 400w,
               /bithacks-power/01_result_huef670fe8e129f9b27517dd7a606eb88f_2674_5bd99c34fd40afc05a3b7cebaf84cbc7.png 760w,
               /bithacks-power/01_result_huef670fe8e129f9b27517dd7a606eb88f_2674_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/bithacks-power/01_result_huef670fe8e129f9b27517dd7a606eb88f_2674_2f48893f03abd14ce0c371db43bdab63.png&#34;
               width=&#34;261&#34;
               height=&#34;148&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;원리&#34;&gt;원리&lt;/h2&gt;
&lt;p&gt;실수 $a$와 자연수 $n$에 대하여, $a^n$을 계산하는 경우를 살펴보겠습니다.&lt;/p&gt;
&lt;p&gt;여기서 $n$은 2진법 변환을 통해 다음과 같이 표현할 수 있습니다.&lt;/p&gt;
&lt;p&gt;$$n = \sum_{i=0} b_i 2^i \text{, where }b_i=0 \text{ or }1$$&lt;/p&gt;
&lt;p&gt;위 식을 이용하면 $a^n$은 다음과 같이 변형됩니다.&lt;/p&gt;
&lt;p&gt;$$
\begin{equation}
\begin{aligned}
a^n &amp;amp; = a^{\sum_{i=0} b_i 2^i} \\&lt;br&gt;
&amp;amp; = \prod_{i=0} {a^{b_i 2^i}} \text{ (} \because x^{m+n} = x^m x^n \text{)} \\&lt;br&gt;
&amp;amp; = \prod_{i=0} ({a^{2^i}})^{b_i} \text{ (} \because x^{mn} = (x^m)^n \text{)} \\&lt;br&gt;
&amp;amp; = (b_0 \times a) \times (b_1 \times a^2) \times (b_2 \times (a^2)^2) \times (b_3 \times ((a^2)^2)^2) \times &amp;hellip;
\end{aligned}
\end{equation}
$$
이 식의 의미를 해석해보면 다음과 같습니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;$n$을 2진법으로 나타내었을 때 낮은 자리수부터 확인($b_0, b_1, &amp;hellip;$)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;매 $b_i$를 확인할 때마다, $a, a^2, (a^2)^2, &amp;hellip;$의 형태로 계속 제곱해 나감&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$b_i$가 0이면 그냥 넘어가고,&lt;/p&gt;
&lt;p&gt;$b_i$가 1이면 2에서 구한 $a^{2^i}$를 누적하여 곱함&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;예시&#34;&gt;예시&lt;/h2&gt;
&lt;p&gt;$3^5$를 계산해보겠습니다. 여기서 $a=3$이고, $n=5$가 됩니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;먼저, $n$을 2진법으로 변환하여 $b_i$들을 구합니다.&lt;/p&gt;
&lt;p&gt;$$n=5=1+4=1\times2^0+0\times2^1+1\times2^2$$&lt;/p&gt;
&lt;p&gt;$$\text{i.e. }b_0=1 \text{, } b_1=0 \text{, } b_2 = 1 \text{, and } b_k = 0 \text{ for }k&amp;gt;=3$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;이제 낮은 자리 수부터 확인하며 누적곱 작업을 수행합니다. 누적곱의 초기 값은 곱셈의 항등원인 &lt;font color=blue&gt;&lt;b&gt;1&lt;/b&gt;&lt;/font&gt;로 설정합니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;$a$는 &lt;font color=red&gt;&lt;b&gt;3&lt;/b&gt;&lt;/font&gt;입니다.&lt;/p&gt;
&lt;p&gt;$b_0$을 확인합니다. $b_0$가 $1$이므로, &lt;font color=blue&gt;&lt;b&gt;1&lt;/b&gt;&lt;/font&gt;에 &lt;font color=red&gt;&lt;b&gt;3&lt;/b&gt;&lt;/font&gt;을 곱합니다.&lt;/p&gt;
&lt;p&gt;결과는 &lt;font color=blue&gt;&lt;b&gt;3&lt;/b&gt;&lt;/font&gt;이 됩니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$a^2$는 &lt;font color=red&gt;&lt;b&gt;9&lt;/b&gt;&lt;/font&gt;입니다.&lt;/p&gt;
&lt;p&gt;$b_1$을 확인합니다. $b_1$가 $0$이므로, 아무것도 곱하지 않습니다.&lt;/p&gt;
&lt;p&gt;결과는 여전히 &lt;font color=blue&gt;&lt;b&gt;3&lt;/b&gt;&lt;/font&gt;입니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$(a^2)^2$는 &lt;font color=red&gt;&lt;b&gt;81&lt;/b&gt;&lt;/font&gt;입니다.&lt;/p&gt;
&lt;p&gt;$b_2$을 확인합니다. $b_2$가 $1$이므로, &lt;font color=blue&gt;&lt;b&gt;3&lt;/b&gt;&lt;/font&gt;에 &lt;font color=red&gt;&lt;b&gt;81&lt;/b&gt;&lt;/font&gt;을 곱합니다.&lt;/p&gt;
&lt;p&gt;결과는 &lt;font color=blue&gt;&lt;b&gt;243&lt;/b&gt;&lt;/font&gt;이 됩니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;이후의 $b_k$들은 모두 $0$이므로 최종 결과는 &lt;font color=blue&gt;&lt;b&gt;243&lt;/b&gt;&lt;/font&gt;입니다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;코드로의-적용c&#34;&gt;코드로의 적용(C++)&lt;/h2&gt;
&lt;p&gt;위 내용을 코드로 변환하면 다음과 같습니다.&lt;/p&gt;
&lt;p&gt;변수명의 의미를 고려하여, 위 식에서 $a$를 &lt;code&gt;base&lt;/code&gt;로, $n$을 &lt;code&gt;exp&lt;/code&gt;로 명명하였습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;double pow_int(double base, int exp)
{
    double result = 1.;
    while (exp)
    {
        if (exp &amp;amp; 1)
            result *= base;
        exp &amp;gt;&amp;gt;= 1;
        base *= base;
    }
    return result;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;누적곱을 수행하기 위한 &lt;code&gt;result&lt;/code&gt; 변수의 초기 값을 곱셈의 항등원인 &lt;font color=blue&gt;&lt;b&gt;1&lt;/b&gt;&lt;/font&gt;로 설정합니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;exp&lt;/code&gt; 값이 유효한 동안 while 반복문을 수행합니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;exp&lt;/code&gt;를 2진법으로 표현하였을 때 의 가장 낮은 자리수를 구합니다. (&lt;code&gt;exp &amp;amp; 1&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;만약 이 값이 1이라면, $b_i$가 1인 경우에 해당합니다. 따라서, 현재의 &lt;code&gt;base&lt;/code&gt; 값을 &lt;code&gt;result&lt;/code&gt;에 누적하여 곱합니다.&lt;/p&gt;
&lt;p&gt;만약 이 값이 0이라면, $b_i$가 0인 경우에 해당합니다. 따라서 &lt;code&gt;result&lt;/code&gt;에 아무것도 곱하지 않고 넘어갑니다.&lt;/p&gt;
&lt;p&gt;예를 들어, &lt;code&gt;exp&lt;/code&gt;의 $b_0$ 값이 1이었다면, while 반복문을 맨 처음 수행할 때 이 if 조건이 참이 되어, &lt;code&gt;result *= base;&lt;/code&gt; 구문이 수행되고, 위 설명에서 $a$를 곱해주는 것과 동일한 작업이 이루어집니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;exp&lt;/code&gt;를 오른쪽으로 한 칸 비트시프트를 수행합니다. (&lt;code&gt;exp &amp;gt;&amp;gt;= 1;&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;이를 통해, 방금 살펴본 $b_i$가 버려지고, 그 다음 자리에 해당하는 $b_{i+1}$이 가장 낮은 자리로 옮겨지는 과정이 반복됩니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;base&lt;/code&gt;를 제곱합니다. (&lt;code&gt;base *= base;&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;이를 통해 $(&amp;hellip;(a^2)^2)&amp;hellip;)^2$에 해당하는 반복 연산이 수행됩니다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;최종적으로 누적곱이 수행된 결과를 반환합니다. (&lt;code&gt;return result;&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;pow-함수와의-비교용-예시-코드&#34;&gt;pow() 함수와의 비교용 예시 코드&lt;/h2&gt;
&lt;h3 id=&#34;코드&#34;&gt;코드&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#include &amp;lt;iostream&amp;gt;

double pow_int(double base, int exp)
{
    double result = 1.;
    while (exp)
    {
        if (exp &amp;amp; 1)
            result *= base;
        exp &amp;gt;&amp;gt;= 1;
        base *= base;
    }
    return result;
}

int main()
{
    const int N = 100000000;
    double base = 12.345;
    int exp = 67;
    double result1, result2;

    std::cout &amp;lt;&amp;lt; base &amp;lt;&amp;lt; &amp;quot;^&amp;quot; &amp;lt;&amp;lt; exp &amp;lt;&amp;lt; &amp;quot;\n\n&amp;quot;;

    auto startT1 = clock();
    for (int i = 0; i &amp;lt; N; ++i)
        result1 = pow(base, exp);
    auto endT1 = clock();
    std::cout &amp;lt;&amp;lt; &amp;quot;Calculated by pow() function\n&amp;quot;;
    std::cout &amp;lt;&amp;lt; &amp;quot;Answer: &amp;quot; &amp;lt;&amp;lt; result1 &amp;lt;&amp;lt; &amp;quot;\n&amp;quot;;
    std::cout &amp;lt;&amp;lt; &amp;quot;Elapsed time: &amp;quot; &amp;lt;&amp;lt; (endT1 - startT1) &amp;lt;&amp;lt; &amp;quot; ms\n\n&amp;quot;;
    
    auto startT2 = clock();
    for (int i = 0; i &amp;lt; N; ++i)
        result2 = pow_int(base, exp);
    auto endT2 = clock();
    std::cout &amp;lt;&amp;lt; &amp;quot;Calculated by pow_int() function\n&amp;quot;;
    std::cout &amp;lt;&amp;lt; &amp;quot;Answer: &amp;quot; &amp;lt;&amp;lt; result2 &amp;lt;&amp;lt; &amp;quot;\n&amp;quot;;
    std::cout &amp;lt;&amp;lt; &amp;quot;Elapsed time: &amp;quot; &amp;lt;&amp;lt; (endT2 - startT2) &amp;lt;&amp;lt; &amp;quot; ms\n\n&amp;quot;;

    return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;결과&#34;&gt;결과&lt;/h3&gt;
&lt;p&gt;i5-9500 @ 3.00GHz 기준&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;01_result&#34; srcset=&#34;
               /bithacks-power/01_result_huef670fe8e129f9b27517dd7a606eb88f_2674_2f48893f03abd14ce0c371db43bdab63.png 400w,
               /bithacks-power/01_result_huef670fe8e129f9b27517dd7a606eb88f_2674_5bd99c34fd40afc05a3b7cebaf84cbc7.png 760w,
               /bithacks-power/01_result_huef670fe8e129f9b27517dd7a606eb88f_2674_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/bithacks-power/01_result_huef670fe8e129f9b27517dd7a606eb88f_2674_2f48893f03abd14ce0c371db43bdab63.png&#34;
               width=&#34;261&#34;
               height=&#34;148&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Geant4 Version에 따라 동작을 달리하도록 코딩하는 법</title>
      <link>https://evandde.github.io/geant4-coding-asversion/</link>
      <pubDate>Fri, 24 Sep 2021 10:05:36 +0900</pubDate>
      <guid>https://evandde.github.io/geant4-coding-asversion/</guid>
      <description>&lt;p&gt;Geant4 코드 작성 시, 연동되는 Geant4의 버전을 확인하고 버전에 따라 동작을 달리 하도록 코딩하는 방법을 알아봅니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;tldr&#34;&gt;TL;DR&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;G4Version.hh 헤더를 포함시킴&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;#define&lt;/code&gt; 전처리기를 통해 정의되는 &lt;code&gt;G4VERSION_NUMBER&lt;/code&gt; 매크로상수를 이용하여 Geant4의 &lt;strong&gt;버전 번호&lt;/strong&gt; 확인&lt;/p&gt;
&lt;p&gt;버전 번호는 정수값으로 부여되며 다음의 규칙을 따름&lt;/p&gt;
&lt;p&gt;&lt;font color=red&gt;A&lt;/font&gt;&lt;font color=blue&gt;B&lt;/font&gt;&lt;font color=green&gt;C&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font color=red&gt;A&lt;/font&gt;: Major version number&lt;/p&gt;
&lt;p&gt;&lt;font color=blue&gt;B&lt;/font&gt;: Minor version number&lt;/p&gt;
&lt;p&gt;&lt;font color=green&gt;C&lt;/font&gt;: patch number&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;예시&lt;/p&gt;
&lt;p&gt;Geant4 Version &lt;font color=red&gt;9&lt;/font&gt;.&lt;font color=blue&gt;6&lt;/font&gt;의 &lt;code&gt;G4VERSION_NUMBER&lt;/code&gt;는 &lt;font color=red&gt;9&lt;/font&gt;&lt;font color=blue&gt;6&lt;/font&gt;&lt;font color=green&gt;0&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Geant4 Version &lt;font color=red&gt;10&lt;/font&gt;.&lt;font color=blue&gt;7&lt;/font&gt; patch 0&lt;font color=green&gt;2&lt;/font&gt;의 &lt;code&gt;G4VERSION_NUMBER&lt;/code&gt;는 &lt;font color=red&gt;10&lt;/font&gt;&lt;font color=blue&gt;7&lt;/font&gt;&lt;font color=green&gt;2&lt;/font&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;이 외, &lt;code&gt;G4VERSION_TAG&lt;/code&gt; 매크로상수나, G4String 자료형의 &lt;code&gt;G4Version&lt;/code&gt;, &lt;code&gt;G4Date&lt;/code&gt; 변수를 이용할 수도 있음&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;g4versionhh&#34;&gt;G4Version.hh&lt;/h2&gt;
&lt;p&gt;Geant4에서는 현재 이용중인 Geant4 라이브러리의 버전 정보를 담고있는 G4Version.hh 헤더를 제공합니다.&lt;/p&gt;
&lt;p&gt;사용자는, 코드 어느 곳에서든 이 헤더를 포함시켜서 Geant4의 버전 정보를 이용할 수 있습니다.&lt;/p&gt;
&lt;h3 id=&#34;g4version_number&#34;&gt;G4VERSION_NUMBER&lt;/h3&gt;
&lt;p&gt;가장 많이 쓰일 것으로 생각되는 매크로상수입니다.&lt;/p&gt;
&lt;p&gt;G4Version.hh 파일 내에서, 다음과 같은 코드를 통해 정의되어 있습니다. (Version 10.7 patch 02 기준)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#ifndef G4VERSION_NUMBER
	#define G4VERSION_NUMBER 1072
#endif
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;G4VERSION_NUMBER&lt;/code&gt;라는 매크로상수는 Geant4의 버전 번호를 의미하는 정수값으로 부여되며 다음의 규칙을 따릅니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;font color=red&gt;A&lt;/font&gt;&lt;font color=blue&gt;B&lt;/font&gt;&lt;font color=green&gt;C&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font color=red&gt;A&lt;/font&gt;: Major version number&lt;/p&gt;
&lt;p&gt;&lt;font color=blue&gt;B&lt;/font&gt;: Minor version number&lt;/p&gt;
&lt;p&gt;&lt;font color=green&gt;C&lt;/font&gt;: patch number&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;예를 들어 Geant4 Version &lt;font color=red&gt;9&lt;/font&gt;.&lt;font color=blue&gt;6&lt;/font&gt;의 &lt;code&gt;G4VERSION_NUMBER&lt;/code&gt;는 &lt;font color=red&gt;9&lt;/font&gt;&lt;font color=blue&gt;6&lt;/font&gt;&lt;font color=green&gt;0&lt;/font&gt;이 됩니다. (patch 번호가 없으면 0번으로 붙게됩니다)&lt;/p&gt;
&lt;p&gt;또 다른 예로, Geant4 Version &lt;font color=red&gt;10&lt;/font&gt;.&lt;font color=blue&gt;7&lt;/font&gt; patch 0&lt;font color=green&gt;2&lt;/font&gt;의 &lt;code&gt;G4VERSION_NUMBER&lt;/code&gt;는 &lt;font color=red&gt;10&lt;/font&gt;&lt;font color=blue&gt;7&lt;/font&gt;&lt;font color=green&gt;2&lt;/font&gt;가 됩니다. (10.x 버전 이후의 경우에는 major version number가 두자리수가 됩니다)&lt;/p&gt;
&lt;p&gt;사용자는 이 매크로상수를 다음과 같이 활용할 수 있습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#include &amp;quot;G4Version.hh&amp;quot;

// ...

if(G4VERSION_NUMBER &amp;gt;= 1000)
{
	// What to do when the version is 10.x
}
else
{
	// What to do when the version is 9.x
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;g4version_tag&#34;&gt;G4VERSION_TAG&lt;/h3&gt;
&lt;p&gt;이 매크로상수는 G4Version.hh 파일 내에서, 다음과 같은 코드를 통해 정의되어 있습니다. (Version 10.7 patch 02 기준)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#ifndef G4VERSION_TAG
	#define G4VERSION_TAG &amp;quot;$Name: geant4-10-07-patch-02 $&amp;quot;
#endif
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Geant4의 버전명이 보다 상세하게 풀어서 쓰여있습니다.&lt;/p&gt;
&lt;h3 id=&#34;g4version&#34;&gt;G4Version&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;G4Version&lt;/code&gt;은 G4Version.hh에 정의된 G4String형 변수입니다. 다음과 같은 코드를 통해 정의되어 있습니다. (Version 10.7 patch 02 기준)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#ifdef G4MULTITHREADED
static const G4String G4Version = &amp;quot;$Name: geant4-10-07-patch-02 [MT]$&amp;quot;;
#else
static const G4String G4Version = &amp;quot;$Name: geant4-10-07-patch-02 $&amp;quot;;
#endif
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;G4VERSION_TAG&lt;/code&gt; 매크로상수와 기본적으로 같은 값을 가집니다만, Multi-threading 옵션을 켜고 설치한 Geant4의 경우에는 &lt;code&gt;G4Version&lt;/code&gt;변수의 끝에 &lt;code&gt;[MT]&lt;/code&gt; 표시가 추가됩니다.&lt;/p&gt;
&lt;h3 id=&#34;g4date&#34;&gt;G4Date&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;G4Date&lt;/code&gt;은 G4Version.hh에 정의된 G4String형 변수입니다. 다음과 같은 코드를 통해 정의되어 있습니다. (Version 10.7 patch 02 기준)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;static const G4String G4Date = &amp;quot;(11-June-2021)&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;해당 버전이 출시된 날짜가 저장되어 있습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Visual Studio Code에서 MSVC 기반 C&#43;&#43;, CMake 환경 설정하기</title>
      <link>https://evandde.github.io/vscode-msvc/</link>
      <pubDate>Thu, 26 Aug 2021 10:05:15 +0900</pubDate>
      <guid>https://evandde.github.io/vscode-msvc/</guid>
      <description>&lt;p&gt;VSCode에서 Microsoft Visual Studio 빌드 도구인 &lt;b&gt;MSVC&lt;/b&gt;를 이용하여 &lt;b&gt;C/C++ 언어&lt;/b&gt; 및 &lt;b&gt;CMake&lt;/b&gt;를 사용하기 위한 환경을 구축하는 방법에 대해 알아봅니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    여기서는 &lt;b&gt;VSCode 설치를 완료한 상태&lt;/b&gt;라고 가정합니다. VSCode 설치 및 기본 세팅은 &lt;a href=&#34;https://evandde.github.io/vscode/&#34;&gt;이 글&lt;/a&gt;을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    MSVC는 Windows에서만 이용 가능합니다. Linux나 Mac을 이용하시는 경우에는 &lt;b&gt;gcc&lt;/b&gt;와 같은 다른 대안을 이용하시기 바랍니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;vs2019-빌드-도구-설치&#34;&gt;VS2019 빌드 도구 설치&lt;/h2&gt;
&lt;p&gt;VSCode는 C 언어용 컴파일러나 디버거를 자체적으로 내장하고있지 않습니다. 때문에 C 언어를 VSCode에서 사용하려면, 컴파일러와 디버거를 직접 설치하고 이를 연동해주는 작업이 필요합니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    Extension을 설치한다고 해서 컴파일러나 디버거가 설치되는 것은 아닙니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;이 글에서는 Microsoft사에서 제공하는 MSVC(Microsoft Visual C++)를 이용하여 진행할 것입니다.&lt;/p&gt;
&lt;h3 id=&#34;다운로드&#34;&gt;다운로드&lt;/h3&gt;
&lt;p&gt;Microsoft에서 제공하는 Visual Studio 2019용 Build Tools는 &lt;a href=&#34;https://visualstudio.microsoft.com/ko/downloads/#build-tools-for-visual-studio-2019&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;이 링크&lt;/a&gt;에서 무료로 받을 수 있습니다. 아래 그림에서 보이는 다운로드 링크를 누르면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;vs2019buildtools_download&#34; srcset=&#34;
               /vscode-msvc/vs2019buildtools_download_hub57466a22a601cab6b68f2e5874681b3_25611_df9e25f1c544aa68a78a92d89e0c13a0.png 400w,
               /vscode-msvc/vs2019buildtools_download_hub57466a22a601cab6b68f2e5874681b3_25611_b06efe6e544273a41390ecc7e564f614.png 760w,
               /vscode-msvc/vs2019buildtools_download_hub57466a22a601cab6b68f2e5874681b3_25611_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/vs2019buildtools_download_hub57466a22a601cab6b68f2e5874681b3_25611_df9e25f1c544aa68a78a92d89e0c13a0.png&#34;
               width=&#34;760&#34;
               height=&#34;135&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;설치&#34;&gt;설치&lt;/h3&gt;
&lt;p&gt;다운받은 뒤 실행하면, 아래 그림과 같은 창이 뜰 것입니다. 이 중 &lt;b&gt;C++를 사용한 데스크톱 개발&lt;/b&gt;을 클릭합니다. 오른쪽 설치 세부 정보에서, 자동으로 선택사항 중 일부가 선택될 것입니다. 혹시라도 &lt;b&gt;Windows용 C++ CMake 도구&lt;/b&gt;가 선택이 안되어있다면, &lt;b&gt;꼭 선택&lt;/b&gt;해주시기 바랍니다. 선택을 완료하셨다면 설치를 진행하시면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;vs2019buildtools_install&#34; srcset=&#34;
               /vscode-msvc/vs2019buildtools_install_huefd9916a1e1dc2faa688934edddc7916_120879_c5d8029504a4fb8ef927f8c6b3a180ce.png 400w,
               /vscode-msvc/vs2019buildtools_install_huefd9916a1e1dc2faa688934edddc7916_120879_0b55a1d22f1be37baad8292a20a41ba4.png 760w,
               /vscode-msvc/vs2019buildtools_install_huefd9916a1e1dc2faa688934edddc7916_120879_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/vs2019buildtools_install_huefd9916a1e1dc2faa688934edddc7916_120879_c5d8029504a4fb8ef927f8c6b3a180ce.png&#34;
               width=&#34;760&#34;
               height=&#34;424&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;실행&#34;&gt;실행&lt;/h3&gt;
&lt;p&gt;제대로 설치가 되었는지 확인해보겠습니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;b&gt;[WIN]+[S]&lt;/b&gt; 를 눌러 검색을 띄움&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;developer powershell&lt;/code&gt;을 입력하여 &lt;b&gt;Developer PowerShell for VS 2019&lt;/b&gt;를 찾은 뒤 실행&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;vs2019buildtools_test1&#34; srcset=&#34;
               /vscode-msvc/vs2019buildtools_test1_hu607f4985e581e7292b5d47d4b801dedf_138468_226fbd82f31d51e44fa9627733e16400.png 400w,
               /vscode-msvc/vs2019buildtools_test1_hu607f4985e581e7292b5d47d4b801dedf_138468_be659fa34a05acdcb7fbe530b7909974.png 760w,
               /vscode-msvc/vs2019buildtools_test1_hu607f4985e581e7292b5d47d4b801dedf_138468_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/vs2019buildtools_test1_hu607f4985e581e7292b5d47d4b801dedf_138468_226fbd82f31d51e44fa9627733e16400.png&#34;
               width=&#34;760&#34;
               height=&#34;623&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;cl&lt;/code&gt; 명령어와 &lt;code&gt;cmake&lt;/code&gt; 명령어를 입력하여, 다음 그림과 같이 사용법(usage)이 뜨는지 확인&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;vs2019buildtools_test2&#34; srcset=&#34;
               /vscode-msvc/vs2019buildtools_test2_hu94a7aa42ba3a8e8312a5ae88b2edc2c9_24846_2a6a75a7035c6176fb951ab1b20f22f7.png 400w,
               /vscode-msvc/vs2019buildtools_test2_hu94a7aa42ba3a8e8312a5ae88b2edc2c9_24846_d0b2445390538f91ec4903fd6b0dd1b7.png 760w,
               /vscode-msvc/vs2019buildtools_test2_hu94a7aa42ba3a8e8312a5ae88b2edc2c9_24846_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/vs2019buildtools_test2_hu94a7aa42ba3a8e8312a5ae88b2edc2c9_24846_2a6a75a7035c6176fb951ab1b20f22f7.png&#34;
               width=&#34;760&#34;
               height=&#34;397&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;이제 여러분은 MSVC에 포함된 C/C++ 빌드 도구 및 CMake 도구를 사용할 수 있게 되었습니다.&lt;/p&gt;
&lt;h3 id=&#34;vscode-실행&#34;&gt;VSCode 실행&lt;/h3&gt;
&lt;p&gt;VSCode와 MSVC를 연동하여 사용하고자 하는 경우에는, &lt;b&gt;&lt;font color=red&gt;반드시 Developer PowerShell for VS 2019를 통해 VSCode를 실행시켜야만 합니다.&lt;/font&gt;&lt;/b&gt; 그렇지 않으면, VSCode에서 MSVC 관련 툴을 인지하지 못합니다.&lt;/p&gt;
&lt;p&gt;Developer PowerShell for VS 2019에서 VSCode를 실행시키는 법은 간단합니다. 다음 그림과 같이 &lt;code&gt;code&lt;/code&gt;라는 명령어만 실행시키시면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;vs2019buildtools_vscode&#34; srcset=&#34;
               /vscode-msvc/vs2019buildtools_vscode_hu8348c4528a86525fa2392b0a2da116ad_13291_bfa1e99fb80419795fa53111b638bdeb.png 400w,
               /vscode-msvc/vs2019buildtools_vscode_hu8348c4528a86525fa2392b0a2da116ad_13291_1f77e81671e3dadffa69895898cd2817.png 760w,
               /vscode-msvc/vs2019buildtools_vscode_hu8348c4528a86525fa2392b0a2da116ad_13291_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/vs2019buildtools_vscode_hu8348c4528a86525fa2392b0a2da116ad_13291_bfa1e99fb80419795fa53111b638bdeb.png&#34;
               width=&#34;760&#34;
               height=&#34;397&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;VSCode 창이 뜨면, &lt;b&gt;[File] - [Open Folder]&lt;/b&gt;를 선택하여, 작업을 진행할 폴더를 선택해주시면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;vscode_openfolder&#34; srcset=&#34;
               /vscode-msvc/vscode_openfolder_hu04d48c7a25e5aaf0265aedbf430106de_54019_a42ed27b8f7572ec2f92b245192b2eee.png 400w,
               /vscode-msvc/vscode_openfolder_hu04d48c7a25e5aaf0265aedbf430106de_54019_6c6f446b400d5cb8ef78e06bf19e9ada.png 760w,
               /vscode-msvc/vscode_openfolder_hu04d48c7a25e5aaf0265aedbf430106de_54019_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/vscode_openfolder_hu04d48c7a25e5aaf0265aedbf430106de_54019_a42ed27b8f7572ec2f92b245192b2eee.png&#34;
               width=&#34;760&#34;
               height=&#34;647&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;extension-설치&#34;&gt;Extension 설치&lt;/h2&gt;
&lt;p&gt;이제 VSCode에서 extension을 설치할 차례입니다.&lt;/p&gt;
&lt;h3 id=&#34;cc&#34;&gt;C/C++&lt;/h3&gt;
&lt;p&gt;VSCode를 켜고 extension 탭으로 간 뒤 &amp;ldquo;&lt;strong&gt;c&lt;/strong&gt;&amp;ldquo;를 검색하세요. 맨 위에 C/C++ extension이 뜰 것입니다. Install 버튼을 눌러 설치합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;extension_c&#34; srcset=&#34;
               /vscode-msvc/extension_c_hu115aacab3740fa41f6835fd9d1b9086c_54413_6effe4ec295e401b02f8e8d25bd8cb0e.png 400w,
               /vscode-msvc/extension_c_hu115aacab3740fa41f6835fd9d1b9086c_54413_d7e0729455c36626dfc5123f0d498ede.png 760w,
               /vscode-msvc/extension_c_hu115aacab3740fa41f6835fd9d1b9086c_54413_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/extension_c_hu115aacab3740fa41f6835fd9d1b9086c_54413_6effe4ec295e401b02f8e8d25bd8cb0e.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;cmake&#34;&gt;CMake&lt;/h3&gt;
&lt;p&gt;이어서 CMake 관련 extension도 설치합니다.&lt;/p&gt;
&lt;p&gt;VSCode를 켜고 extension 탭으로 간 뒤 “&lt;strong&gt;cmake&lt;/strong&gt;“를 검색하세요. 맨 위부터 &lt;strong&gt;CMake&lt;/strong&gt;와 &lt;strong&gt;CMake Tools&lt;/strong&gt;가 뜰 것입니다. 두 가지 모두 Install 버튼을 눌러 설치합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;extension_cmake&#34; srcset=&#34;
               /vscode-msvc/extension_cmake_hu3da5222f7d42ccd615f0b10e3c843ad1_77547_4e6d4b33b76a1390296ae0108ae9ba55.png 400w,
               /vscode-msvc/extension_cmake_hu3da5222f7d42ccd615f0b10e3c843ad1_77547_46089bc2159dbb4772073c745321d074.png 760w,
               /vscode-msvc/extension_cmake_hu3da5222f7d42ccd615f0b10e3c843ad1_77547_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/extension_cmake_hu3da5222f7d42ccd615f0b10e3c843ad1_77547_4e6d4b33b76a1390296ae0108ae9ba55.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;각각의 용도는 이렇습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CMake extension: CMake 명령어에 대한 자동완성 제공. CMakeLists.txt 파일 작성에 도움&lt;/li&gt;
&lt;li&gt;CMake Tools extension: CMake 기반 프로젝트를 관리하는데에 도움&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;테스트&#34;&gt;테스트&lt;/h2&gt;
&lt;p&gt;이제 제대로 설치가 되었는지 확인할 시간입니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    경로에 &lt;strong&gt;한글&lt;/strong&gt;이 있으면 제대로 동작하지 않습니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;hello-world-프로젝트-만들어보기&#34;&gt;Hello world 프로젝트 만들어보기&lt;/h3&gt;
&lt;p&gt;CMake Tools는 &lt;b&gt;CMake: Quick Start&lt;/b&gt;라는 기능을 제공합니다. 손쉽게 CMake 기반의 Hello world 프로젝트를 만들어주는 것이죠.&lt;/p&gt;
&lt;p&gt;적당한 경로에 빈 폴더를 만들어주고 다음과 같이 진행합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cqs1&#34; srcset=&#34;
               /vscode-msvc/cqs1_hu0e7303143497f0e4a137757a573cefc0_45640_caabe28af57f76ad3462e5cede53839c.png 400w,
               /vscode-msvc/cqs1_hu0e7303143497f0e4a137757a573cefc0_45640_3da3f460f72e8cabaaf3889ef5780923.png 760w,
               /vscode-msvc/cqs1_hu0e7303143497f0e4a137757a573cefc0_45640_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/cqs1_hu0e7303143497f0e4a137757a573cefc0_45640_caabe28af57f76ad3462e5cede53839c.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cqs2&#34; srcset=&#34;
               /vscode-msvc/cqs2_hu7f22ed4d7a598ee99fbd02dc85f95eec_42358_2558a20512433bd005186796729aa5a5.png 400w,
               /vscode-msvc/cqs2_hu7f22ed4d7a598ee99fbd02dc85f95eec_42358_f9f11df871b2487e26ca5679338a6be8.png 760w,
               /vscode-msvc/cqs2_hu7f22ed4d7a598ee99fbd02dc85f95eec_42358_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/cqs2_hu7f22ed4d7a598ee99fbd02dc85f95eec_42358_2558a20512433bd005186796729aa5a5.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cqs3&#34; srcset=&#34;
               /vscode-msvc/cqs3_hu8ae8568f48c1e6cc3dda2f57b9ad71bd_73424_90322c3a2e550c599c95d82ba2446d72.png 400w,
               /vscode-msvc/cqs3_hu8ae8568f48c1e6cc3dda2f57b9ad71bd_73424_c10044573126886eedd0e2d972091b76.png 760w,
               /vscode-msvc/cqs3_hu8ae8568f48c1e6cc3dda2f57b9ad71bd_73424_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/cqs3_hu8ae8568f48c1e6cc3dda2f57b9ad71bd_73424_90322c3a2e550c599c95d82ba2446d72.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cqs4&#34; srcset=&#34;
               /vscode-msvc/cqs4_hu651e505c86ff239e93aff82d745041ea_46310_b7233074ab7ba107154fcc97db32ac24.png 400w,
               /vscode-msvc/cqs4_hu651e505c86ff239e93aff82d745041ea_46310_8cd8b9516849d5a9d8d75ca9fb813464.png 760w,
               /vscode-msvc/cqs4_hu651e505c86ff239e93aff82d745041ea_46310_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/cqs4_hu651e505c86ff239e93aff82d745041ea_46310_b7233074ab7ba107154fcc97db32ac24.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cqs5&#34; srcset=&#34;
               /vscode-msvc/cqs5_huccc2f1247fcbf6dd401b7f495cf147cb_50218_17d669e23dfa30cb3dab8686981a3128.png 400w,
               /vscode-msvc/cqs5_huccc2f1247fcbf6dd401b7f495cf147cb_50218_2a9520c56ea9bd1f1d8c0f10ab602f8f.png 760w,
               /vscode-msvc/cqs5_huccc2f1247fcbf6dd401b7f495cf147cb_50218_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/cqs5_huccc2f1247fcbf6dd401b7f495cf147cb_50218_17d669e23dfa30cb3dab8686981a3128.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cqs6&#34; srcset=&#34;
               /vscode-msvc/cqs6_hu95d915dd180392f838a32ab1e81c2198_42933_c41e8bd1a6a9127e52114d072653ffc2.png 400w,
               /vscode-msvc/cqs6_hu95d915dd180392f838a32ab1e81c2198_42933_7c3275d6d1a0e5d48b7a79780d75038b.png 760w,
               /vscode-msvc/cqs6_hu95d915dd180392f838a32ab1e81c2198_42933_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/cqs6_hu95d915dd180392f838a32ab1e81c2198_42933_c41e8bd1a6a9127e52114d072653ffc2.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;실행-1&#34;&gt;실행&lt;/h3&gt;
&lt;p&gt;다음 그림과 같이 실행하시면 됩니다. 동일 폴더 내에 &lt;b&gt;.vscode&lt;/b&gt;라는 폴더가 생기고 그 안에 CMake 설정 등에 관한 &lt;code&gt;.json&lt;/code&gt; 파일이 자동으로 생성될 것입니다. 또한, &lt;b&gt;build&lt;/b&gt;라는 폴더가 생기고 그 안에 &lt;strong&gt;CMake를 통한 빌드 부산물 및 컴파일 결과물&lt;/strong&gt;이 자동으로 생성될 것입니다.&lt;/p&gt;
&lt;p&gt;이후 아래쪽의 &lt;strong&gt;TERMINAL&lt;/strong&gt; 탭을 확인하시면, 자동 생성된 main.cpp의 내용대로 Hello, world!가 출력되는 것을 확인할 수 있습니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;run1&#34; srcset=&#34;
               /vscode-msvc/run1_hu23cbc9ee6d94a3922a35bb52f261e9f6_41631_a0936e7fd0a5303dd4898784745d755f.png 400w,
               /vscode-msvc/run1_hu23cbc9ee6d94a3922a35bb52f261e9f6_41631_0830794d6928faa454db44cb37713ac3.png 760w,
               /vscode-msvc/run1_hu23cbc9ee6d94a3922a35bb52f261e9f6_41631_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/run1_hu23cbc9ee6d94a3922a35bb52f261e9f6_41631_a0936e7fd0a5303dd4898784745d755f.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;run2&#34; srcset=&#34;
               /vscode-msvc/run2_hua87ae9c2ff262c1bd9334f65408d52c2_53270_8782fbb70eef9231d034ed3435be5a6b.png 400w,
               /vscode-msvc/run2_hua87ae9c2ff262c1bd9334f65408d52c2_53270_51d0b8047f56d8954d98888e1a03ec14.png 760w,
               /vscode-msvc/run2_hua87ae9c2ff262c1bd9334f65408d52c2_53270_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/run2_hua87ae9c2ff262c1bd9334f65408d52c2_53270_8782fbb70eef9231d034ed3435be5a6b.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;디버깅&#34;&gt;디버깅&lt;/h3&gt;
&lt;p&gt;다음 그림과 같이 진행하여 디버깅도 가능합니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    맨 처음 그림에서 보이는 바와 같이, CMake type을 Debug로 설정해야 함에 주의하세요!
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug1&#34; srcset=&#34;
               /vscode-msvc/debug1_hu164b5677826c8eacb553a5632840e7f1_67492_6e6ce9ac77aafe17495f6bb3738fcd6d.png 400w,
               /vscode-msvc/debug1_hu164b5677826c8eacb553a5632840e7f1_67492_8bd4fe75f72748f2f1abec2b49ee6738.png 760w,
               /vscode-msvc/debug1_hu164b5677826c8eacb553a5632840e7f1_67492_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/debug1_hu164b5677826c8eacb553a5632840e7f1_67492_6e6ce9ac77aafe17495f6bb3738fcd6d.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug2&#34; srcset=&#34;
               /vscode-msvc/debug2_hua21a153eb3eb6cbbd7dccc89fc1a0738_74148_90d69e79938c9aee1109b9116d6ec3ac.png 400w,
               /vscode-msvc/debug2_hua21a153eb3eb6cbbd7dccc89fc1a0738_74148_f9d287c1cb825e1f442a098e2e351024.png 760w,
               /vscode-msvc/debug2_hua21a153eb3eb6cbbd7dccc89fc1a0738_74148_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/debug2_hua21a153eb3eb6cbbd7dccc89fc1a0738_74148_90d69e79938c9aee1109b9116d6ec3ac.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug3&#34; srcset=&#34;
               /vscode-msvc/debug3_hu571b8c96d405a1ad6a1a679231de34ef_72722_5d1ce6d547d3b6774b361664d026fc88.png 400w,
               /vscode-msvc/debug3_hu571b8c96d405a1ad6a1a679231de34ef_72722_7a86a29cff6db9ce2bed4c66f0c4ae71.png 760w,
               /vscode-msvc/debug3_hu571b8c96d405a1ad6a1a679231de34ef_72722_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/debug3_hu571b8c96d405a1ad6a1a679231de34ef_72722_5d1ce6d547d3b6774b361664d026fc88.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug4&#34; srcset=&#34;
               /vscode-msvc/debug4_hu8260f189d847922232a10d48b8fb98d6_96886_19264063bdb622727eb8d20b9428bf23.png 400w,
               /vscode-msvc/debug4_hu8260f189d847922232a10d48b8fb98d6_96886_dc1e0e7796f2a56584f0e24fc089a09d.png 760w,
               /vscode-msvc/debug4_hu8260f189d847922232a10d48b8fb98d6_96886_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/debug4_hu8260f189d847922232a10d48b8fb98d6_96886_19264063bdb622727eb8d20b9428bf23.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug5&#34; srcset=&#34;
               /vscode-msvc/debug5_hu9bcbe7397ec7a3bd2daf2d3e9f7033fa_86537_4e8880b22573bb0628e8760e43c7d814.png 400w,
               /vscode-msvc/debug5_hu9bcbe7397ec7a3bd2daf2d3e9f7033fa_86537_48f79a1d99308f24c3c1818ab0a64c3b.png 760w,
               /vscode-msvc/debug5_hu9bcbe7397ec7a3bd2daf2d3e9f7033fa_86537_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/debug5_hu9bcbe7397ec7a3bd2daf2d3e9f7033fa_86537_4e8880b22573bb0628e8760e43c7d814.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;command-line-argument-설정&#34;&gt;Command line argument 설정&lt;/h3&gt;
&lt;p&gt;실행하거나 디버깅할 때, command line argument를 넘겨주도록 설정하고 싶을 때가 있습니다.&lt;/p&gt;
&lt;p&gt;이는 &lt;b&gt;.vscode/settings.json 파일을 생성&lt;/b&gt;해주고, 해당 파일에서 &lt;code&gt;cmake.debugConfig&lt;/code&gt;인자로서 입력해줘야 합니다.&lt;/p&gt;
&lt;h4 id=&#34;테스트-코드-수정&#34;&gt;테스트 코드 수정&lt;/h4&gt;
&lt;p&gt;그 전에 먼저 argument가 제대로 동작하는지 확인하기 위해 main.cpp 코드를 수정하겠습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#include &amp;lt;iostream&amp;gt;

int main(int argc, char**) {
    std::cout &amp;lt;&amp;lt; &amp;quot;Hello, world!\n&amp;quot;;
    std::cout &amp;lt;&amp;lt; &amp;quot;argc: &amp;quot; &amp;lt;&amp;lt; argc &amp;lt;&amp;lt; std::endl;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;이 상태로 그냥 실행해보면 다음과 같이 나타날 것입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;arg1&#34; srcset=&#34;
               /vscode-msvc/arg1_hu3a15c3b7e617d931524b050348937c2a_48397_34c28f2952277af9d574ae29d4482c71.png 400w,
               /vscode-msvc/arg1_hu3a15c3b7e617d931524b050348937c2a_48397_f4a8f7ec275524a9111222bf92809d79.png 760w,
               /vscode-msvc/arg1_hu3a15c3b7e617d931524b050348937c2a_48397_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/arg1_hu3a15c3b7e617d931524b050348937c2a_48397_34c28f2952277af9d574ae29d4482c71.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h4 id=&#34;settingsjson-설정-및-실행&#34;&gt;settings.json 설정 및 실행&lt;/h4&gt;
&lt;p&gt;이제 settings.json 파일을 만들어 보겠습니다. (이미 만들어져 있을 수도 있습니다만, 그대로 진행하시면 됩니다)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;다음 그림과 같이 File - Preferences - Settings를 클릭합니다. 단축키는 &lt;b&gt;[CTRL]+[,]&lt;/b&gt; 입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;arg2&#34; srcset=&#34;
               /vscode-msvc/arg2_huee035e19a4a82fd2afe280a473865c1e_95774_56b5c80af94e7c09a01234bd2dc3b9dc.png 400w,
               /vscode-msvc/arg2_huee035e19a4a82fd2afe280a473865c1e_95774_65c616437706abe59a2dbc43109e2633.png 760w,
               /vscode-msvc/arg2_huee035e19a4a82fd2afe280a473865c1e_95774_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/arg2_huee035e19a4a82fd2afe280a473865c1e_95774_56b5c80af94e7c09a01234bd2dc3b9dc.png&#34;
               width=&#34;760&#34;
               height=&#34;549&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;여기서 Workspace 탭을 클릭합니다. 이 프로젝트(workspace)에만 적용되는 설정항목이라는 뜻입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;arg3&#34; srcset=&#34;
               /vscode-msvc/arg3_hu27dcf0e43bc0a941f885a9e8bbb5dd1a_70248_89aded21624db7e599b13f64312ffbc8.png 400w,
               /vscode-msvc/arg3_hu27dcf0e43bc0a941f885a9e8bbb5dd1a_70248_13eb3447d52efcc9587d006f0fe4e81b.png 760w,
               /vscode-msvc/arg3_hu27dcf0e43bc0a941f885a9e8bbb5dd1a_70248_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/arg3_hu27dcf0e43bc0a941f885a9e8bbb5dd1a_70248_89aded21624db7e599b13f64312ffbc8.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;상단 검색창에 &lt;code&gt;cmake.debugConfig&lt;/code&gt;를 검색한 뒤, &lt;u&gt;Edit in settings.json&lt;/u&gt; 부분을 클릭합니다. &lt;code&gt;cmake.debug&lt;/code&gt; 정도만 입력하셔도 바로 뜰 것입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;arg4&#34; srcset=&#34;
               /vscode-msvc/arg4_hub35353a5b53ed0a09d9dc6a0af763b24_87426_76799a240fa2170b3a90649176dbadcb.png 400w,
               /vscode-msvc/arg4_hub35353a5b53ed0a09d9dc6a0af763b24_87426_748696740cce29f2715b14ab0cbbe055.png 760w,
               /vscode-msvc/arg4_hub35353a5b53ed0a09d9dc6a0af763b24_87426_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/arg4_hub35353a5b53ed0a09d9dc6a0af763b24_87426_76799a240fa2170b3a90649176dbadcb.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;클릭하시면 바로 다음과 같이 &lt;code&gt;.vscode/settings.json&lt;/code&gt; 폴더 및 파일이 생성되고, settings.json 파일이 열리며, 그 안에 다음 그림과 같은 내용이 자동으로 작성되어 있을 것입니다. (추가로 다른 내용이 더 쓰여있을 수도 있습니다.)&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;arg5&#34; srcset=&#34;
               /vscode-msvc/arg5_hu78284473b6cc163dc60de15408c7f415_67837_ccbdd3d38192395f02b0ca3a07701225.png 400w,
               /vscode-msvc/arg5_hu78284473b6cc163dc60de15408c7f415_67837_31882fb69a1599a520fda4d0b80951be.png 760w,
               /vscode-msvc/arg5_hu78284473b6cc163dc60de15408c7f415_67837_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/arg5_hu78284473b6cc163dc60de15408c7f415_67837_ccbdd3d38192395f02b0ca3a07701225.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;이제 이 안에 &lt;code&gt;args&lt;/code&gt; 항목을 만들어 command line argument를 설정합니다. 실행파일명 뒤에 이어질 추가적인 argument들만 적어주면 되며, 각 항목은 &amp;ldquo;&amp;quot;(double-quote)로 묶어주고 ,(comma)로 분리해주면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;arg6&#34; srcset=&#34;
               /vscode-msvc/arg6_hu0c67c12b1cda36a60f2a210f9ef8732f_56962_b6ae80161893bbf02e68257e051ba56f.png 400w,
               /vscode-msvc/arg6_hu0c67c12b1cda36a60f2a210f9ef8732f_56962_c9ff1596f853439e269c3e58da89d3ba.png 760w,
               /vscode-msvc/arg6_hu0c67c12b1cda36a60f2a210f9ef8732f_56962_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/arg6_hu0c67c12b1cda36a60f2a210f9ef8732f_56962_b6ae80161893bbf02e68257e051ba56f.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;이제 저장한 뒤, 실행이나 디버깅을 해보면 다음과 같이 command line argument가 잘 반영된 것을 확인할 수 있습니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;arg7&#34; srcset=&#34;
               /vscode-msvc/arg7_hu72e75db658e05d1b13d2f3cc7bc1f901_53536_a83fb439045a7589d4e825bdef5b78dc.png 400w,
               /vscode-msvc/arg7_hu72e75db658e05d1b13d2f3cc7bc1f901_53536_193e7f64d30ffcba4b84ba7d57d00d13.png 760w,
               /vscode-msvc/arg7_hu72e75db658e05d1b13d2f3cc7bc1f901_53536_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-msvc/arg7_hu72e75db658e05d1b13d2f3cc7bc1f901_53536_a83fb439045a7589d4e825bdef5b78dc.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>VSCode Python 환경에서 Jupyter 및 plotly 사용하기</title>
      <link>https://evandde.github.io/vscode-jupyter-python-plotly/</link>
      <pubDate>Mon, 23 Aug 2021 23:54:44 +0900</pubDate>
      <guid>https://evandde.github.io/vscode-jupyter-python-plotly/</guid>
      <description>&lt;p&gt;VSCode에서 Python3 언어를 사용할 때, Jupyter와 plotly를 연동하여 사용하는 환경을 구축하는 방법에 대해 알아봅니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    여기서는 &lt;b&gt;VSCode에서의 python3 환경을 구축한 상태&lt;/b&gt;라고 가정합니다. 이에 관한 내용은 &lt;a href=&#34;https://evandde.github.io/vscode-python/&#34;&gt;이 글&lt;/a&gt;을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;소개&#34;&gt;소개&lt;/h2&gt;
&lt;h3 id=&#34;jupyter&#34;&gt;Jupyter&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://jupyter.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jupyter&lt;/a&gt;는 프로그래밍 언어를 이용할 때 &lt;b&gt;인터랙티브하게 개발할 수 있는 환경을 제공&lt;/b&gt;하는 오픈소스 소프트웨어입니다. Python과 연동하게 되면, 셀단위 실행, 변수 모니터링 등 다양한 기능을 활용할 수 있죠.&lt;/p&gt;
&lt;h3 id=&#34;plotly&#34;&gt;plotly&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://plotly.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;plotly&lt;/a&gt;는 인터랙티브하게 이용할 수 있는 데이터 가시화 패키지입니다. Python과도 연동하여 사용 가능하며, 무엇보다 UI가 고급스럽고 마우스를 이용한 여러가지 조작이 가능합니다. 데이터 가시화를 위해 가장 많이 알려진 패키지는 matplotlib입니다만, 저는 개인적으로 plotly가 더 예뻐서 이쪽을 선호합니다.&lt;/p&gt;
&lt;h3 id=&#34;사용-예시&#34;&gt;사용 예시&lt;/h3&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;00_example&#34; srcset=&#34;
               /vscode-jupyter-python-plotly/00_example_hu84b3308bc8aaa370638fd580fe0a687c_176482_109edb5ec40c64e4e0479da7ccc609ab.png 400w,
               /vscode-jupyter-python-plotly/00_example_hu84b3308bc8aaa370638fd580fe0a687c_176482_0cdc06034602e3d4b765570b9c0b4e05.png 760w,
               /vscode-jupyter-python-plotly/00_example_hu84b3308bc8aaa370638fd580fe0a687c_176482_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-jupyter-python-plotly/00_example_hu84b3308bc8aaa370638fd580fe0a687c_176482_109edb5ec40c64e4e0479da7ccc609ab.png&#34;
               width=&#34;760&#34;
               height=&#34;619&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;jupyter-설치-및-실행&#34;&gt;Jupyter 설치 및 실행&lt;/h2&gt;
&lt;h3 id=&#34;extension설치&#34;&gt;Extension설치&lt;/h3&gt;
&lt;p&gt;먼저 VSCode에서 Jupyter extension을 설치하겠습니다.&lt;/p&gt;
&lt;p&gt;VSCode를 켜고, extension 탭으로 간 뒤 &amp;ldquo;&lt;b&gt;jupyter&lt;/b&gt;&amp;ldquo;를 검색하세요. 맨 위에 jupyter extension이 뜰 것입니다. Install 버튼을 눌러 설치합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;01_extension_jupyter&#34; srcset=&#34;
               /vscode-jupyter-python-plotly/01_extension_jupyter_hucf331c4ef50858724f10e1d614990a97_98890_5827adfa0276741e7449619fc8b6dd8e.png 400w,
               /vscode-jupyter-python-plotly/01_extension_jupyter_hucf331c4ef50858724f10e1d614990a97_98890_dad5b1bfe85c8bac300eb0dc569217bb.png 760w,
               /vscode-jupyter-python-plotly/01_extension_jupyter_hucf331c4ef50858724f10e1d614990a97_98890_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-jupyter-python-plotly/01_extension_jupyter_hucf331c4ef50858724f10e1d614990a97_98890_5827adfa0276741e7449619fc8b6dd8e.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;ipykernel-설치&#34;&gt;ipykernel 설치&lt;/h3&gt;
&lt;p&gt;python에서 jupyter를 사용하기 위해서는, python 패키지 중 &lt;b&gt;ipykernel&lt;/b&gt;을 설치해야 합니다. VSCode에서 Jupyter를 실행해보면 ipykernel이 없는 경우 다음 그림과 같이 &lt;b&gt;ipykernel을 설치할 것인지 묻는 알림창이 자동으로 뜹니다&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;02_install_ipykernel&#34; srcset=&#34;
               /vscode-jupyter-python-plotly/02_install_ipykernel_hu7c5969babf2ed4168b4504aaf1c01636_48594_740cb887a2947aac2590b50eed08b0b3.png 400w,
               /vscode-jupyter-python-plotly/02_install_ipykernel_hu7c5969babf2ed4168b4504aaf1c01636_48594_a68919893e6a489beb591d5b89d2a495.png 760w,
               /vscode-jupyter-python-plotly/02_install_ipykernel_hu7c5969babf2ed4168b4504aaf1c01636_48594_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-jupyter-python-plotly/02_install_ipykernel_hu7c5969babf2ed4168b4504aaf1c01636_48594_740cb887a2947aac2590b50eed08b0b3.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;만약 이 창이 안뜬다면, powershell이나 vscode의 Terminal에서 다음 명령어를 입력하여 직접 설치해주셔도 됩니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install ipykernel
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;실행&#34;&gt;실행&lt;/h3&gt;
&lt;p&gt;[View] - [Command Palette]를 눌러 명령창을 띄운 뒤, &amp;ldquo;&lt;b&gt;jupyter interactive&lt;/b&gt;&amp;ldquo;를 입력하여 Jupyter: Create Interactive Window를 클릭합니다. 다음 그림을 참고하세요.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;03_run_jupyter&#34; srcset=&#34;
               /vscode-jupyter-python-plotly/03_run_jupyter_hu625978a17bd1a8668e96036751bba67f_51742_9d9a31ada0268504e86a8016d29a7ee1.png 400w,
               /vscode-jupyter-python-plotly/03_run_jupyter_hu625978a17bd1a8668e96036751bba67f_51742_2944e1121b61fdc0b1a58993230e1dcb.png 760w,
               /vscode-jupyter-python-plotly/03_run_jupyter_hu625978a17bd1a8668e96036751bba67f_51742_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-jupyter-python-plotly/03_run_jupyter_hu625978a17bd1a8668e96036751bba67f_51742_9d9a31ada0268504e86a8016d29a7ee1.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;04_run_jupyter&#34; srcset=&#34;
               /vscode-jupyter-python-plotly/04_run_jupyter_hu6ed25e2c3ad2973c88acd659e3feee89_54354_dee4eb1faa0930088a0d65064ba2e270.png 400w,
               /vscode-jupyter-python-plotly/04_run_jupyter_hu6ed25e2c3ad2973c88acd659e3feee89_54354_0bc16652c785ecc542c67633062b0932.png 760w,
               /vscode-jupyter-python-plotly/04_run_jupyter_hu6ed25e2c3ad2973c88acd659e3feee89_54354_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-jupyter-python-plotly/04_run_jupyter_hu6ed25e2c3ad2973c88acd659e3feee89_54354_dee4eb1faa0930088a0d65064ba2e270.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Jupyter Interactive Window가 잘 떴다면, 아래쪽의 명령줄 부분에 명령어를 입력한 뒤 &lt;b&gt;[SHIFT]+[ENTER]&lt;/b&gt; 키를 눌러 정상 동작 여부를 확인해보실 수 있습니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;05_install_ipykernel&#34; srcset=&#34;
               /vscode-jupyter-python-plotly/05_install_ipykernel_hu69cce9727a4d5ee17f46e7f28c15b5d8_87260_404ef556bfacf4b50fa6e40df5ebdba5.png 400w,
               /vscode-jupyter-python-plotly/05_install_ipykernel_hu69cce9727a4d5ee17f46e7f28c15b5d8_87260_946adedda8dd0ef3019d6cc377d2c19a.png 760w,
               /vscode-jupyter-python-plotly/05_install_ipykernel_hu69cce9727a4d5ee17f46e7f28c15b5d8_87260_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-jupyter-python-plotly/05_install_ipykernel_hu69cce9727a4d5ee17f46e7f28c15b5d8_87260_404ef556bfacf4b50fa6e40df5ebdba5.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;더불어, 창 위쪽의 Variables 버튼을 누르면 다음 그림과 같이 현재 메모리에 저장된 변수도 모니터링할 수 있습니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;06_variables&#34; srcset=&#34;
               /vscode-jupyter-python-plotly/06_variables_hu1399600719818c75ef5c973b561de23b_51335_c39410c47c8059b1e5c53a2564460c48.png 400w,
               /vscode-jupyter-python-plotly/06_variables_hu1399600719818c75ef5c973b561de23b_51335_f1b47011e5e113df055096305288ab8a.png 760w,
               /vscode-jupyter-python-plotly/06_variables_hu1399600719818c75ef5c973b561de23b_51335_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-jupyter-python-plotly/06_variables_hu1399600719818c75ef5c973b561de23b_51335_c39410c47c8059b1e5c53a2564460c48.png&#34;
               width=&#34;760&#34;
               height=&#34;648&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;python-인터프리터-설정&#34;&gt;python 인터프리터 설정&lt;/h3&gt;
&lt;p&gt;Jupyter에서 사용할 인터프리터는 Jupyter Interactive Window의 오른쪽 위에서 선택할 수 있습니다. venv 등을 사용하고 있거나, 여러 버전의 python을 이용하는 경우에는 이를 통해 원하는 인터프리터로 변경하여 선택할 수 있습니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;07_pythonselect&#34; srcset=&#34;
               /vscode-jupyter-python-plotly/07_pythonselect_huf637478f69785b337c9523802c51b2f5_84611_885940754a5c4ab9fcccafe683b2e9dd.png 400w,
               /vscode-jupyter-python-plotly/07_pythonselect_huf637478f69785b337c9523802c51b2f5_84611_97532b06853e94cb25097ae7b0d3e77b.png 760w,
               /vscode-jupyter-python-plotly/07_pythonselect_huf637478f69785b337c9523802c51b2f5_84611_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-jupyter-python-plotly/07_pythonselect_huf637478f69785b337c9523802c51b2f5_84611_885940754a5c4ab9fcccafe683b2e9dd.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;py-파일과의-연동&#34;&gt;.py 파일과의 연동&lt;/h3&gt;
&lt;p&gt;python 코드로 작성한 파일에 대해서도 Jupyter를 통해 실행시킬 수 있습니다. 테스트를 위해 main.py 파일을 만들고 다음과 같이 코드를 작성하겠습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# %%
arr = [1, 2, 3]

# %%
for i in arr:
    print(i)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;여기서 주석을 &lt;code&gt;# %%&lt;/code&gt;라고 달았는데요, 이렇게 달아주면 Jupyter에서 &lt;code&gt;# %%&lt;/code&gt;와 다음 &lt;code&gt;# %%&lt;/code&gt;까지의 영역을 &lt;b&gt;Cell&lt;/b&gt;이라는 단위로 구분지어줍니다. 그러면, Jupyter에서 각 Cell 단위로 실행시키거나 디버깅을 수행해볼 수 있습니다. 다음 그림을 참고하세요.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;08_cell&#34; srcset=&#34;
               /vscode-jupyter-python-plotly/08_cell_huca81c7c74f805326abd99b5423ef466d_65950_4ac80e5251a2425d5cf0a2cff50f3177.png 400w,
               /vscode-jupyter-python-plotly/08_cell_huca81c7c74f805326abd99b5423ef466d_65950_e2b6bc513c07a6ee50aa43c1b14de14d.png 760w,
               /vscode-jupyter-python-plotly/08_cell_huca81c7c74f805326abd99b5423ef466d_65950_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-jupyter-python-plotly/08_cell_huca81c7c74f805326abd99b5423ef466d_65950_4ac80e5251a2425d5cf0a2cff50f3177.png&#34;
               width=&#34;760&#34;
               height=&#34;648&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;plotly-설치-및-jupyter-연동&#34;&gt;plotly 설치 및 Jupyter 연동&lt;/h2&gt;
&lt;h3 id=&#34;설치&#34;&gt;설치&lt;/h3&gt;
&lt;p&gt;이제 &lt;b&gt;plotly&lt;/b&gt;를 사용하기 위한 환경을 구축해봅시다.&lt;/p&gt;
&lt;p&gt;필요한 패키지는 3가지입니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;plotly 패키지: plotly를 사용하기 위해 당연히 필수&lt;/li&gt;
&lt;li&gt;nbformat 패키지: plotly를 Jupyter에서 사용하기 위해 필요한 패키지&lt;/li&gt;
&lt;li&gt;pandas 패키지: plotly에 넣어줄 데이터 관리를 위해 사실상 필수인 패키지&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;세 가지 패키지 모두 &lt;code&gt;pip&lt;/code&gt;를 이용하여 설치를 할 것입니다. &lt;b&gt;Powershell&lt;/b&gt;이나 &lt;b&gt;vscode의 Terminal&lt;/b&gt;에서 다음 명령어를 입력하여 설치할 수 있습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install plotly
pip install nbformat
pip install pandas
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;실행-1&#34;&gt;실행&lt;/h3&gt;
&lt;p&gt;모든 패키지를 설치하셨다면, &lt;b&gt;&lt;font color=red&gt;실행에 앞서 Jupyter Interactive Window 창을 다시 한 번 껐다가 켜시기 바랍니다.&lt;/font&gt;&lt;/b&gt; 그래야만 Jupyter에서 방금 설치한 패키지 상황을 인지합니다.&lt;/p&gt;
&lt;p&gt;이제 간단한 예제를 통해 테스트를 해봅시다. 다음 코드는 plotly 홈페이지에서 제공하는 공식 예제 중 하나입니다. (&lt;a href=&#34;https://plotly.com/python/plotly-express/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;참고링크&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;앞서 Jupyter의 test를 수행했던 명령줄에 다음 코드를 입력한 뒤, &lt;b&gt;[SHIFT]+[ENTER]&lt;/b&gt; 키를 눌러줍니다. 참고로, 명령줄 내에서 그냥 [ENTER] 키를 누르시면 줄바꿈이 됩니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import plotly.express as px
df = px.data.iris()
fig = px.scatter(df, x=&amp;quot;sepal_width&amp;quot;, y=&amp;quot;sepal_length&amp;quot;, color=&amp;quot;species&amp;quot;)
fig.show()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;다음 그림과 같이, 실행 결과로 그래프가 잘 나오면 성공입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;09_plotly&#34; srcset=&#34;
               /vscode-jupyter-python-plotly/09_plotly_hu07d51a1745c38e8e1a633129b3cf4bdf_85789_a8c43ee5d59c630ea06ae426272fd760.png 400w,
               /vscode-jupyter-python-plotly/09_plotly_hu07d51a1745c38e8e1a633129b3cf4bdf_85789_48ca846e018f4d84598a98127e06eab5.png 760w,
               /vscode-jupyter-python-plotly/09_plotly_hu07d51a1745c38e8e1a633129b3cf4bdf_85789_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-jupyter-python-plotly/09_plotly_hu07d51a1745c38e8e1a633129b3cf4bdf_85789_a8c43ee5d59c630ea06ae426272fd760.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;10_plotly&#34; srcset=&#34;
               /vscode-jupyter-python-plotly/10_plotly_hu72315a7564607626f096777b42aef0c3_136558_af1533c167b558b4516ffa60acafdef3.png 400w,
               /vscode-jupyter-python-plotly/10_plotly_hu72315a7564607626f096777b42aef0c3_136558_c999626570426091a1dfb4d517702364.png 760w,
               /vscode-jupyter-python-plotly/10_plotly_hu72315a7564607626f096777b42aef0c3_136558_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-jupyter-python-plotly/10_plotly_hu72315a7564607626f096777b42aef0c3_136558_af1533c167b558b4516ffa60acafdef3.png&#34;
               width=&#34;760&#34;
               height=&#34;619&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://jupyter.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Project Jupyter | Home&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://code.visualstudio.com/docs/datascience/jupyter-notebooks&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Working with Jupyter Notebooks in Visual Studio Code&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[Plotly: The front end for ML and data science models](&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Geant4 UI command 소개 - 반복문</title>
      <link>https://evandde.github.io/geant4-uicommand-loop/</link>
      <pubDate>Mon, 05 Apr 2021 17:13:04 +0900</pubDate>
      <guid>https://evandde.github.io/geant4-uicommand-loop/</guid>
      <description>&lt;p&gt;Geant4 UI command에서 활용 가능한 반복문. &lt;code&gt;/control/loop&lt;/code&gt;와 &lt;code&gt;/control/foreach&lt;/code&gt;에 대해 알아봅니다.&lt;/p&gt;
&lt;h2 id=&#34;개요&#34;&gt;개요&lt;/h2&gt;
&lt;p&gt;Geant4에서 built-in UI command로 제공하는 반복문은 두 가지입니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/control/loop&lt;/li&gt;
&lt;li&gt;/control/foreach&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이 반복문의 중요한 특징은 &amp;ldquo;&lt;strong&gt;다른 매크로파일을 반복적으로 실행시킨다&lt;/strong&gt;&amp;ldquo;는 점입니다.&lt;/p&gt;
&lt;p&gt;각각의 용법과 함께 좀 더 자세히 살펴보겠습니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;controlloop&#34;&gt;/control/loop&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;/control/loop&lt;/code&gt; 반복문은 대개의 프로그래밍 언어가 제공하는 for문과 유사합니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;시작&lt;/strong&gt;, &lt;strong&gt;끝&lt;/strong&gt;, &lt;strong&gt;간격&lt;/strong&gt;을 입력하여 &lt;strong&gt;카운터를 증감&lt;/strong&gt;시키며 &lt;strong&gt;다른 매크로파일을 실행&lt;/strong&gt;시켜줍니다.&lt;/p&gt;
&lt;h3 id=&#34;사용법&#34;&gt;사용법&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;/control/loop 매크로파일명 카운터변수명 시작값 끝값 간격&lt;/code&gt;의 형태로 입력합니다.&lt;/p&gt;
&lt;p&gt;이 때, &lt;code&gt;매크로파일명&lt;/code&gt;과 &lt;code&gt;카운터변수명&lt;/code&gt;은 문자열(string)로 인식하고, &lt;code&gt;시작값&lt;/code&gt;, &lt;code&gt;끝값&lt;/code&gt;, &lt;code&gt;간격&lt;/code&gt;은 실수형(double)으로 인식합니다.&lt;/p&gt;
&lt;p&gt;이렇게 입력하면, &lt;code&gt;매크로파일&lt;/code&gt;에서 &lt;code&gt;카운터변수&lt;/code&gt;를 &lt;code&gt;시작&lt;/code&gt;~&lt;code&gt;끝&lt;/code&gt;값으로 aliasing 시켜줍니다. 즉, &lt;code&gt;매크로파일&lt;/code&gt; 내에서는 &lt;code&gt;{카운터변수}&lt;/code&gt;와 같이 입력하면 되는 것이죠.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;code&gt;간격&lt;/code&gt; 값은 생략 가능합니다. 생략할 경우 기본값으로 &lt;strong&gt;1&lt;/strong&gt;이 사용됩니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;사용예시&#34;&gt;사용예시&lt;/h3&gt;
&lt;p&gt;다음과 같은 매크로를 만들어봅시다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/gun/energy 10. MeV
/run/beamOn 10000

/gun/energy 12. MeV
/run/beamOn 10000

/gun/energy 14. MeV
/run/beamOn 10000

/gun/energy 16. MeV
/run/beamOn 10000

/gun/energy 18. MeV
/run/beamOn 10000

/gun/energy 20. MeV
/run/beamOn 10000
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;여기서 에너지 값이 10~20으로 2씩 바뀌고 있을 뿐, 나머지는 반복됩니다.&lt;/p&gt;
&lt;p&gt;이 경우 다음과 같이 두 개의 파일로 나누어 작성하면 동일하게 동작합니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;b&gt;주 매크로파일&lt;/b&gt;의 예시&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/control/loop myRun.mac ene 10. 20. 2.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;b&gt;myRun.mac&lt;/b&gt;의 예시&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/gun/energy {ene} MeV
/run/beamOn 10000
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;controlforeach&#34;&gt;/control/foreach&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;/control/foreach&lt;/code&gt; 반복문은 대개의 프로그래밍 언어가 제공하는 range-based for문과 유사합니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;카운터&lt;/strong&gt;를 &lt;strong&gt;제시된 목록의 각 값&lt;/strong&gt;으로 바꾸어가며 &lt;strong&gt;다른 매크로파일을 반복적으로 실행&lt;/strong&gt;합니다.&lt;/p&gt;
&lt;h3 id=&#34;사용법-1&#34;&gt;사용법&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;/control/foreach 매크로파일명 카운터변수명 &amp;quot;반복할값목록&amp;quot;&lt;/code&gt;의 형태로 입력합니다.&lt;/p&gt;
&lt;p&gt;여기서 &lt;code&gt;&amp;quot;반복할값목록&amp;quot;&lt;/code&gt;을 &lt;font color=red&gt;입력할 때 주의점&lt;/font&gt;이 두 가지 있습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;목록 전체를 반드시 &amp;quot;&amp;quot;(double-quote)로 감쌀 것&lt;/li&gt;
&lt;li&gt;목록의 각 값은 띄어쓰기로 구분할 것&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이렇게 입력하면, &lt;code&gt;매크로파일&lt;/code&gt;에서 &lt;code&gt;카운터변수&lt;/code&gt;를 &lt;code&gt;&amp;quot;반복할값목록&amp;quot;&lt;/code&gt;에 적힌 각각의 값으로 aliasing 시켜줍니다. 즉, &lt;code&gt;매크로파일&lt;/code&gt; 내에서는 &lt;code&gt;{카운터변수}&lt;/code&gt;와 같이 입력하면 되는 것이죠.&lt;/p&gt;
&lt;h3 id=&#34;사용예시-1&#34;&gt;사용예시&lt;/h3&gt;
&lt;p&gt;다음과 같은 매크로를 만들어 봅시다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/gun/particle p
/run/beamOn 10000

/gun/particle e-
/run/beamOn 10000

/gun/particle e+
/run/beamOn 10000

/gun/particle gamma
/run/beamOn 10000
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;여기서는 입자가 p, e-, e+, gamma로 바뀌고 있을 뿐, 나머지는 반복됩니다.&lt;/p&gt;
&lt;p&gt;이 경우 다음과 같이 두 개의 파일로 나누어 작성하면 동일하게 동작합니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;b&gt;주 매크로파일&lt;/b&gt;의 예시&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/control/foreach myRun.mac pname &amp;quot;p e- e+ gamma&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;b&gt;myRun.mac&lt;/b&gt;의 예시&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/gun/particle {pname}
/run/beamOn 10000
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Geant4 UI command 소개 - /control/alias</title>
      <link>https://evandde.github.io/geant4-uicommand-alias/</link>
      <pubDate>Mon, 05 Apr 2021 15:20:37 +0900</pubDate>
      <guid>https://evandde.github.io/geant4-uicommand-alias/</guid>
      <description>&lt;p&gt;Geant4 UI command 중, 자주 반복되는 문구를 간단하게 줄여주는 명령어. &amp;ldquo;/control/alias&amp;quot;에 대해 알아봅니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;개요&#34;&gt;개요&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;/control/alias&lt;/code&gt; 명령어는 &lt;strong&gt;특정 문구를 반복적으로 사용&lt;/strong&gt;해야 할 때, 별명을 지어주는 명령어입니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;사용법&#34;&gt;사용법&lt;/h2&gt;
&lt;h3 id=&#34;별명-지어주기&#34;&gt;별명 지어주기&lt;/h3&gt;
&lt;p&gt;별명을 지어줄 때에는 &lt;code&gt;/control/alias 별명 원래내용&lt;/code&gt;의 형태로 입력합니다.&lt;/p&gt;
&lt;p&gt;예를 들어, &lt;code&gt;/tracking/verbose&lt;/code&gt;라는 명령어를 &lt;code&gt;tv&lt;/code&gt;로 줄여서 사용하고 싶다면 다음과 같이 입력합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/control/alias tv /tracking/verbose
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    만약 입력하는 내용에 띄어쓰기가 포함되어 있다면, &amp;ldquo;&amp;quot;(double-quote)로 묶어서 입력합니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;별명-사용하기&#34;&gt;별명 사용하기&lt;/h3&gt;
&lt;p&gt;앞서 부여한 별명을 사용할 때에는 &lt;code&gt;{별명}&lt;/code&gt;의 형태로 입력합니다.&lt;/p&gt;
&lt;p&gt;예를 &lt;code&gt;tv&lt;/code&gt;에 대해 위에서처럼 별명을 붙여줬다면, &lt;code&gt;/tracking/verbose 1&lt;/code&gt;을 다음과 같이 줄여서 사용할 수 있습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# /tracking/verbose 1
{tv} 1
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;중요한-특징&#34;&gt;중요한 특징&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;alias로 호출되어 불려온 값은 무조건 string 형태로 인식합니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;명령어만 별명을 부여할 수 있는 것이 아닙니다. 어떤 문자열이든 별명을 부여해줄 수 있습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;alias된 값을 중첩하여 불러올 수도 있습니다.&lt;/p&gt;
&lt;p&gt;예시)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/control/alias file1 /diskA/dirX/fileXX.dat
/control/alias file2 /diskA/dirY/fileYY.dat
/control/alias run 1

# /myDirectory/myCommand /diskA/dirX/fileXX.dat
# /myDirectory/myCommand {file1}
/myDirectory/myCommand {file{run}}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;b&gt;/control/loop, /control/foreach 명령어와 조합하여 응용하면 상당히 강력한 효과를 얻을 수 있습니다.&lt;/b&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>리눅스 운영체제에서 하드웨어/시스템 정보 모니터링 명령어 모음</title>
      <link>https://evandde.github.io/linux-sysinfo/</link>
      <pubDate>Tue, 16 Mar 2021 09:28:22 +0900</pubDate>
      <guid>https://evandde.github.io/linux-sysinfo/</guid>
      <description>&lt;p&gt;리눅스 운영체제에서 하드웨어 및 시스템의 정보나 현재 상태를 살펴보는 데에 사용되는 명령어를 정리하였습니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;os-확인&#34;&gt;OS 확인&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;lsb_release -a
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;lsb_release&#34; srcset=&#34;
               /linux-sysinfo/lsb_release_hu1ae3037d451d2f8c8eed18279649d073_7650_f6e750712ed0d4476ccbbabe26708db3.png 400w,
               /linux-sysinfo/lsb_release_hu1ae3037d451d2f8c8eed18279649d073_7650_65a87b62765d1078706ec48241fb113e.png 760w,
               /linux-sysinfo/lsb_release_hu1ae3037d451d2f8c8eed18279649d073_7650_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/linux-sysinfo/lsb_release_hu1ae3037d451d2f8c8eed18279649d073_7650_f6e750712ed0d4476ccbbabe26708db3.png&#34;
               width=&#34;320&#34;
               height=&#34;114&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;메모리-및-swap-영역-상태-확인&#34;&gt;메모리 및 swap 영역 상태 확인&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;free -h
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;free&#34; srcset=&#34;
               /linux-sysinfo/free_hub0df18e3f914a7dc604e2353fe2a50aa_7717_23f4245750990b0c863603c109f16666.png 400w,
               /linux-sysinfo/free_hub0df18e3f914a7dc604e2353fe2a50aa_7717_d0062d407dc539c117a2f859c2398f5e.png 760w,
               /linux-sysinfo/free_hub0df18e3f914a7dc604e2353fe2a50aa_7717_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/linux-sysinfo/free_hub0df18e3f914a7dc604e2353fe2a50aa_7717_23f4245750990b0c863603c109f16666.png&#34;
               width=&#34;720&#34;
               height=&#34;78&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;디스크-용량-확인&#34;&gt;디스크 용량 확인&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;df -h
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;df&#34; srcset=&#34;
               /linux-sysinfo/df_hu73cd4ae11b543103d5a6c0fa04b5e9e5_16297_44fdd7b577ca065eef5acaf3203dd396.png 400w,
               /linux-sysinfo/df_hu73cd4ae11b543103d5a6c0fa04b5e9e5_16297_99060a5aaca90bd92c788e3b23fa76ba.png 760w,
               /linux-sysinfo/df_hu73cd4ae11b543103d5a6c0fa04b5e9e5_16297_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/linux-sysinfo/df_hu73cd4ae11b543103d5a6c0fa04b5e9e5_16297_44fdd7b577ca065eef5acaf3203dd396.png&#34;
               width=&#34;481&#34;
               height=&#34;248&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;파티션-정보-확인&#34;&gt;파티션 정보 확인&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;lsblk
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;lsblk&#34; srcset=&#34;
               /linux-sysinfo/lsblk_hu814b36fabd9e2ebaab5a4ffb0fe04e20_5814_4d0de8d1e8b63b1d12eb50a5c986247e.png 400w,
               /linux-sysinfo/lsblk_hu814b36fabd9e2ebaab5a4ffb0fe04e20_5814_02cf47ebd31761e44e8125742390b1e8.png 760w,
               /linux-sysinfo/lsblk_hu814b36fabd9e2ebaab5a4ffb0fe04e20_5814_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/linux-sysinfo/lsblk_hu814b36fabd9e2ebaab5a4ffb0fe04e20_5814_4d0de8d1e8b63b1d12eb50a5c986247e.png&#34;
               width=&#34;371&#34;
               height=&#34;78&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;cpu-모델명-확인&#34;&gt;CPU 모델명 확인&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat /proc/cpuinfo | grep CPU | head -1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cpuinfo&#34; srcset=&#34;
               /linux-sysinfo/cpuinfo_hue0ca0f2f4f8dd6a448397b2c4dfda5d8_6194_75d8d1e0d736a28d505df7b052a4721f.png 400w,
               /linux-sysinfo/cpuinfo_hue0ca0f2f4f8dd6a448397b2c4dfda5d8_6194_c76850ec59059b9120f2c6066d7123fe.png 760w,
               /linux-sysinfo/cpuinfo_hue0ca0f2f4f8dd6a448397b2c4dfda5d8_6194_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/linux-sysinfo/cpuinfo_hue0ca0f2f4f8dd6a448397b2c4dfda5d8_6194_75d8d1e0d736a28d505df7b052a4721f.png&#34;
               width=&#34;528&#34;
               height=&#34;36&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;cpu-코어-수-확인&#34;&gt;CPU 코어 수 확인&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat /proc/cpuinfo | grep CPU | wc -l
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cpucore&#34; srcset=&#34;
               /linux-sysinfo/cpucore_huedf4a06927d3078492580f98784c777f_3634_31cd3be7af7f55e5fbb44e93aebe434f.png 400w,
               /linux-sysinfo/cpucore_huedf4a06927d3078492580f98784c777f_3634_ec55e8ecd668e76c1e1a79a7b3c083c4.png 760w,
               /linux-sysinfo/cpucore_huedf4a06927d3078492580f98784c777f_3634_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/linux-sysinfo/cpucore_huedf4a06927d3078492580f98784c777f_3634_31cd3be7af7f55e5fbb44e93aebe434f.png&#34;
               width=&#34;496&#34;
               height=&#34;40&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;서버-상태-확인&#34;&gt;서버 상태 확인&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;w
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;w&#34; srcset=&#34;
               /linux-sysinfo/w_hu55b3e37888b954b71f09343586bdf9a3_11214_c8406a23afb9ee96a65a1b604b7e63e6.png 400w,
               /linux-sysinfo/w_hu55b3e37888b954b71f09343586bdf9a3_11214_635aefad6d824b1bc4da4786e1c8c321.png 760w,
               /linux-sysinfo/w_hu55b3e37888b954b71f09343586bdf9a3_11214_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/linux-sysinfo/w_hu55b3e37888b954b71f09343586bdf9a3_11214_c8406a23afb9ee96a65a1b604b7e63e6.png&#34;
               width=&#34;632&#34;
               height=&#34;95&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Visual Studio Code에서 Python3의 venv 사용하기</title>
      <link>https://evandde.github.io/vscode-python-venv/</link>
      <pubDate>Mon, 22 Feb 2021 12:50:01 +0900</pubDate>
      <guid>https://evandde.github.io/vscode-python-venv/</guid>
      <description>&lt;p&gt;VSCode에서 Python3의 기능 중 가상환경을 설정하는 venv를 사용하는 방법에 대해 알아봅니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    여기서는 &lt;b&gt;VSCode에서의 python3 환경을 구축한 상태&lt;/b&gt;라고 가정합니다. 이에 관한 내용은 &lt;a href=&#34;https://evandde.github.io/vscode-python/&#34;&gt;이 글&lt;/a&gt;을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;가상환경-생성&#34;&gt;가상환경 생성&lt;/h2&gt;
&lt;p&gt;다음 명령어를 통해 python3에서 제공하는 venv 기능을 사용할 수 있습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;python -m venv ./venv
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;vscode에서의-설정&#34;&gt;VSCode에서의 설정&lt;/h2&gt;
&lt;p&gt;vscode를 실행하고, &lt;code&gt;.py&lt;/code&gt; 확장자의 빈 파일을 한 개 생성합니다. 그러면, vscode에서 자동으로 python 파일임을 인식하여 &lt;strong&gt;왼쪽 아래에 python 인터프리터가 연동되는 것을 확인할 수 있습니다&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;newfile&#34; srcset=&#34;
               /vscode-python-venv/newfile_hufbedf9c76eedf5682024779181477235_38316_d4ed2b67376f93ba31de438cddc58cb1.png 400w,
               /vscode-python-venv/newfile_hufbedf9c76eedf5682024779181477235_38316_37d04a63028dcb9501134a7ab4b50b67.png 760w,
               /vscode-python-venv/newfile_hufbedf9c76eedf5682024779181477235_38316_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python-venv/newfile_hufbedf9c76eedf5682024779181477235_38316_d4ed2b67376f93ba31de438cddc58cb1.png&#34;
               width=&#34;760&#34;
               height=&#34;571&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;이 곳을 클릭하면 다음과 같이 연동할 python 인터프리터의 목록이 뜹니다.&lt;/p&gt;
&lt;p&gt;다음 그림을 따라 우리가 만들어둔 &lt;code&gt;venv/Scripts/python.exe&lt;/code&gt;를 인터프리터로 선택해주면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;selectpython1&#34; srcset=&#34;
               /vscode-python-venv/selectpython1_hu1814e1b35c11d8f3a219191ee330fac8_52889_a4c0c4f74ffb8d6b6454679cbeeed090.png 400w,
               /vscode-python-venv/selectpython1_hu1814e1b35c11d8f3a219191ee330fac8_52889_5f4e4faf1c5302fccb6da2f17d2b577c.png 760w,
               /vscode-python-venv/selectpython1_hu1814e1b35c11d8f3a219191ee330fac8_52889_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python-venv/selectpython1_hu1814e1b35c11d8f3a219191ee330fac8_52889_a4c0c4f74ffb8d6b6454679cbeeed090.png&#34;
               width=&#34;760&#34;
               height=&#34;571&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;selectpython2&#34; srcset=&#34;
               /vscode-python-venv/selectpython2_huf3c3f0c157cbe815198cc7c758825965_32669_5f87d5c7aec8ec38e4c2e5b82b4ee184.png 400w,
               /vscode-python-venv/selectpython2_huf3c3f0c157cbe815198cc7c758825965_32669_5c2d4767ae0f3328a7bb3107bc815029.png 760w,
               /vscode-python-venv/selectpython2_huf3c3f0c157cbe815198cc7c758825965_32669_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python-venv/selectpython2_huf3c3f0c157cbe815198cc7c758825965_32669_5f87d5c7aec8ec38e4c2e5b82b4ee184.png&#34;
               width=&#34;760&#34;
               height=&#34;571&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;selectpython3&#34; srcset=&#34;
               /vscode-python-venv/selectpython3_hub7f3cb9643ae745be6b48394f2e50cdf_49574_15c2bf6fd278654efbb63e8aa9f96fd2.png 400w,
               /vscode-python-venv/selectpython3_hub7f3cb9643ae745be6b48394f2e50cdf_49574_5058619fc1a18325576fddc7993948e0.png 760w,
               /vscode-python-venv/selectpython3_hub7f3cb9643ae745be6b48394f2e50cdf_49574_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python-venv/selectpython3_hub7f3cb9643ae745be6b48394f2e50cdf_49574_15c2bf6fd278654efbb63e8aa9f96fd2.png&#34;
               width=&#34;760&#34;
               height=&#34;572&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;이 과정을 완료하면, &lt;code&gt;.vscode&lt;/code&gt;라는 폴더가 생기게 되고 이 안에 settings.json이라는 파일이 자동 생성됩니다. 이 파일을 열어보면, python 인터프리터의 경로가 우리가 만든 venv의 것으로 설정되고 있음을 확인할 수 있습니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;settings_json&#34; srcset=&#34;
               /vscode-python-venv/settings_json_hu33259f9b5f60deca83d74c432fff1574_35498_950013125438d6295bda148d2b4a101f.png 400w,
               /vscode-python-venv/settings_json_hu33259f9b5f60deca83d74c432fff1574_35498_0d9921d861c9edf99f1036ee5cc41d33.png 760w,
               /vscode-python-venv/settings_json_hu33259f9b5f60deca83d74c432fff1574_35498_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python-venv/settings_json_hu33259f9b5f60deca83d74c432fff1574_35498_950013125438d6295bda148d2b4a101f.png&#34;
               width=&#34;760&#34;
               height=&#34;572&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Visual Studio Code에서 Python3 환경 설정하기</title>
      <link>https://evandde.github.io/vscode-python/</link>
      <pubDate>Mon, 22 Feb 2021 11:33:18 +0900</pubDate>
      <guid>https://evandde.github.io/vscode-python/</guid>
      <description>&lt;p&gt;VSCode에서 Python3 언어를 사용하기 위해 실행/디버깅 등이 가능한 환경을 구축하는 방법에 대해 알아봅니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    여기서는 &lt;b&gt;VSCode 설치를 완료한 상태&lt;/b&gt;라고 가정합니다. VSCode 설치 및 기본 세팅은 &lt;a href=&#34;https://evandde.github.io/vscode/&#34;&gt;이 글&lt;/a&gt;을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;컴파일러디버거-설치&#34;&gt;컴파일러/디버거 설치&lt;/h2&gt;
&lt;p&gt;VSCode는 Python3 언어용 인터프리터를 자체적으로 내장하고있지 않습니다. 때문에 Python3 언어를 VSCode에서 사용하려면, 인터프리터를 직접 설치하고 이를 연동해주는 작업이 필요합니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    Extension을 설치한다고 해서 인터프리터가 설치되는 것은 아닙니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;windows를-이용하는-경우&#34;&gt;Windows를 이용하는 경우&lt;/h3&gt;
&lt;p&gt;Windows는 기본적으로 Python3 언어용 인터프리터를 제공하지 않습니다. 따라서, 우리가 직접 설치해주어야 합니다.&lt;/p&gt;
&lt;p&gt;이는 chocolatey를 통해 쉽게 설치할 수 있습니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Chocolatey는 Windows용 패키지 관리자입니다. 아직 사용 방법을 모르신다면, &lt;a href=&#34;https://evandde.github.io/chocolatey/&#34;&gt;이 글&lt;/a&gt;을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;choco install python -y
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;python&#34; srcset=&#34;
               /vscode-python/python_hu6e2d05cb9a13539a28afd7639719bf5c_41500_703bb37218bd66563d4e36da4f28e468.png 400w,
               /vscode-python/python_hu6e2d05cb9a13539a28afd7639719bf5c_41500_11fd434edc6ee46a7e147ed94c4a04e4.png 760w,
               /vscode-python/python_hu6e2d05cb9a13539a28afd7639719bf5c_41500_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python/python_hu6e2d05cb9a13539a28afd7639719bf5c_41500_703bb37218bd66563d4e36da4f28e468.png&#34;
               width=&#34;740&#34;
               height=&#34;494&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;다음 명령어를 통해 설치가 잘 되었는지 확인해보세요.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;python --version
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;Chocolatey 특성 상, 설치한 직후에는 &lt;code&gt;python&lt;/code&gt; 명령어를 인식하지 못할 수 있습니다.&lt;/p&gt;
&lt;p&gt;PowerShell을 껐다 켜거나, &lt;code&gt;refreshenv&lt;/code&gt; 명령어를 활용하세요.&lt;/p&gt;

  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;python_version_windows&#34; srcset=&#34;
               /vscode-python/python_version_windows_hu387b960dddce961ae4b280eb6c79089d_2919_92890a0be2655ca0d77ed47cd717dbd7.png 400w,
               /vscode-python/python_version_windows_hu387b960dddce961ae4b280eb6c79089d_2919_4622c0f932ccf2499dff9c47085e2f70.png 760w,
               /vscode-python/python_version_windows_hu387b960dddce961ae4b280eb6c79089d_2919_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python/python_version_windows_hu387b960dddce961ae4b280eb6c79089d_2919_92890a0be2655ca0d77ed47cd717dbd7.png&#34;
               width=&#34;480&#34;
               height=&#34;41&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;extension-설치&#34;&gt;Extension 설치&lt;/h2&gt;
&lt;p&gt;이제 VSCode에서 extension을 설치할 차례입니다.&lt;/p&gt;
&lt;p&gt;VSCode를 켜고 extension 탭으로 간 뒤 &amp;quot;&lt;strong&gt;python&lt;/strong&gt;&amp;quot;를 검색하세요. 맨 위에 python extension이 뜰 것입니다. Install 버튼을 눌러 설치합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;extension_python&#34; srcset=&#34;
               /vscode-python/extension_python_hu5ac9417cd662cdf9460ddfba50989f19_72511_ad2e777e59664c609e2bc81c4fa56b1d.png 400w,
               /vscode-python/extension_python_hu5ac9417cd662cdf9460ddfba50989f19_72511_bf1a4e1d4575305c39fb888add3b0126.png 760w,
               /vscode-python/extension_python_hu5ac9417cd662cdf9460ddfba50989f19_72511_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python/extension_python_hu5ac9417cd662cdf9460ddfba50989f19_72511_ad2e777e59664c609e2bc81c4fa56b1d.png&#34;
               width=&#34;760&#34;
               height=&#34;571&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;테스트&#34;&gt;테스트&lt;/h2&gt;
&lt;p&gt;이제 제대로 설치가 되었는지 확인할 시간입니다.&lt;/p&gt;
&lt;h3 id=&#34;코드-작성&#34;&gt;코드 작성&lt;/h3&gt;
&lt;p&gt;Explorer 탭으로 이동하여 적당한 경로에 &lt;b&gt;main.py&lt;/b&gt;라는 새 파일을 만들어주고 다음과 같이 작성하도록 하겠습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(&amp;quot;Hello, World!&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;codewriting&#34; srcset=&#34;
               /vscode-python/codewriting_hu3258aa037c885de537f74aef06ed958c_38131_44b6e59100ba6c21f3737ad02b2b1435.png 400w,
               /vscode-python/codewriting_hu3258aa037c885de537f74aef06ed958c_38131_2999fa9618f6388a376fb978f9fffa3f.png 760w,
               /vscode-python/codewriting_hu3258aa037c885de537f74aef06ed958c_38131_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python/codewriting_hu3258aa037c885de537f74aef06ed958c_38131_44b6e59100ba6c21f3737ad02b2b1435.png&#34;
               width=&#34;695&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;실행&#34;&gt;실행&lt;/h3&gt;
&lt;p&gt;다음 그림과 같이 [Run]-[Run Without Debugging]을 눌러 실행하시면 됩니다.&lt;/p&gt;
&lt;p&gt;이후 아래쪽의 &lt;strong&gt;TERMINAL&lt;/strong&gt; 탭을 확인하시면, 우리가 작성한대로 Hello, World!가 화면에 출력되는 것을 확인할 수 있습니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;run1&#34; srcset=&#34;
               /vscode-python/run1_hu2e74798ec29e178f2d2d60cef2edcb88_42206_51c57614711bb021536456f995e838cb.png 400w,
               /vscode-python/run1_hu2e74798ec29e178f2d2d60cef2edcb88_42206_943b665ca312c50cf36a7de895ba9f9e.png 760w,
               /vscode-python/run1_hu2e74798ec29e178f2d2d60cef2edcb88_42206_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python/run1_hu2e74798ec29e178f2d2d60cef2edcb88_42206_51c57614711bb021536456f995e838cb.png&#34;
               width=&#34;760&#34;
               height=&#34;571&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;run2&#34; srcset=&#34;
               /vscode-python/run2_hu15dd6c7e5bc1232eda1d5a0707ac041f_52244_ea85ba663330cae3476d81755912bee8.png 400w,
               /vscode-python/run2_hu15dd6c7e5bc1232eda1d5a0707ac041f_52244_7dafbdad8ec61ed19f3e19c142daa49b.png 760w,
               /vscode-python/run2_hu15dd6c7e5bc1232eda1d5a0707ac041f_52244_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python/run2_hu15dd6c7e5bc1232eda1d5a0707ac041f_52244_ea85ba663330cae3476d81755912bee8.png&#34;
               width=&#34;760&#34;
               height=&#34;571&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;디버깅&#34;&gt;디버깅&lt;/h3&gt;
&lt;p&gt;다음 그림과 같이 진행하여 디버깅도 가능합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug1&#34; srcset=&#34;
               /vscode-python/debug1_huea92c79a15bd67ab41dc987ee2336c1e_44850_a643b0d95fb82fa8b90991df5ce3c690.png 400w,
               /vscode-python/debug1_huea92c79a15bd67ab41dc987ee2336c1e_44850_47b45d5186e3383dbffeb8e4475d2756.png 760w,
               /vscode-python/debug1_huea92c79a15bd67ab41dc987ee2336c1e_44850_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python/debug1_huea92c79a15bd67ab41dc987ee2336c1e_44850_a643b0d95fb82fa8b90991df5ce3c690.png&#34;
               width=&#34;760&#34;
               height=&#34;571&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug2&#34; srcset=&#34;
               /vscode-python/debug2_hub256b7d4345ed72aeb0efacbcea9146d_63096_afd30996f992a43e300b34bc8d1710b8.png 400w,
               /vscode-python/debug2_hub256b7d4345ed72aeb0efacbcea9146d_63096_e26d3b9bc3ad62944bd5ac86af167661.png 760w,
               /vscode-python/debug2_hub256b7d4345ed72aeb0efacbcea9146d_63096_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python/debug2_hub256b7d4345ed72aeb0efacbcea9146d_63096_afd30996f992a43e300b34bc8d1710b8.png&#34;
               width=&#34;760&#34;
               height=&#34;571&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug3&#34; srcset=&#34;
               /vscode-python/debug3_hu9259eb6f4bf6485a560db9bdf2b16733_58711_1ecf6f1ceb709b12731f62c58d826339.png 400w,
               /vscode-python/debug3_hu9259eb6f4bf6485a560db9bdf2b16733_58711_7f04a88eb9d72b6d41cc240a7d03e2ef.png 760w,
               /vscode-python/debug3_hu9259eb6f4bf6485a560db9bdf2b16733_58711_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python/debug3_hu9259eb6f4bf6485a560db9bdf2b16733_58711_1ecf6f1ceb709b12731f62c58d826339.png&#34;
               width=&#34;760&#34;
               height=&#34;571&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug4&#34; srcset=&#34;
               /vscode-python/debug4_hu0fb868517a0036bb1dcc579f0bc70fe0_55281_491478477d1985c5abd72e7e96e547bc.png 400w,
               /vscode-python/debug4_hu0fb868517a0036bb1dcc579f0bc70fe0_55281_442d12385300746a883668fe9ba844a8.png 760w,
               /vscode-python/debug4_hu0fb868517a0036bb1dcc579f0bc70fe0_55281_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python/debug4_hu0fb868517a0036bb1dcc579f0bc70fe0_55281_491478477d1985c5abd72e7e96e547bc.png&#34;
               width=&#34;760&#34;
               height=&#34;571&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug5&#34; srcset=&#34;
               /vscode-python/debug5_hu05174299344a0a4de7c35a5fba4d3e93_54773_cd5f4569022f58b0365b35c4ae70cfa3.png 400w,
               /vscode-python/debug5_hu05174299344a0a4de7c35a5fba4d3e93_54773_606e538de1a728f6ff2b3a4c56053a3a.png 760w,
               /vscode-python/debug5_hu05174299344a0a4de7c35a5fba4d3e93_54773_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python/debug5_hu05174299344a0a4de7c35a5fba4d3e93_54773_cd5f4569022f58b0365b35c4ae70cfa3.png&#34;
               width=&#34;760&#34;
               height=&#34;571&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;추천-extension&#34;&gt;추천 extension&lt;/h3&gt;
&lt;p&gt;VSCode에서 python을 사용할 경우, import한 패키지의 내장함수에 대해 자동완성이 잘 이루어지지 않는 경우가 많습니다. 개인적으로는 이 때문에 한동안 VSCode에서 python을 사용하는 것이 꺼려졌습니다.&lt;/p&gt;
&lt;p&gt;이런 문제를 해결하기 위해 &lt;strong&gt;Pylance&lt;/strong&gt;라는 extension을 강력히 추천드립니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;pylance&#34; srcset=&#34;
               /vscode-python/pylance_hu93ecdcad1a2c88a746d67dacb1229e42_129562_08ff78f5e657792b612a3a9b10cfe4a6.png 400w,
               /vscode-python/pylance_hu93ecdcad1a2c88a746d67dacb1229e42_129562_71ec2427e9851a2d8bc0e80687bc08b5.png 760w,
               /vscode-python/pylance_hu93ecdcad1a2c88a746d67dacb1229e42_129562_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-python/pylance_hu93ecdcad1a2c88a746d67dacb1229e42_129562_08ff78f5e657792b612a3a9b10cfe4a6.png&#34;
               width=&#34;760&#34;
               height=&#34;571&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Visual Studio Code와 Windows Subsystem for Linux 연동하기</title>
      <link>https://evandde.github.io/vscode-wsl/</link>
      <pubDate>Wed, 25 Nov 2020 10:42:23 +0900</pubDate>
      <guid>https://evandde.github.io/vscode-wsl/</guid>
      <description>&lt;p&gt;VSCode와 WSL을 연동하여 사용하는 방법에 대해 알아봅니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    여기서는 &lt;b&gt;WSL1 혹은 WSL2&lt;/b&gt; 설치가 완료된 상태라고 가정합니다. 이에 관한 전반적인 내용은 &lt;a href=&#34;https://evandde.github.io/wsl/&#34;&gt;이 글&lt;/a&gt;을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    여기서는 &lt;b&gt;VSCode&lt;/b&gt; 설치가 완료된 상태라고 가정합니다. VSCode 설치 및 기본 세팅은 &lt;a href=&#34;https://evandde.github.io/vscode/&#34;&gt;이 글&lt;/a&gt;을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;remote-wsl-확장-설치&#34;&gt;Remote WSL 확장 설치&lt;/h2&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Remote WSL 확장을 설치하기 위해서는, &lt;b&gt;1.35 버전 이상&lt;/b&gt;의 VSCode가 필요합니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;VSCode를 켜고 extension 탭으로 간 뒤 &amp;quot;&lt;strong&gt;wsl&lt;/strong&gt;&amp;quot;를 검색하세요. 맨 위에 &lt;b&gt;Remote - WSL extension&lt;/b&gt;이 뜰 것입니다. Install 버튼을 눌러 설치합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;extension_wsl&#34; srcset=&#34;
               /vscode-wsl/extension_wsl_hu31afeebf120d8ac309f15d19d69fda50_80471_3eab379f164895b5cf04f97656d18119.png 400w,
               /vscode-wsl/extension_wsl_hu31afeebf120d8ac309f15d19d69fda50_80471_87b7d291fba01da023cdb7a0c5387836.png 760w,
               /vscode-wsl/extension_wsl_hu31afeebf120d8ac309f15d19d69fda50_80471_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-wsl/extension_wsl_hu31afeebf120d8ac309f15d19d69fda50_80471_3eab379f164895b5cf04f97656d18119.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;linux-배포판-최신화-및-라이브러리-설치&#34;&gt;Linux 배포판 최신화 및 라이브러리 설치&lt;/h2&gt;
&lt;p&gt;일부 WSL 배포판의 경우에는 VSCode를 실행하기 위한 라이브러리가 없을 수 있습니다.&lt;/p&gt;
&lt;p&gt;이 경우에는 패키지매니저(&lt;code&gt;apt&lt;/code&gt;, &lt;code&gt;yum&lt;/code&gt;)를 최신화하고, 필요한 라이브러리를 설치하시기 바랍니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Debian이나 Ubuntu의 경우 apt를 활용한 예&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt update -y &amp;amp;&amp;amp; sudo apt upgrade -y
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;wget&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;이나 ca 인증서&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;를 다운받아야 할 수 있습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Debian이나 Ubuntu의 경우 apt를 활용한 예&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install wget -y
sudo apt install ca-certificates -y
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;실행해보기&#34;&gt;실행해보기&lt;/h2&gt;
&lt;h3 id=&#34;wsl-터미널에서-실행&#34;&gt;WSL 터미널에서 실행&lt;/h3&gt;
&lt;p&gt;원하는 프로젝트의 디렉토리에서 &lt;code&gt;code .&lt;/code&gt; 명령어를 입력합니다.&lt;/p&gt;
&lt;p&gt;첫 실행 시에는 자동으로 설치가 진행된 뒤 VSCode가 실행됩니다.&lt;/p&gt;
&lt;p&gt;실행한 뒤, 창 왼쪽 아래의 초록색 부분에 &lt;b&gt;WSL: [배포판 이름]&lt;/b&gt;이 정상적으로 뜬다면 성공입니다.&lt;/p&gt;














&lt;figure  id=&#34;figure-ref-get-started-using-vs-code-with-windows-subsystem-for-linux--microsoft-docshttpsdocsmicrosoftcomen-uswindowswsltutorialswsl-vscode&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Ref.: [Get started using VS Code with Windows Subsystem for Linux | Microsoft Docs](https://docs.microsoft.com/en-us/windows/wsl/tutorials/wsl-vscode)&#34;
           src=&#34;https://evandde.github.io/vscode-wsl/wsl-open-vs-code.gif&#34;
           loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Ref.: &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/tutorials/wsl-vscode&#34;&gt;Get started using VS Code with Windows Subsystem for Linux | Microsoft Docs&lt;/a&gt;
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;h3 id=&#34;vscode에서-실행&#34;&gt;VSCode에서 실행&lt;/h3&gt;
&lt;p&gt;다음 그림과 같이 진행합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;vscode_open_remotewsl1&#34; srcset=&#34;
               /vscode-wsl/vscode_open_remotewsl1_huaa1c17110882f41aa0a4384ed1b766f0_46007_c107efe44e721ebf4a9cb02a607116ea.png 400w,
               /vscode-wsl/vscode_open_remotewsl1_huaa1c17110882f41aa0a4384ed1b766f0_46007_7ec7a1a72568b5cbaee46f1cb4f0a686.png 760w,
               /vscode-wsl/vscode_open_remotewsl1_huaa1c17110882f41aa0a4384ed1b766f0_46007_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-wsl/vscode_open_remotewsl1_huaa1c17110882f41aa0a4384ed1b766f0_46007_c107efe44e721ebf4a9cb02a607116ea.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;vscode_open_remotewsl2&#34; srcset=&#34;
               /vscode-wsl/vscode_open_remotewsl2_hu99f3459e099ff8fc97eb6a43aa703d64_46816_a2d36fd35c86f8cb7aa429678fb68d47.png 400w,
               /vscode-wsl/vscode_open_remotewsl2_hu99f3459e099ff8fc97eb6a43aa703d64_46816_4b0ae88d9910a058601da9ecd31b20be.png 760w,
               /vscode-wsl/vscode_open_remotewsl2_hu99f3459e099ff8fc97eb6a43aa703d64_46816_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-wsl/vscode_open_remotewsl2_hu99f3459e099ff8fc97eb6a43aa703d64_46816_a2d36fd35c86f8cb7aa429678fb68d47.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;vscode_open_remotewsl3&#34; srcset=&#34;
               /vscode-wsl/vscode_open_remotewsl3_hua9c4c0917fe0f9e88673719e1c794159_76269_3fcc2404b1f1ebd9ad90ebb242bd55be.png 400w,
               /vscode-wsl/vscode_open_remotewsl3_hua9c4c0917fe0f9e88673719e1c794159_76269_ba439e65bc21c69c989a85551483a6ec.png 760w,
               /vscode-wsl/vscode_open_remotewsl3_hua9c4c0917fe0f9e88673719e1c794159_76269_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-wsl/vscode_open_remotewsl3_hua9c4c0917fe0f9e88673719e1c794159_76269_3fcc2404b1f1ebd9ad90ebb242bd55be.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;wsl에-확장-설치하기&#34;&gt;WSL에 확장 설치하기&lt;/h2&gt;
&lt;p&gt;Extension 탭을 열면 위쪽에는 Local(윈도우)에 설치된 확장 목록이, 아래쪽에는 WSL에 설치된 확장 목록이 뜹니다.&lt;/p&gt;
&lt;p&gt;이미 로컬에 설치된 확장을 설치할 수도 있고, WSL에만 확장을 설치할 수도 있습니다.&lt;/p&gt;
&lt;p&gt;다음 그림을 참고하세요.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;extension_copy1&#34; srcset=&#34;
               /vscode-wsl/extension_copy1_hu2dbe3ec6e318ac7fb7f8ef0b62ea57b3_150478_b2e0722f782bf38067604cd7f3f0f0ea.png 400w,
               /vscode-wsl/extension_copy1_hu2dbe3ec6e318ac7fb7f8ef0b62ea57b3_150478_eaad8e696e95f81ede7ce27598cfce33.png 760w,
               /vscode-wsl/extension_copy1_hu2dbe3ec6e318ac7fb7f8ef0b62ea57b3_150478_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-wsl/extension_copy1_hu2dbe3ec6e318ac7fb7f8ef0b62ea57b3_150478_b2e0722f782bf38067604cd7f3f0f0ea.png&#34;
               width=&#34;760&#34;
               height=&#34;584&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;extension_copy2&#34; srcset=&#34;
               /vscode-wsl/extension_copy2_hud8a81bc5f5eca29be782f6935b8b62e7_84124_1d2ffe353fac757515f707957fd4d788.png 400w,
               /vscode-wsl/extension_copy2_hud8a81bc5f5eca29be782f6935b8b62e7_84124_c7c5d6fed26ae5ca61d188efb29503bb.png 760w,
               /vscode-wsl/extension_copy2_hud8a81bc5f5eca29be782f6935b8b62e7_84124_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-wsl/extension_copy2_hud8a81bc5f5eca29be782f6935b8b62e7_84124_1d2ffe353fac757515f707957fd4d788.png&#34;
               width=&#34;760&#34;
               height=&#34;584&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;extension_copy3&#34; srcset=&#34;
               /vscode-wsl/extension_copy3_hu7c330a01e9857d89173737c29c11fd46_99783_301652b25a1cdf4cdee107c215ac79ba.png 400w,
               /vscode-wsl/extension_copy3_hu7c330a01e9857d89173737c29c11fd46_99783_52648a9ff9a399171c1f7c934865ef89.png 760w,
               /vscode-wsl/extension_copy3_hu7c330a01e9857d89173737c29c11fd46_99783_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-wsl/extension_copy3_hu7c330a01e9857d89173737c29c11fd46_99783_301652b25a1cdf4cdee107c215ac79ba.png&#34;
               width=&#34;760&#34;
               height=&#34;584&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;extension_copy4&#34; srcset=&#34;
               /vscode-wsl/extension_copy4_hu408d3fb6cb7459c36fd03cda3fd53eaf_99852_0b0d5a0b238f9afb859dacfdd9c460b8.png 400w,
               /vscode-wsl/extension_copy4_hu408d3fb6cb7459c36fd03cda3fd53eaf_99852_6b31a7796e435cdeb8023f50bcf73c87.png 760w,
               /vscode-wsl/extension_copy4_hu408d3fb6cb7459c36fd03cda3fd53eaf_99852_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-wsl/extension_copy4_hu408d3fb6cb7459c36fd03cda3fd53eaf_99852_0b0d5a0b238f9afb859dacfdd9c460b8.png&#34;
               width=&#34;760&#34;
               height=&#34;584&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;extension_copy5&#34; srcset=&#34;
               /vscode-wsl/extension_copy5_hu9d1e06428f495f8dae4da46e316505c1_70666_2cdc28818baedbfc656f66afcecadfea.png 400w,
               /vscode-wsl/extension_copy5_hu9d1e06428f495f8dae4da46e316505c1_70666_51ab29c428e9a4ec761e0091e0d14b09.png 760w,
               /vscode-wsl/extension_copy5_hu9d1e06428f495f8dae4da46e316505c1_70666_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-wsl/extension_copy5_hu9d1e06428f495f8dae4da46e316505c1_70666_2cdc28818baedbfc656f66afcecadfea.png&#34;
               width=&#34;760&#34;
               height=&#34;584&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;웹 서버로부터 데이터를 다운 받기 위한 명령어&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;SSL 기반의 응용프로그램이 SSL 연결의 신뢰성을 검사할 수 있도록 허용하기 위한 인증서&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;</description>
    </item>
    
    <item>
      <title>Visual Studio Code에서 CMake 환경 설정하기</title>
      <link>https://evandde.github.io/vscode-cmake/</link>
      <pubDate>Fri, 13 Nov 2020 10:04:24 +0900</pubDate>
      <guid>https://evandde.github.io/vscode-cmake/</guid>
      <description>&lt;p&gt;VSCode에서 CMake 기반의 프로젝트를 만들고, 실행/디버깅 등이 가능한 환경을 구축하는 방법에 대해 알아봅니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    여기서는 VSCode 설치 후, &lt;b&gt;C++ 언어를 사용하기 위한 환경 구축까지 완료한 상태&lt;/b&gt;라고 가정합니다. C++ 언어 사용을 위한 환경 구축은 &lt;a href=&#34;https://evandde.github.io/vscode-cpp/&#34;&gt;이 글&lt;/a&gt;을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;cmake-설치&#34;&gt;CMake 설치&lt;/h2&gt;
&lt;p&gt;VSCode는 CMake를 자체적으로 내장하고있지 않습니다. 때문에 CMake를 직접 설치하고 이를 연동해주는 작업이 필요합니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    Extension을 설치한다고 해서 CMake가 설치되는 것은 아닙니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;windows를-이용하는-경우&#34;&gt;Windows를 이용하는 경우&lt;/h3&gt;
&lt;p&gt;Chocolatey를 이용하면 쉽게 설치할 수 있습니다. 다만, chocolatey로 CMake를 설치하는 경우 &lt;code&gt;PATH&lt;/code&gt; 환경변수가 자동으로 잡히지 않아, 추가적인 명령어를 입력해주어야 합니다. 다음 명령어를 입력하세요.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Chocolatey는 Windows용 패키지 관리자입니다. 아직 사용 방법을 모르신다면, &lt;a href=&#34;https://evandde.github.io/chocolatey/&#34;&gt;이 글&lt;/a&gt;을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;choco install cmake -y --installargs &#39;ADD_CMAKE_TO_PATH=System&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cmake_windows&#34; srcset=&#34;
               /vscode-cmake/cmake_windows_huf9d6185fcc3b986572bd5104885e87fd_46967_9771e93ed3e87c576f6fb2867e7b5956.png 400w,
               /vscode-cmake/cmake_windows_huf9d6185fcc3b986572bd5104885e87fd_46967_f38a49ff98e14257a9b883dedfdabf5a.png 760w,
               /vscode-cmake/cmake_windows_huf9d6185fcc3b986572bd5104885e87fd_46967_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/cmake_windows_huf9d6185fcc3b986572bd5104885e87fd_46967_9771e93ed3e87c576f6fb2867e7b5956.png&#34;
               width=&#34;760&#34;
               height=&#34;331&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;다음 명령어를 통해 설치가 잘 되었는지 확인해보세요.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;cmake --version
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;Chocolatey 특성 상, 설치한 직후에는 &lt;code&gt;cmake&lt;/code&gt; 명령어를 인식하지 못할 수 있습니다.&lt;/p&gt;
&lt;p&gt;PowerShell을 껐다 켜거나, &lt;code&gt;refreshenv&lt;/code&gt; 명령어를 활용하세요.&lt;/p&gt;

  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cmake_version_windows&#34; srcset=&#34;
               /vscode-cmake/cmake_version_windows_hu89a6af564cc18670337a8f92b68e3118_12456_0bc90b9ece12811ecdcb9939d2704be4.png 400w,
               /vscode-cmake/cmake_version_windows_hu89a6af564cc18670337a8f92b68e3118_12456_afb26016a1a0ad67fc17e85ed1c59bba.png 760w,
               /vscode-cmake/cmake_version_windows_hu89a6af564cc18670337a8f92b68e3118_12456_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/cmake_version_windows_hu89a6af564cc18670337a8f92b68e3118_12456_0bc90b9ece12811ecdcb9939d2704be4.png&#34;
               width=&#34;760&#34;
               height=&#34;122&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;linux를-이용하는-경우&#34;&gt;Linux를 이용하는 경우&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://salsa.debian.org/apt-team/apt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;apt(apt-get)&lt;/a&gt;나 &lt;a href=&#34;http://yum.baseurl.org/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;yum&lt;/a&gt;을 이용하면 쉽게 설치할 수 있습니다.&lt;/p&gt;
&lt;p&gt;예를 들어 &lt;code&gt;apt&lt;/code&gt;를 이용하여 설치한다면 다음 명령어를 입력합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install cmake -y
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cmake_linux&#34; srcset=&#34;
               /vscode-cmake/cmake_linux_huaed6654e1f9d1908b9a5d0635f33e73f_34421_08db8804eb063c564c76702499a0f070.png 400w,
               /vscode-cmake/cmake_linux_huaed6654e1f9d1908b9a5d0635f33e73f_34421_68103a3937f845ce58583da48ddc4d0e.png 760w,
               /vscode-cmake/cmake_linux_huaed6654e1f9d1908b9a5d0635f33e73f_34421_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/cmake_linux_huaed6654e1f9d1908b9a5d0635f33e73f_34421_08db8804eb063c564c76702499a0f070.png&#34;
               width=&#34;760&#34;
               height=&#34;300&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;다음 명령어를 통해 설치가 잘 되었는지 확인해보세요.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cmake --version
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cmake_version_linux&#34; srcset=&#34;
               /vscode-cmake/cmake_version_linux_hua78ef093bdc60e6242f0783d85dba23b_5482_1a5c2e360d69d4f6e5ccd10c0e5ee3b7.png 400w,
               /vscode-cmake/cmake_version_linux_hua78ef093bdc60e6242f0783d85dba23b_5482_1d69aa391dc32fc422821a292d815295.png 760w,
               /vscode-cmake/cmake_version_linux_hua78ef093bdc60e6242f0783d85dba23b_5482_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/cmake_version_linux_hua78ef093bdc60e6242f0783d85dba23b_5482_1a5c2e360d69d4f6e5ccd10c0e5ee3b7.png&#34;
               width=&#34;736&#34;
               height=&#34;77&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;extension-설치&#34;&gt;Extension 설치&lt;/h2&gt;
&lt;p&gt;이제 VSCode에서 extension을 설치할 차례입니다.&lt;/p&gt;
&lt;p&gt;VSCode를 켜고 extension 탭으로 간 뒤 “&lt;strong&gt;cmake&lt;/strong&gt;“를 검색하세요. 맨 위부터 &lt;strong&gt;CMake&lt;/strong&gt;와 &lt;strong&gt;CMake Tools&lt;/strong&gt;가 뜰 것입니다. 두 가지 모두 Install 버튼을 눌러 설치합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;extension_cmake&#34; srcset=&#34;
               /vscode-cmake/extension_cmake_hu3da5222f7d42ccd615f0b10e3c843ad1_77547_4e6d4b33b76a1390296ae0108ae9ba55.png 400w,
               /vscode-cmake/extension_cmake_hu3da5222f7d42ccd615f0b10e3c843ad1_77547_46089bc2159dbb4772073c745321d074.png 760w,
               /vscode-cmake/extension_cmake_hu3da5222f7d42ccd615f0b10e3c843ad1_77547_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/extension_cmake_hu3da5222f7d42ccd615f0b10e3c843ad1_77547_4e6d4b33b76a1390296ae0108ae9ba55.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;각각의 용도는 이렇습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CMake extension: CMake 명령어에 대한 자동완성 제공. CMakeLists.txt 파일 작성에 도움.&lt;/li&gt;
&lt;li&gt;CMake Tools extension: CMake 기반 프로젝트를 관리하는데에 도움.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;테스트&#34;&gt;테스트&lt;/h2&gt;
&lt;p&gt;이제 제대로 설치가 되었는지 확인할 시간입니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    경로에 &lt;strong&gt;한글&lt;/strong&gt;이 있으면 제대로 동작하지 않습니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;hello-world-프로젝트-만들어보기&#34;&gt;Hello world 프로젝트 만들어보기&lt;/h3&gt;
&lt;p&gt;CMake Tools는 &lt;b&gt;CMake: Quick Start&lt;/b&gt;라는 기능을 제공합니다. 손쉽게 CMake 기반의 Hello world 프로젝트를 만들어주는 것이죠.&lt;/p&gt;
&lt;p&gt;적당한 경로에 빈 폴더를 만들어주고 다음과 같이 진행합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cqs1&#34; srcset=&#34;
               /vscode-cmake/cqs1_hu0e7303143497f0e4a137757a573cefc0_45640_caabe28af57f76ad3462e5cede53839c.png 400w,
               /vscode-cmake/cqs1_hu0e7303143497f0e4a137757a573cefc0_45640_3da3f460f72e8cabaaf3889ef5780923.png 760w,
               /vscode-cmake/cqs1_hu0e7303143497f0e4a137757a573cefc0_45640_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/cqs1_hu0e7303143497f0e4a137757a573cefc0_45640_caabe28af57f76ad3462e5cede53839c.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cqs2&#34; srcset=&#34;
               /vscode-cmake/cqs2_hu7f22ed4d7a598ee99fbd02dc85f95eec_42358_2558a20512433bd005186796729aa5a5.png 400w,
               /vscode-cmake/cqs2_hu7f22ed4d7a598ee99fbd02dc85f95eec_42358_f9f11df871b2487e26ca5679338a6be8.png 760w,
               /vscode-cmake/cqs2_hu7f22ed4d7a598ee99fbd02dc85f95eec_42358_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/cqs2_hu7f22ed4d7a598ee99fbd02dc85f95eec_42358_2558a20512433bd005186796729aa5a5.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cqs3&#34; srcset=&#34;
               /vscode-cmake/cqs3_hu8ae8568f48c1e6cc3dda2f57b9ad71bd_73424_90322c3a2e550c599c95d82ba2446d72.png 400w,
               /vscode-cmake/cqs3_hu8ae8568f48c1e6cc3dda2f57b9ad71bd_73424_c10044573126886eedd0e2d972091b76.png 760w,
               /vscode-cmake/cqs3_hu8ae8568f48c1e6cc3dda2f57b9ad71bd_73424_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/cqs3_hu8ae8568f48c1e6cc3dda2f57b9ad71bd_73424_90322c3a2e550c599c95d82ba2446d72.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cqs4&#34; srcset=&#34;
               /vscode-cmake/cqs4_hu651e505c86ff239e93aff82d745041ea_46310_b7233074ab7ba107154fcc97db32ac24.png 400w,
               /vscode-cmake/cqs4_hu651e505c86ff239e93aff82d745041ea_46310_8cd8b9516849d5a9d8d75ca9fb813464.png 760w,
               /vscode-cmake/cqs4_hu651e505c86ff239e93aff82d745041ea_46310_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/cqs4_hu651e505c86ff239e93aff82d745041ea_46310_b7233074ab7ba107154fcc97db32ac24.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cqs5&#34; srcset=&#34;
               /vscode-cmake/cqs5_huccc2f1247fcbf6dd401b7f495cf147cb_50218_17d669e23dfa30cb3dab8686981a3128.png 400w,
               /vscode-cmake/cqs5_huccc2f1247fcbf6dd401b7f495cf147cb_50218_2a9520c56ea9bd1f1d8c0f10ab602f8f.png 760w,
               /vscode-cmake/cqs5_huccc2f1247fcbf6dd401b7f495cf147cb_50218_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/cqs5_huccc2f1247fcbf6dd401b7f495cf147cb_50218_17d669e23dfa30cb3dab8686981a3128.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cqs6&#34; srcset=&#34;
               /vscode-cmake/cqs6_hu95d915dd180392f838a32ab1e81c2198_42933_c41e8bd1a6a9127e52114d072653ffc2.png 400w,
               /vscode-cmake/cqs6_hu95d915dd180392f838a32ab1e81c2198_42933_7c3275d6d1a0e5d48b7a79780d75038b.png 760w,
               /vscode-cmake/cqs6_hu95d915dd180392f838a32ab1e81c2198_42933_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/cqs6_hu95d915dd180392f838a32ab1e81c2198_42933_c41e8bd1a6a9127e52114d072653ffc2.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;실행&#34;&gt;실행&lt;/h3&gt;
&lt;p&gt;다음 그림과 같이 실행하시면 됩니다. 동일 폴더 내에 &lt;b&gt;.vscode&lt;/b&gt;라는 폴더가 생기고 그 안에 CMake 설정 등에 관한 &lt;code&gt;.json&lt;/code&gt; 파일이 자동으로 생성될 것입니다. 또한, &lt;b&gt;build&lt;/b&gt;라는 폴더가 생기고 그 안에 &lt;strong&gt;CMake를 통한 빌드 부산물 및 컴파일 결과물&lt;/strong&gt;이 자동으로 생성될 것입니다.&lt;/p&gt;
&lt;p&gt;이후 아래쪽의 &lt;strong&gt;TERMINAL&lt;/strong&gt; 탭을 확인하시면, 자동 생성된 main.cpp의 내용대로 Hello, world!가 출력되는 것을 확인할 수 있습니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;run1&#34; srcset=&#34;
               /vscode-cmake/run1_hu23cbc9ee6d94a3922a35bb52f261e9f6_41631_a0936e7fd0a5303dd4898784745d755f.png 400w,
               /vscode-cmake/run1_hu23cbc9ee6d94a3922a35bb52f261e9f6_41631_0830794d6928faa454db44cb37713ac3.png 760w,
               /vscode-cmake/run1_hu23cbc9ee6d94a3922a35bb52f261e9f6_41631_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/run1_hu23cbc9ee6d94a3922a35bb52f261e9f6_41631_a0936e7fd0a5303dd4898784745d755f.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;run2&#34; srcset=&#34;
               /vscode-cmake/run2_hua87ae9c2ff262c1bd9334f65408d52c2_53270_8782fbb70eef9231d034ed3435be5a6b.png 400w,
               /vscode-cmake/run2_hua87ae9c2ff262c1bd9334f65408d52c2_53270_51d0b8047f56d8954d98888e1a03ec14.png 760w,
               /vscode-cmake/run2_hua87ae9c2ff262c1bd9334f65408d52c2_53270_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/run2_hua87ae9c2ff262c1bd9334f65408d52c2_53270_8782fbb70eef9231d034ed3435be5a6b.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;디버깅&#34;&gt;디버깅&lt;/h3&gt;
&lt;p&gt;다음 그림과 같이 진행하여 디버깅도 가능합니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    맨 처음 그림에서 보이는 바와 같이, CMake type을 Debug로 설정해야 함에 주의하세요!
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug1&#34; srcset=&#34;
               /vscode-cmake/debug1_hu164b5677826c8eacb553a5632840e7f1_67492_6e6ce9ac77aafe17495f6bb3738fcd6d.png 400w,
               /vscode-cmake/debug1_hu164b5677826c8eacb553a5632840e7f1_67492_8bd4fe75f72748f2f1abec2b49ee6738.png 760w,
               /vscode-cmake/debug1_hu164b5677826c8eacb553a5632840e7f1_67492_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/debug1_hu164b5677826c8eacb553a5632840e7f1_67492_6e6ce9ac77aafe17495f6bb3738fcd6d.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug2&#34; srcset=&#34;
               /vscode-cmake/debug2_hua21a153eb3eb6cbbd7dccc89fc1a0738_74148_90d69e79938c9aee1109b9116d6ec3ac.png 400w,
               /vscode-cmake/debug2_hua21a153eb3eb6cbbd7dccc89fc1a0738_74148_f9d287c1cb825e1f442a098e2e351024.png 760w,
               /vscode-cmake/debug2_hua21a153eb3eb6cbbd7dccc89fc1a0738_74148_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/debug2_hua21a153eb3eb6cbbd7dccc89fc1a0738_74148_90d69e79938c9aee1109b9116d6ec3ac.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug3&#34; srcset=&#34;
               /vscode-cmake/debug3_hu571b8c96d405a1ad6a1a679231de34ef_72722_5d1ce6d547d3b6774b361664d026fc88.png 400w,
               /vscode-cmake/debug3_hu571b8c96d405a1ad6a1a679231de34ef_72722_7a86a29cff6db9ce2bed4c66f0c4ae71.png 760w,
               /vscode-cmake/debug3_hu571b8c96d405a1ad6a1a679231de34ef_72722_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/debug3_hu571b8c96d405a1ad6a1a679231de34ef_72722_5d1ce6d547d3b6774b361664d026fc88.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug4&#34; srcset=&#34;
               /vscode-cmake/debug4_hu8260f189d847922232a10d48b8fb98d6_96886_19264063bdb622727eb8d20b9428bf23.png 400w,
               /vscode-cmake/debug4_hu8260f189d847922232a10d48b8fb98d6_96886_dc1e0e7796f2a56584f0e24fc089a09d.png 760w,
               /vscode-cmake/debug4_hu8260f189d847922232a10d48b8fb98d6_96886_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/debug4_hu8260f189d847922232a10d48b8fb98d6_96886_19264063bdb622727eb8d20b9428bf23.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug5&#34; srcset=&#34;
               /vscode-cmake/debug5_hu9bcbe7397ec7a3bd2daf2d3e9f7033fa_86537_4e8880b22573bb0628e8760e43c7d814.png 400w,
               /vscode-cmake/debug5_hu9bcbe7397ec7a3bd2daf2d3e9f7033fa_86537_48f79a1d99308f24c3c1818ab0a64c3b.png 760w,
               /vscode-cmake/debug5_hu9bcbe7397ec7a3bd2daf2d3e9f7033fa_86537_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/debug5_hu9bcbe7397ec7a3bd2daf2d3e9f7033fa_86537_4e8880b22573bb0628e8760e43c7d814.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;command-line-argument-설정&#34;&gt;Command line argument 설정&lt;/h3&gt;
&lt;p&gt;실행하거나 디버깅할 때, command line argument를 넘겨주도록 설정하고 싶을 때가 있습니다.&lt;/p&gt;
&lt;p&gt;이는 &lt;b&gt;.vscode/settings.json 파일을 생성&lt;/b&gt;해주고, 해당 파일에서 &lt;code&gt;cmake.debugConfig&lt;/code&gt;인자로서 입력해줘야 합니다.&lt;/p&gt;
&lt;h4 id=&#34;테스트-코드-수정&#34;&gt;테스트 코드 수정&lt;/h4&gt;
&lt;p&gt;그 전에 먼저 argument가 제대로 동작하는지 확인하기 위해 main.cpp 코드를 수정하겠습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#include &amp;lt;iostream&amp;gt;

int main(int argc, char**) {
    std::cout &amp;lt;&amp;lt; &amp;quot;Hello, world!\n&amp;quot;;
    std::cout &amp;lt;&amp;lt; &amp;quot;argc: &amp;quot; &amp;lt;&amp;lt; argc &amp;lt;&amp;lt; std::endl;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;이 상태로 그냥 실행해보면 다음과 같이 나타날 것입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;arg1&#34; srcset=&#34;
               /vscode-cmake/arg1_hu3a15c3b7e617d931524b050348937c2a_48397_34c28f2952277af9d574ae29d4482c71.png 400w,
               /vscode-cmake/arg1_hu3a15c3b7e617d931524b050348937c2a_48397_f4a8f7ec275524a9111222bf92809d79.png 760w,
               /vscode-cmake/arg1_hu3a15c3b7e617d931524b050348937c2a_48397_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/arg1_hu3a15c3b7e617d931524b050348937c2a_48397_34c28f2952277af9d574ae29d4482c71.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h4 id=&#34;settingsjson-설정-및-실행&#34;&gt;settings.json 설정 및 실행&lt;/h4&gt;
&lt;p&gt;이제 settings.json 파일을 만들어 보겠습니다. (이미 만들어져 있을 수도 있습니다만, 그대로 진행하시면 됩니다)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;다음 그림과 같이 File - Preferences - Settings를 클릭합니다. 단축키는 &lt;b&gt;[CTRL]+[,]&lt;/b&gt; 입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;arg2&#34; srcset=&#34;
               /vscode-cmake/arg2_huee035e19a4a82fd2afe280a473865c1e_95774_56b5c80af94e7c09a01234bd2dc3b9dc.png 400w,
               /vscode-cmake/arg2_huee035e19a4a82fd2afe280a473865c1e_95774_65c616437706abe59a2dbc43109e2633.png 760w,
               /vscode-cmake/arg2_huee035e19a4a82fd2afe280a473865c1e_95774_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/arg2_huee035e19a4a82fd2afe280a473865c1e_95774_56b5c80af94e7c09a01234bd2dc3b9dc.png&#34;
               width=&#34;760&#34;
               height=&#34;549&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;여기서 Workspace 탭을 클릭합니다. 이 프로젝트(workspace)에만 적용되는 설정항목이라는 뜻입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;arg3&#34; srcset=&#34;
               /vscode-cmake/arg3_hu27dcf0e43bc0a941f885a9e8bbb5dd1a_70248_89aded21624db7e599b13f64312ffbc8.png 400w,
               /vscode-cmake/arg3_hu27dcf0e43bc0a941f885a9e8bbb5dd1a_70248_13eb3447d52efcc9587d006f0fe4e81b.png 760w,
               /vscode-cmake/arg3_hu27dcf0e43bc0a941f885a9e8bbb5dd1a_70248_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/arg3_hu27dcf0e43bc0a941f885a9e8bbb5dd1a_70248_89aded21624db7e599b13f64312ffbc8.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;상단 검색창에 &lt;code&gt;cmake.debugConfig&lt;/code&gt;를 검색한 뒤, &lt;u&gt;Edit in settings.json&lt;/u&gt; 부분을 클릭합니다. &lt;code&gt;cmake.debug&lt;/code&gt; 정도만 입력하셔도 바로 뜰 것입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;arg4&#34; srcset=&#34;
               /vscode-cmake/arg4_hub35353a5b53ed0a09d9dc6a0af763b24_87426_76799a240fa2170b3a90649176dbadcb.png 400w,
               /vscode-cmake/arg4_hub35353a5b53ed0a09d9dc6a0af763b24_87426_748696740cce29f2715b14ab0cbbe055.png 760w,
               /vscode-cmake/arg4_hub35353a5b53ed0a09d9dc6a0af763b24_87426_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/arg4_hub35353a5b53ed0a09d9dc6a0af763b24_87426_76799a240fa2170b3a90649176dbadcb.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;클릭하시면 바로 다음과 같이 &lt;code&gt;.vscode/settings.json&lt;/code&gt; 폴더 및 파일이 생성되고, settings.json 파일이 열리며, 그 안에 다음 그림과 같은 내용이 자동으로 작성되어 있을 것입니다. (추가로 다른 내용이 더 쓰여있을 수도 있습니다.)&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;arg5&#34; srcset=&#34;
               /vscode-cmake/arg5_hu78284473b6cc163dc60de15408c7f415_67837_ccbdd3d38192395f02b0ca3a07701225.png 400w,
               /vscode-cmake/arg5_hu78284473b6cc163dc60de15408c7f415_67837_31882fb69a1599a520fda4d0b80951be.png 760w,
               /vscode-cmake/arg5_hu78284473b6cc163dc60de15408c7f415_67837_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/arg5_hu78284473b6cc163dc60de15408c7f415_67837_ccbdd3d38192395f02b0ca3a07701225.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;이제 이 안에 &lt;code&gt;args&lt;/code&gt; 항목을 만들어 command line argument를 설정합니다. 실행파일명 뒤에 이어질 추가적인 argument들만 적어주면 되며, 각 항목은 &amp;ldquo;&amp;quot;(double-quote)로 묶어주고 ,(comma)로 분리해주면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;arg6&#34; srcset=&#34;
               /vscode-cmake/arg6_hu0c67c12b1cda36a60f2a210f9ef8732f_56962_b6ae80161893bbf02e68257e051ba56f.png 400w,
               /vscode-cmake/arg6_hu0c67c12b1cda36a60f2a210f9ef8732f_56962_c9ff1596f853439e269c3e58da89d3ba.png 760w,
               /vscode-cmake/arg6_hu0c67c12b1cda36a60f2a210f9ef8732f_56962_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/arg6_hu0c67c12b1cda36a60f2a210f9ef8732f_56962_b6ae80161893bbf02e68257e051ba56f.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;이제 저장한 뒤, 실행이나 디버깅을 해보면 다음과 같이 command line argument가 잘 반영된 것을 확인할 수 있습니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;arg7&#34; srcset=&#34;
               /vscode-cmake/arg7_hu72e75db658e05d1b13d2f3cc7bc1f901_53536_a83fb439045a7589d4e825bdef5b78dc.png 400w,
               /vscode-cmake/arg7_hu72e75db658e05d1b13d2f3cc7bc1f901_53536_193e7f64d30ffcba4b84ba7d57d00d13.png 760w,
               /vscode-cmake/arg7_hu72e75db658e05d1b13d2f3cc7bc1f901_53536_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cmake/arg7_hu72e75db658e05d1b13d2f3cc7bc1f901_53536_a83fb439045a7589d4e825bdef5b78dc.png&#34;
               width=&#34;760&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://chocolatey.org/packages/cmake&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://chocolatey.org/packages/cmake&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://vector-of-bool.github.io/docs/vscode-cmake-tools/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://vector-of-bool.github.io/docs/vscode-cmake-tools/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://code.visualstudio.com/docs/getstarted/settings&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://code.visualstudio.com/docs/getstarted/settings&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Visual Studio Code에서 GCC/MinGW 기반 C, C&#43;&#43; 환경 설정하기</title>
      <link>https://evandde.github.io/vscode-cpp/</link>
      <pubDate>Thu, 12 Nov 2020 16:40:31 +0900</pubDate>
      <guid>https://evandde.github.io/vscode-cpp/</guid>
      <description>&lt;p&gt;VSCode에서 C 언어 및 C++ 언어를 사용하기 위해 실행/디버깅 등이 가능한 환경을 구축하는 방법에 대해 알아봅니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    여기서는 &lt;b&gt;VSCode 설치를 완료한 상태&lt;/b&gt;라고 가정합니다. VSCode 설치 및 기본 세팅은 &lt;a href=&#34;https://evandde.github.io/vscode/&#34;&gt;이 글&lt;/a&gt;을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;컴파일러디버거-설치&#34;&gt;컴파일러/디버거 설치&lt;/h2&gt;
&lt;p&gt;VSCode는 C 언어용 컴파일러나 디버거를 자체적으로 내장하고있지 않습니다. 때문에 C 언어를 VSCode에서 사용하려면, 컴파일러와 디버거를 직접 설치하고 이를 연동해주는 작업이 필요합니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    Extension을 설치한다고 해서 컴파일러나 디버거가 설치되는 것은 아닙니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;windows를-이용하는-경우&#34;&gt;Windows를 이용하는 경우&lt;/h3&gt;
&lt;p&gt;Windows는 기본적으로 C 언어용 컴파일러나 디버거를 제공하지 않습니다. 따라서, 우리가 직접 설치해주어야 합니다.&lt;/p&gt;
&lt;p&gt;이 글에서는 &lt;strong&gt;&lt;a href=&#34;http://www.mingw.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MinGW&lt;/a&gt;&lt;/strong&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;를 이용하도록 하겠습니다. MinGW는 chocolatey를 통해 쉽게 설치할 수 있습니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Chocolatey는 Windows용 패키지 관리자입니다. 아직 사용 방법을 모르신다면, &lt;a href=&#34;https://evandde.github.io/chocolatey/&#34;&gt;이 글&lt;/a&gt;을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;choco install mingw -y
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;&lt;b&gt; 2021년 6월 28일 수정&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;2021년 1월 12일에 chocolatey repo에 등록된 mingw-w64 10.2.0 버전에서 gdb.exe가 누락된 사항이 발견되었습니다.&lt;/p&gt;
&lt;p&gt;현 시점에서는 Chocolatey로 MinGW를 설치 시 다음과 같이 입력하여 이전 버전인 8.1.0 버전으로 설치하시기를 권장합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;choco install mingw -y --version=8.1.0
&lt;/code&gt;&lt;/pre&gt;

  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;mingw&#34; srcset=&#34;
               /vscode-cpp/mingw_hud2d42d6840e6382d3092f466b6f083f0_69601_4a0158719c3551a2d375ef1b2c35ad80.png 400w,
               /vscode-cpp/mingw_hud2d42d6840e6382d3092f466b6f083f0_69601_59651aa1a8ad4756dfd14517fcece68f.png 760w,
               /vscode-cpp/mingw_hud2d42d6840e6382d3092f466b6f083f0_69601_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/mingw_hud2d42d6840e6382d3092f466b6f083f0_69601_4a0158719c3551a2d375ef1b2c35ad80.png&#34;
               width=&#34;760&#34;
               height=&#34;483&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;다음 명령어를 통해 설치가 잘 되었는지 확인해보세요.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;gcc --version
gdb --version
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;Chocolatey 특성 상, 설치한 직후에는 &lt;code&gt;gcc&lt;/code&gt;, &lt;code&gt;gdb&lt;/code&gt; 명령어를 인식하지 못할 수 있습니다.&lt;/p&gt;
&lt;p&gt;PowerShell을 껐다 켜거나, &lt;code&gt;refreshenv&lt;/code&gt; 명령어를 활용하세요.&lt;/p&gt;

  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;gccgdb_version_windows&#34; srcset=&#34;
               /vscode-cpp/gccgdb_version_windows_hue37915aa608bae256dd62c3c3068b260_49032_83dff4d7e4d41ad76cb8eed09febf5a3.png 400w,
               /vscode-cpp/gccgdb_version_windows_hue37915aa608bae256dd62c3c3068b260_49032_42175046d4dad78409fa82d381a5d8ac.png 760w,
               /vscode-cpp/gccgdb_version_windows_hue37915aa608bae256dd62c3c3068b260_49032_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/gccgdb_version_windows_hue37915aa608bae256dd62c3c3068b260_49032_83dff4d7e4d41ad76cb8eed09febf5a3.png&#34;
               width=&#34;760&#34;
               height=&#34;437&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;linux를-이용하는-경우&#34;&gt;Linux를 이용하는 경우&lt;/h3&gt;
&lt;p&gt;대부분의 Linux 배포판은 gcc&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;와 gdb&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;를 기본적으로 제공합니다.&lt;/p&gt;
&lt;p&gt;터미널을 켜서 다음 명령어를 입력했을 때 버전 정보가 정상적으로 출력되면 설치되어 있는 것입니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gcc --version
gdb --version
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;gccgdb_version_linux&#34; srcset=&#34;
               /vscode-cpp/gccgdb_version_linux_hu31f77190b1307c8e73ffe9e2ec5e112c_23718_7755913bd0b1090e437853543509463f.png 400w,
               /vscode-cpp/gccgdb_version_linux_hu31f77190b1307c8e73ffe9e2ec5e112c_23718_4101639bc24c33d29948d3a304ae3381.png 760w,
               /vscode-cpp/gccgdb_version_linux_hu31f77190b1307c8e73ffe9e2ec5e112c_23718_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/gccgdb_version_linux_hu31f77190b1307c8e73ffe9e2ec5e112c_23718_7755913bd0b1090e437853543509463f.png&#34;
               width=&#34;707&#34;
               height=&#34;248&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;만약 설치가 되어있지 않다면, 패키지 관리자인 &lt;code&gt;apt&lt;/code&gt;나 &lt;code&gt;yum&lt;/code&gt;을 이용하여 설치하시기를 권장합니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;extension-설치&#34;&gt;Extension 설치&lt;/h2&gt;
&lt;p&gt;이제 VSCode에서 extension을 설치할 차례입니다.&lt;/p&gt;
&lt;p&gt;VSCode를 켜고 extension 탭으로 간 뒤 &amp;ldquo;&lt;strong&gt;c&lt;/strong&gt;&amp;ldquo;를 검색하세요. 맨 위에 C/C++ extension이 뜰 것입니다. Install 버튼을 눌러 설치합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;extension_c&#34; srcset=&#34;
               /vscode-cpp/extension_c_hu115aacab3740fa41f6835fd9d1b9086c_54413_6effe4ec295e401b02f8e8d25bd8cb0e.png 400w,
               /vscode-cpp/extension_c_hu115aacab3740fa41f6835fd9d1b9086c_54413_d7e0729455c36626dfc5123f0d498ede.png 760w,
               /vscode-cpp/extension_c_hu115aacab3740fa41f6835fd9d1b9086c_54413_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/extension_c_hu115aacab3740fa41f6835fd9d1b9086c_54413_6effe4ec295e401b02f8e8d25bd8cb0e.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;테스트&#34;&gt;테스트&lt;/h2&gt;
&lt;p&gt;이제 제대로 설치가 되었는지 확인할 시간입니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    경로에 &lt;strong&gt;한글&lt;/strong&gt;이 있으면 제대로 동작하지 않습니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;코드-작성&#34;&gt;코드 작성&lt;/h3&gt;
&lt;p&gt;Explorer 탭으로 이동하여 적당한 경로에 &lt;b&gt;main.cpp&lt;/b&gt;라는 새 파일을 만들어주고 다음과 같이 작성하도록 하겠습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#include &amp;lt;iostream&amp;gt;

int main(int argc, char **)
{
    std::cout &amp;lt;&amp;lt; &amp;quot;Hello, World!&amp;quot; &amp;lt;&amp;lt; std::endl;
    std::cout &amp;lt;&amp;lt; &amp;quot;argc: &amp;quot; &amp;lt;&amp;lt; argc &amp;lt;&amp;lt; std::endl;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;codewriting&#34; srcset=&#34;
               /vscode-cpp/codewriting_hu5265b2e32d201fa8dc1d8701db5e3ce3_68027_a5033151e66c2286b7236c5783188134.png 400w,
               /vscode-cpp/codewriting_hu5265b2e32d201fa8dc1d8701db5e3ce3_68027_0ab0e51abc4a2b55beedf2dbf77c7bad.png 760w,
               /vscode-cpp/codewriting_hu5265b2e32d201fa8dc1d8701db5e3ce3_68027_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/codewriting_hu5265b2e32d201fa8dc1d8701db5e3ce3_68027_a5033151e66c2286b7236c5783188134.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;실행&#34;&gt;실행&lt;/h3&gt;
&lt;p&gt;다음 그림과 같이 실행하시면 됩니다. 동일 폴더 내에 &lt;b&gt;.vscode&lt;/b&gt;라는 폴더가 생기고, 그 안에 컴파일 옵션에 관한 설정이 적힌 &lt;code&gt;.json&lt;/code&gt; 파일이 자동으로 생성될 것입니다.&lt;/p&gt;
&lt;p&gt;이후 아래쪽의 &lt;strong&gt;TERMINAL&lt;/strong&gt; 탭을 확인하시면, 우리가 작성한대로 두 줄이 화면에 출력되는 것을 확인할 수 있습니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;C++이 아닌 &lt;strong&gt;C 언어&lt;/strong&gt;로 작성하였다면, 세 번째 그림에서 g++.exe대신 &lt;b&gt;gcc.exe를 선택&lt;/b&gt;하시면 됩니다.&lt;/p&gt;
&lt;p&gt;아마 gcc.exe만 선택 가능하게끔 뜰 것입니다.&lt;/p&gt;

  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;run1&#34; srcset=&#34;
               /vscode-cpp/run1_hu52a9019c1184d2b9fd9aab9c9d8c95e4_58870_a4ec28ad4af3a5047c00231403a0e7e9.png 400w,
               /vscode-cpp/run1_hu52a9019c1184d2b9fd9aab9c9d8c95e4_58870_a5ad4c2e597002ee2ef1f7428efc0a80.png 760w,
               /vscode-cpp/run1_hu52a9019c1184d2b9fd9aab9c9d8c95e4_58870_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/run1_hu52a9019c1184d2b9fd9aab9c9d8c95e4_58870_a4ec28ad4af3a5047c00231403a0e7e9.png&#34;
               width=&#34;760&#34;
               height=&#34;569&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;run2&#34; srcset=&#34;
               /vscode-cpp/run2_hu14425b5936a3daeb9dc20b354bde779a_43119_51d7dca2fb20f88b543e62ce6c7bf337.png 400w,
               /vscode-cpp/run2_hu14425b5936a3daeb9dc20b354bde779a_43119_aba5919f52ebb7228451c1367ae30f85.png 760w,
               /vscode-cpp/run2_hu14425b5936a3daeb9dc20b354bde779a_43119_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/run2_hu14425b5936a3daeb9dc20b354bde779a_43119_51d7dca2fb20f88b543e62ce6c7bf337.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;run3&#34; srcset=&#34;
               /vscode-cpp/run3_hub8f211d0c8f8ef855494fea902468013_55193_222d1f1cfe70ebceb10d717aaff40b1e.png 400w,
               /vscode-cpp/run3_hub8f211d0c8f8ef855494fea902468013_55193_e28eb11faef440a2c60c8db33010d87a.png 760w,
               /vscode-cpp/run3_hub8f211d0c8f8ef855494fea902468013_55193_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/run3_hub8f211d0c8f8ef855494fea902468013_55193_222d1f1cfe70ebceb10d717aaff40b1e.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;run4&#34; srcset=&#34;
               /vscode-cpp/run4_hue8fd9039d89c9c975cf91efada4036df_114331_633eef85eeb6eaf9f80e8e81717854e7.png 400w,
               /vscode-cpp/run4_hue8fd9039d89c9c975cf91efada4036df_114331_82f36961dec929f382c26db5e7fb7b41.png 760w,
               /vscode-cpp/run4_hue8fd9039d89c9c975cf91efada4036df_114331_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/run4_hue8fd9039d89c9c975cf91efada4036df_114331_633eef85eeb6eaf9f80e8e81717854e7.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;실행을 하실 때, &lt;b&gt;main.cpp가 활성화된 상태에서 실행&lt;/b&gt;하세요.&lt;/p&gt;
&lt;p&gt;이 방법을 통해 자동으로 만들어진 launch.json 파일은 &lt;b&gt;&amp;ldquo;활성화된 파일의 이름.exe&amp;rdquo;&lt;/b&gt;를 실행합니다.&lt;/p&gt;
&lt;p&gt;예를들어 launch.json을 보면서 실행 버튼을 누르면, launch.exe를 찾아 실행하려고 하기 때문에 에러가 발생합니다.&lt;/p&gt;

  &lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;디버깅&#34;&gt;디버깅&lt;/h3&gt;
&lt;p&gt;다음 그림과 같이 진행하여 디버깅도 가능합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug1&#34; srcset=&#34;
               /vscode-cpp/debug1_huee9e2a433bb92ff56aea0e3873d5958d_74913_f8f6163795764a377baf486c395e79d5.png 400w,
               /vscode-cpp/debug1_huee9e2a433bb92ff56aea0e3873d5958d_74913_4a13082008f3fa5b3677afc6c55a95fb.png 760w,
               /vscode-cpp/debug1_huee9e2a433bb92ff56aea0e3873d5958d_74913_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/debug1_huee9e2a433bb92ff56aea0e3873d5958d_74913_f8f6163795764a377baf486c395e79d5.png&#34;
               width=&#34;760&#34;
               height=&#34;572&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug2&#34; srcset=&#34;
               /vscode-cpp/debug2_hua50440bfff40a6da8f2d0888a89a4c65_86088_8082201454e6d7adf8e0275a65760b4b.png 400w,
               /vscode-cpp/debug2_hua50440bfff40a6da8f2d0888a89a4c65_86088_6e19ee49020d9d703822d2f3e95a209a.png 760w,
               /vscode-cpp/debug2_hua50440bfff40a6da8f2d0888a89a4c65_86088_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/debug2_hua50440bfff40a6da8f2d0888a89a4c65_86088_8082201454e6d7adf8e0275a65760b4b.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug3&#34; srcset=&#34;
               /vscode-cpp/debug3_hu75ddfbdaf40c5f8341057da80ea90c3b_78867_7c673a3e3775560aebe55755d1d3cf4d.png 400w,
               /vscode-cpp/debug3_hu75ddfbdaf40c5f8341057da80ea90c3b_78867_3594c91c136da35faa9869353eb8f325.png 760w,
               /vscode-cpp/debug3_hu75ddfbdaf40c5f8341057da80ea90c3b_78867_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/debug3_hu75ddfbdaf40c5f8341057da80ea90c3b_78867_7c673a3e3775560aebe55755d1d3cf4d.png&#34;
               width=&#34;760&#34;
               height=&#34;572&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug4&#34; srcset=&#34;
               /vscode-cpp/debug4_huee020204c52e58149d7df10f808c06f2_80913_194ef73fe7ad9214105c6e61f9f5d468.png 400w,
               /vscode-cpp/debug4_huee020204c52e58149d7df10f808c06f2_80913_cbd4f38336d2b2e47632a78886e9598a.png 760w,
               /vscode-cpp/debug4_huee020204c52e58149d7df10f808c06f2_80913_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/debug4_huee020204c52e58149d7df10f808c06f2_80913_194ef73fe7ad9214105c6e61f9f5d468.png&#34;
               width=&#34;760&#34;
               height=&#34;569&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;debug5&#34; srcset=&#34;
               /vscode-cpp/debug5_hu212bbef05a0c2737d6ce7389bf4327f6_62005_0c4b81f052bd1dc318e5282dee7396c9.png 400w,
               /vscode-cpp/debug5_hu212bbef05a0c2737d6ce7389bf4327f6_62005_cdc4d9c7e3ede44e1c23f05e3b37d6a9.png 760w,
               /vscode-cpp/debug5_hu212bbef05a0c2737d6ce7389bf4327f6_62005_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/debug5_hu212bbef05a0c2737d6ce7389bf4327f6_62005_0c4b81f052bd1dc318e5282dee7396c9.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;command-line-argument-설정&#34;&gt;Command line argument 설정&lt;/h3&gt;
&lt;p&gt;실행하거나 디버깅할 때, command line argument를 넘겨주도록 설정하고 싶을 때가 있습니다.&lt;/p&gt;
&lt;p&gt;이 부분은 아까 자동으로 만들어졌던 &lt;b&gt;launch.json&lt;/b&gt; 파일의 &lt;b&gt;args 값&lt;/b&gt;을 통해 설정합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;args1&#34; srcset=&#34;
               /vscode-cpp/args1_hu7f277c1f4935011f99e87d9e4a095153_86943_f1f0c25542760007db66132373fa41b6.png 400w,
               /vscode-cpp/args1_hu7f277c1f4935011f99e87d9e4a095153_86943_2b113fd69436ef12692e5f62acd18104.png 760w,
               /vscode-cpp/args1_hu7f277c1f4935011f99e87d9e4a095153_86943_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/args1_hu7f277c1f4935011f99e87d9e4a095153_86943_f1f0c25542760007db66132373fa41b6.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;args2&#34; srcset=&#34;
               /vscode-cpp/args2_hu5bc6b5ad26b7135c3411762cb190937b_93732_eda1308cdefe5b26629a2a19b79695d8.png 400w,
               /vscode-cpp/args2_hu5bc6b5ad26b7135c3411762cb190937b_93732_6afbd584d11344d7fe3b77dbf5529628.png 760w,
               /vscode-cpp/args2_hu5bc6b5ad26b7135c3411762cb190937b_93732_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/args2_hu5bc6b5ad26b7135c3411762cb190937b_93732_eda1308cdefe5b26629a2a19b79695d8.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;args3&#34; srcset=&#34;
               /vscode-cpp/args3_hub793b610b49b9b0002b9d7beb42a089a_69712_c5b24194fba8437dff5c4831ccfdb6b7.png 400w,
               /vscode-cpp/args3_hub793b610b49b9b0002b9d7beb42a089a_69712_df436a76155a523c2f7747a29b3176af.png 760w,
               /vscode-cpp/args3_hub793b610b49b9b0002b9d7beb42a089a_69712_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/args3_hub793b610b49b9b0002b9d7beb42a089a_69712_c5b24194fba8437dff5c4831ccfdb6b7.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;args4&#34; srcset=&#34;
               /vscode-cpp/args4_hu7ee3fb4b707b5e5725bd0a8797709d8f_65884_992be4acd52b0aa4d47f949a2f1dfc20.png 400w,
               /vscode-cpp/args4_hu7ee3fb4b707b5e5725bd0a8797709d8f_65884_6a30e4380661d5d3180d92bc0238f396.png 760w,
               /vscode-cpp/args4_hu7ee3fb4b707b5e5725bd0a8797709d8f_65884_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode-cpp/args4_hu7ee3fb4b707b5e5725bd0a8797709d8f_65884_992be4acd52b0aa4d47f949a2f1dfc20.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Minimalist GNU for Windows. 마이크로소프트 Windows로 포팅한 GNU 소프트웨어 도구 모음&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;GNU Compiler Collection. 혹은 그 중 하나인 GNU C Compiler. C 언어 컴파일러의 일종.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;GNU Debugger. C 언어 디버거의 일종.&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;</description>
    </item>
    
    <item>
      <title>Visual Studio Code 소개, 설치, 기본 세팅</title>
      <link>https://evandde.github.io/vscode/</link>
      <pubDate>Thu, 12 Nov 2020 11:22:31 +0900</pubDate>
      <guid>https://evandde.github.io/vscode/</guid>
      <description>&lt;p&gt;요즘 개발자 사이에서 인기있는 코딩 툴. &lt;strong&gt;Visual Studio Code&lt;/strong&gt;에 대해 살펴보고, 설치 및 기본 세팅 방법까지 알아봅니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;vscode_logo&#34; srcset=&#34;
               /vscode/vscode_logo_hub58b0ad656b469a04cb691e21fc092d7_17189_e0226bcd87c6518e4ecfddf5de21624b.png 400w,
               /vscode/vscode_logo_hub58b0ad656b469a04cb691e21fc092d7_17189_1c0117b9250d6b39bd8ed26e7996540b.png 760w,
               /vscode/vscode_logo_hub58b0ad656b469a04cb691e21fc092d7_17189_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode/vscode_logo_hub58b0ad656b469a04cb691e21fc092d7_17189_e0226bcd87c6518e4ecfddf5de21624b.png&#34;
               width=&#34;760&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;tldr&#34;&gt;TL;DR&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;공식 홈페이지: &lt;a href=&#34;https://code.visualstudio.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://code.visualstudio.com/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GitHub: &lt;a href=&#34;https://github.com/Microsoft/vscode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/Microsoft/vscode&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다운로드: &lt;a href=&#34;https://code.visualstudio.com/download&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://code.visualstudio.com/download&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Windows의 경우 chocolatey를 통해서도 설치 가능&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;choco install vscode -y
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;설치는 그냥 &lt;strong&gt;다음&lt;/strong&gt;버튼만 눌러서 진행해도 괜찮음&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[CTRL]+[SHIFT]+[X] 누르면 Extension 탭이 열림. 원하는 extension을 설치하여 이용.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;모든 extension 보기(Marketplace): &lt;a href=&#34;https://marketplace.visualstudio.com/vscode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://marketplace.visualstudio.com/vscode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    VSCode는 컴파일러, 디버거 등을 내장하고 있지 않습니다. 사용하는 언어에 맞추어 따로 설치하고 연동하는 방식으로 사용하셔야 합니다. 이에 관한 자세한 내용은 본 블로그의 &lt;a href=&#34;https://evandde.github.io/categories/vscode/&#34;&gt;VSCode 카테고리&lt;/a&gt; 글을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;visual-studio-code-소개&#34;&gt;Visual Studio Code 소개&lt;/h2&gt;
&lt;p&gt;Visual Studio Code는 &lt;strong&gt;마이크로소프트&lt;/strong&gt;에서 개발하여 2016년에 출시한 &lt;del&gt;고급 메모장&lt;/del&gt;&lt;strong&gt;IDE&lt;/strong&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;입니다. 줄여서 &lt;strong&gt;VSCode&lt;/strong&gt; 혹은 &lt;strong&gt;VSC&lt;/strong&gt;라고도 부릅니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://code.visualstudio.com/docs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;원문&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Getting started&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio Code는 가벼우면서도 강력한 소스 코드 편집기로, Windows, macOS, Linux에서 모두 사용 가능합니다. VSCode는 기본적으로 JavaScript, TypeScript, Node.js를 지원하며, 다양한 확장(extension)을 통해 다른 언어(C, C++, C#, Java, Python, PHP, Go 등)나 런타임(.NET, Unity 등)을 지원하도록 설정할 수 있습니다. 이 &lt;a href=&#34;https://code.visualstudio.com/docs/getstarted/introvideos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;소개영상&lt;/a&gt;(영어)을 통해 VSCode로의 여행을 시작해보세요.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;저는 이전에 Visual Studio, PyCharm, Eclipse, QtCreator, Vim+Plugin 등의 IDE를 사용해보았습니다만, 올 초 즈음부터 VSCode로 정착했습니다. 그 이유는 다음과 같습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;가볍다.&lt;/li&gt;
&lt;li&gt;무료다.&lt;/li&gt;
&lt;li&gt;Windows와 Linux에서 모두 사용 가능하다.&lt;/li&gt;
&lt;li&gt;WSL과 같은 원격 환경에서의 개발을 지원한다.&lt;/li&gt;
&lt;li&gt;내가 사용하는 여러 종류의 프로그래밍 언어를 하나의 IDE로 관리할 수 있다. (C++, Python, Go, Markdown, HTML, CSS, JavaScript)&lt;/li&gt;
&lt;li&gt;설정해놓은 환경이 동기화되어, 여러 대의 컴퓨터를 사용해도 동일한 환경에서 작업할 수 있다.&lt;/li&gt;
&lt;li&gt;&lt;del&gt;뭔가 프로그래밍 고수가 된 것 같은 착각이 든다&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;vscode-설치하기&#34;&gt;VSCode 설치하기&lt;/h2&gt;
&lt;p&gt;다음 방법 중 편한 방법을 선택하여 진행하시면 됩니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;공식 홈페이지에서 설치 프로그램을 다운받아 설치&lt;/li&gt;
&lt;li&gt;Chocolatey 프로그램을 통해 설치(Windows에서만 가능)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;설치-프로그램-다운받아-설치&#34;&gt;설치 프로그램 다운받아 설치&lt;/h3&gt;
&lt;h4 id=&#34;설치파일-다운로드&#34;&gt;설치파일 다운로드&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;공식 홈페이지&lt;/a&gt; 첫화면에 있는 다운로드 버튼을 누르면 설치 프로그램이 다운로드 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;mainpage_download&#34; srcset=&#34;
               /vscode/mainpage_download_hufc464033e495f88261d6484504eb9237_371107_b9cb34c2f83e07af7eabd65c08e0d5e2.png 400w,
               /vscode/mainpage_download_hufc464033e495f88261d6484504eb9237_371107_d7547492aba88799ef40d20c0cc49ce8.png 760w,
               /vscode/mainpage_download_hufc464033e495f88261d6484504eb9237_371107_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode/mainpage_download_hufc464033e495f88261d6484504eb9237_371107_b9cb34c2f83e07af7eabd65c08e0d5e2.png&#34;
               width=&#34;732&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;혹은, &lt;a href=&#34;https://code.visualstudio.com/download&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;다운로드 페이지&lt;/a&gt;를 이용하셔도 좋습니다.&lt;/p&gt;
&lt;h4 id=&#34;설치파일-실행&#34;&gt;설치파일 실행&lt;/h4&gt;
&lt;p&gt;User installer를 받으셨거나, 공식 홈페이지 첫화면에서 다운로드 받으신 경우에는, 설치 프로그램을 실행시키면 다음과 같은 경고가 뜰 수 있습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;이 설치파일은 관리자 권한으로 실행되지 않습니다. 시스템을 이용하는 모든 사용자가 VSCode를 쓰고자 한다면, System Installer를 다운받아 설치하세요. 그냥 진행해도 괜찮습니까?&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;install_warning&#34; srcset=&#34;
               /vscode/install_warning_hu48d02a51faed26f6ada0cf7f7622eea8_6129_a3377eb22fdf35f25d3fdf4ca0d9717c.png 400w,
               /vscode/install_warning_hu48d02a51faed26f6ada0cf7f7622eea8_6129_43ec44130e4f67adc7cb207716e8b696.png 760w,
               /vscode/install_warning_hu48d02a51faed26f6ada0cf7f7622eea8_6129_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode/install_warning_hu48d02a51faed26f6ada0cf7f7622eea8_6129_a3377eb22fdf35f25d3fdf4ca0d9717c.png&#34;
               width=&#34;413&#34;
               height=&#34;185&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;일반적인 개인사용자 분들은 그냥 확인을 눌러 진행&lt;/strong&gt;하시면 됩니다. 여러개의 Windows 계정이 존재하고 이 모든 계정에서 사용하게끔 하고 싶으신 분들의 경우에는, System Installer를 다운받아서 설치를 진행하시기 바랍니다.&lt;/p&gt;
&lt;p&gt;그 이후에는 경로 설정 등의 내용이므로 특별한 이유가 없다면 그냥 &lt;strong&gt;다음&lt;/strong&gt;버튼만 눌러주시면 됩니다.&lt;/p&gt;
&lt;h3 id=&#34;chocolatey를-통해-설치windows&#34;&gt;Chocolatey를 통해 설치(Windows)&lt;/h3&gt;
&lt;p&gt;Chocolatey를 이용하신다면, 다음 명령어를 통해 간단하게 설치하실 수 있습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;choco install vscode -y
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;install_choco&#34; srcset=&#34;
               /vscode/install_choco_hu00848fd8df6252c4dbc7ff29e5fcba54_71153_0bb805bbd30908215e1000aefcb210cb.png 400w,
               /vscode/install_choco_hu00848fd8df6252c4dbc7ff29e5fcba54_71153_6a4ba4498c282f06239b7fce97ac54fc.png 760w,
               /vscode/install_choco_hu00848fd8df6252c4dbc7ff29e5fcba54_71153_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode/install_choco_hu00848fd8df6252c4dbc7ff29e5fcba54_71153_0bb805bbd30908215e1000aefcb210cb.png&#34;
               width=&#34;760&#34;
               height=&#34;477&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Chocolatey를 설치하고 이용하는 방법이 궁금하다면, &lt;a href=&#34;https://evandde.github.io/chocolatey/&#34;&gt;이 글&lt;/a&gt;을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;첫-화면-살펴보기&#34;&gt;첫 화면 살펴보기&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;vscode_fisrtview&#34; srcset=&#34;
               /vscode/vscode_fisrtview_hu98a461d620bb1c97124d8eca02f3ea0f_240766_7c2a00c7e62ad95a401192d9b77b7cf1.png 400w,
               /vscode/vscode_fisrtview_hu98a461d620bb1c97124d8eca02f3ea0f_240766_2f794fb88904ea371d26e0394ae87511.png 760w,
               /vscode/vscode_fisrtview_hu98a461d620bb1c97124d8eca02f3ea0f_240766_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode/vscode_fisrtview_hu98a461d620bb1c97124d8eca02f3ea0f_240766_7c2a00c7e62ad95a401192d9b77b7cf1.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;extension-살펴보기&#34;&gt;Extension 살펴보기&lt;/h2&gt;
&lt;p&gt;VSCode에는 정말 다양한 extension이 존재하며, 계속 개발되고 있습니다.&lt;/p&gt;
&lt;p&gt;현재 제공하는 모든 extension은 &lt;a href=&#34;https://marketplace.visualstudio.com/vscode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;marketplace 페이지&lt;/a&gt;에서 살펴볼 수 있습니다.&lt;/p&gt;
&lt;p&gt;이 글에서는 우선 간단하게 언어 설정이나 테마 설정과 같은 기본적인 extension을 살펴보겠습니다.&lt;/p&gt;
&lt;h3 id=&#34;language-pack-extension&#34;&gt;Language pack extension&lt;/h3&gt;
&lt;p&gt;VSCode는 영어뿐만 아니라, &lt;strong&gt;한국어&lt;/strong&gt;를 비롯하여, 중국어, 일본어, 스페인어, 러시아어, 독일어,&amp;hellip; 등 다양한 언어를 지원합니다. Microsoft에서 직접 제공하는 언어 팩이죠.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;strong&gt;Language pack&lt;/strong&gt;으로 검색하시면 다양한 언어 팩을 확인할 수 있습니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;한국어 팩을 설치하시려면, &lt;strong&gt;korean을 검색&lt;/strong&gt;하여 나오는 &lt;strong&gt;Korean Language Pack for Visual Studio Code&lt;/strong&gt;를 설치하면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;kopack&#34; srcset=&#34;
               /vscode/kopack_hua27a478d535d002cf8cb6de84ac364c9_87533_63bc2a2475a67d9c48cb297cbf074208.png 400w,
               /vscode/kopack_hua27a478d535d002cf8cb6de84ac364c9_87533_72e1323c580a8c7e891fb2e601852b31.png 760w,
               /vscode/kopack_hua27a478d535d002cf8cb6de84ac364c9_87533_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode/kopack_hua27a478d535d002cf8cb6de84ac364c9_87533_63bc2a2475a67d9c48cb297cbf074208.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;설치는 금방 끝납니다.&lt;/p&gt;
&lt;p&gt;오른쪽 아래에 &lt;strong&gt;Restart Now 버튼&lt;/strong&gt;이 나타나면, 눌러서 VSCode를 재시작하시기 바랍니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;kopack_restart&#34; srcset=&#34;
               /vscode/kopack_restart_hu16760a2b6cd9e5a92a05d802200e203a_8225_261c847b493d023035963d17185aec77.png 400w,
               /vscode/kopack_restart_hu16760a2b6cd9e5a92a05d802200e203a_8225_eb5b8739adae1fca9bd69f761b5ebf8a.png 760w,
               /vscode/kopack_restart_hu16760a2b6cd9e5a92a05d802200e203a_8225_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode/kopack_restart_hu16760a2b6cd9e5a92a05d802200e203a_8225_261c847b493d023035963d17185aec77.png&#34;
               width=&#34;503&#34;
               height=&#34;195&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;(개인적으로는 에러 검색 등의 용이성 때문에, 그냥 영어모드로 이용하고 있습니다)&lt;/p&gt;
&lt;h3 id=&#34;themeicon-extension&#34;&gt;Theme/icon extension&lt;/h3&gt;
&lt;p&gt;Marketplace에 보면 테마나 아이콘도 정말 다양하게 있습니다. 다음 그림과 같이 필터를 &lt;strong&gt;Themes 카테고리&lt;/strong&gt;로 설정하시면, 테마/아이콘에 관련된 extension들을 살펴볼 수 있습니다.&lt;/p&gt;
&lt;p&gt;테마/아이콘 변경은 왼쪽 아래의 설정아이콘을 통해 가능합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;theme&#34; srcset=&#34;
               /vscode/theme_huf34cb39c24e079bb9844e8100caef5f8_66743_0e5912b658176b4b21ab1ba9e2db7d1c.png 400w,
               /vscode/theme_huf34cb39c24e079bb9844e8100caef5f8_66743_3f92e44f7ad57b5bdb5e6cdb6c9f8c4c.png 760w,
               /vscode/theme_huf34cb39c24e079bb9844e8100caef5f8_66743_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode/theme_huf34cb39c24e079bb9844e8100caef5f8_66743_0e5912b658176b4b21ab1ba9e2db7d1c.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;theme_change&#34; srcset=&#34;
               /vscode/theme_change_hu52c14d4ac40959c65407d8137fc30c37_190741_f54be95f58cf14e1f88c796770fc4ec0.png 400w,
               /vscode/theme_change_hu52c14d4ac40959c65407d8137fc30c37_190741_2455ab8c80980b167a9c5ffc904a20bd.png 760w,
               /vscode/theme_change_hu52c14d4ac40959c65407d8137fc30c37_190741_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode/theme_change_hu52c14d4ac40959c65407d8137fc30c37_190741_f54be95f58cf14e1f88c796770fc4ec0.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;extension설정-동기화하기&#34;&gt;Extension/설정 동기화하기&lt;/h2&gt;
&lt;p&gt;VSCode는 설치한 Extension목록, 설정값 등을 다른 컴퓨터에서도 동기화하여 동일하게 사용할 수 있도록, &lt;strong&gt;Sync 기능을 제공&lt;/strong&gt;합니다.&lt;/p&gt;
&lt;p&gt;동기화를 위해서는 &lt;strong&gt;Microsoft 계정, GitHub 계정 둘 중 하나가 필요&lt;/strong&gt;합니다.&lt;/p&gt;
&lt;h3 id=&#34;sync-켜기&#34;&gt;Sync 켜기&lt;/h3&gt;
&lt;p&gt;왼쪽 아래의 &lt;strong&gt;계정 아이콘&lt;/strong&gt;을 클릭하여 Sync 기능을 활성화할 수 있습니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;sync&#34; srcset=&#34;
               /vscode/sync_hub4123ab2c6c6b674280e527321382fae_35519_73d0e13e6e4d18c2cd576906c187765e.png 400w,
               /vscode/sync_hub4123ab2c6c6b674280e527321382fae_35519_aa3dcb5ed722b38704913f62c90723cf.png 760w,
               /vscode/sync_hub4123ab2c6c6b674280e527321382fae_35519_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode/sync_hub4123ab2c6c6b674280e527321382fae_35519_73d0e13e6e4d18c2cd576906c187765e.png&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;작성일(2020년 11월) 기준, 다음과 같은 경고가 뜨네요.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;동기화 기능은 아직 준비단계입니다. 사용하기 전에 관련 문서를 읽어보세요.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;sync_warning&#34; srcset=&#34;
               /vscode/sync_warning_hu0906452124b75270b823b99e9d105aa8_5079_31b6a5e8acd197c320da3d746e033e07.png 400w,
               /vscode/sync_warning_hu0906452124b75270b823b99e9d105aa8_5079_72d5e19132c746702a6b2760101c4001.png 760w,
               /vscode/sync_warning_hu0906452124b75270b823b99e9d105aa8_5079_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode/sync_warning_hu0906452124b75270b823b99e9d105aa8_5079_31b6a5e8acd197c320da3d746e033e07.png&#34;
               width=&#34;558&#34;
               height=&#34;128&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;del&gt;아무도 안읽어보시겠죠&lt;/del&gt; &lt;strong&gt;Turn On&lt;/strong&gt;을 눌러 넘어갑니다.&lt;/p&gt;
&lt;p&gt;그러면 창 위에 다음 그림과 같이 동기화할 항목을 선택하는 내용과 함께 &lt;strong&gt;Sign in &amp;amp; Turn On&lt;/strong&gt; 버튼이 뜹니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;sync1&#34; srcset=&#34;
               /vscode/sync1_hu09ced26c7c6b9e428a9ae1ae4be158e3_13083_89fc7dcfe05569d86ea108d39fa1238d.png 400w,
               /vscode/sync1_hu09ced26c7c6b9e428a9ae1ae4be158e3_13083_46180ed2c9fbb95e1dc09ee0fcce697c.png 760w,
               /vscode/sync1_hu09ced26c7c6b9e428a9ae1ae4be158e3_13083_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode/sync1_hu09ced26c7c6b9e428a9ae1ae4be158e3_13083_89fc7dcfe05569d86ea108d39fa1238d.png&#34;
               width=&#34;652&#34;
               height=&#34;233&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sign in &amp;amp; Turn On&lt;/strong&gt; 버튼을 누르면, 계정 종류를 선택하는 항목이 뜹니다. 여기서 &lt;strong&gt;Microsoft로 로그인&lt;/strong&gt;이나 &lt;strong&gt;GitHub으로 로그인&lt;/strong&gt; 중 편하신 쪽으로 선택하시면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;sync2&#34; srcset=&#34;
               /vscode/sync2_hu0b968b7f7bc51aec80fc133399e9f3d2_7037_be493f4a2dc1bb6735fce6687bb7a3a4.png 400w,
               /vscode/sync2_hu0b968b7f7bc51aec80fc133399e9f3d2_7037_7a32e15688ad06d8557c092a5eb4d73a.png 760w,
               /vscode/sync2_hu0b968b7f7bc51aec80fc133399e9f3d2_7037_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/vscode/sync2_hu0b968b7f7bc51aec80fc133399e9f3d2_7037_be493f4a2dc1bb6735fce6687bb7a3a4.png&#34;
               width=&#34;642&#34;
               height=&#34;165&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;GitHub 계정으로 로그인하시는 경우에는, GitHub과 VSCode 연동을 승인하는 페이지가 뜹니다.&lt;/p&gt;
&lt;p&gt;다음과 같은 경고창이 뜨면 &lt;strong&gt;Open&lt;/strong&gt;을 눌러 진행하시면 됩니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;sync_github.png&#34; alt=&#34;sync_github&#34;&gt;&lt;/p&gt;

  &lt;/div&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://code.visualstudio.com/&lt;/a&gt;&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;통합 개발 환경(Integrated Development Environment). 프로젝트 관리, 소스코드 편집, 컴파일, 디버그, 바이너리 배포 등, 개발에 필요한 여러 기능을 한데 묶어놓은 프로그램.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;</description>
    </item>
    
    <item>
      <title>Windows 10 타임라인에서 활동 기록 뜨지 않게 하는 법</title>
      <link>https://evandde.github.io/remove-activity-history/</link>
      <pubDate>Thu, 12 Nov 2020 11:01:34 +0900</pubDate>
      <guid>https://evandde.github.io/remove-activity-history/</guid>
      <description>&lt;p&gt;이 글에서는 [WIN]+[TAB]키를 눌러 데스크톱 목록을 볼 때, 아래쪽에 타임라인이라는 이름으로 나타나는 활동 기록이 뜨지 않도록 없애는 방법을 알아보고자 합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;activityhistory&#34; srcset=&#34;
               /remove-activity-history/activityhistory_hu6c7127ef64e11e0d4b33d7b3e5e0516d_2721993_c314d44e5852df194c69b604dbfcd204.png 400w,
               /remove-activity-history/activityhistory_hu6c7127ef64e11e0d4b33d7b3e5e0516d_2721993_2c54c1d5682725df4e4594b7b0a6084b.png 760w,
               /remove-activity-history/activityhistory_hu6c7127ef64e11e0d4b33d7b3e5e0516d_2721993_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/remove-activity-history/activityhistory_hu6c7127ef64e11e0d4b33d7b3e5e0516d_2721993_c314d44e5852df194c69b604dbfcd204.png&#34;
               width=&#34;760&#34;
               height=&#34;409&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;해결방법&#34;&gt;해결방법&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;[WIN]+[I]를 눌러, &lt;strong&gt;Windows 설정&lt;/strong&gt; 창을 엽니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;step1&#34; srcset=&#34;
               /remove-activity-history/step1_hubc09b5e5b45ebe0e6367e06cbbd22f6e_27288_cb2f46f5173535b507a310fa985ff4f5.png 400w,
               /remove-activity-history/step1_hubc09b5e5b45ebe0e6367e06cbbd22f6e_27288_315ecf754dde28affb86577282b8c074.png 760w,
               /remove-activity-history/step1_hubc09b5e5b45ebe0e6367e06cbbd22f6e_27288_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/remove-activity-history/step1_hubc09b5e5b45ebe0e6367e06cbbd22f6e_27288_cb2f46f5173535b507a310fa985ff4f5.png&#34;
               width=&#34;760&#34;
               height=&#34;588&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;개인 정보&lt;/strong&gt;에 들어갑니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;step2&#34; srcset=&#34;
               /remove-activity-history/step2_hu39f9253d5e399196892cfb0d4c4fe6f2_37305_2764535d3419154d58366deb5f30a2c0.png 400w,
               /remove-activity-history/step2_hu39f9253d5e399196892cfb0d4c4fe6f2_37305_e7abea642bdcca27c623e7c4f9f25133.png 760w,
               /remove-activity-history/step2_hu39f9253d5e399196892cfb0d4c4fe6f2_37305_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/remove-activity-history/step2_hu39f9253d5e399196892cfb0d4c4fe6f2_37305_2764535d3419154d58366deb5f30a2c0.png&#34;
               width=&#34;760&#34;
               height=&#34;588&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;왼쪽 탭 중 &lt;strong&gt;활동 기록&lt;/strong&gt;에 들어갑니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;step3&#34; srcset=&#34;
               /remove-activity-history/step3_hu563d7cd15cc199e04254788b975c776d_161109_f56ef915b27969d946a23fd405940744.png 400w,
               /remove-activity-history/step3_hu563d7cd15cc199e04254788b975c776d_161109_ee121892e8350510128e693e11c63994.png 760w,
               /remove-activity-history/step3_hu563d7cd15cc199e04254788b975c776d_161109_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/remove-activity-history/step3_hu563d7cd15cc199e04254788b975c776d_161109_f56ef915b27969d946a23fd405940744.png&#34;
               width=&#34;760&#34;
               height=&#34;588&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;다음 계정의 활동 표시&lt;/strong&gt; 부분에서 계정 옆의 스위치를 클릭하여 끔으로 바꾸어주고, 원한다면 밑의 &lt;strong&gt;활동 기록 지우기&lt;/strong&gt;에서 지우기 버튼을 클릭합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;step4&#34; srcset=&#34;
               /remove-activity-history/step4_huf4e908e2d27d66e02f15f37bd2f8ca6d_209717_7942ed98d7cd3df8b69acaca3682d1ab.png 400w,
               /remove-activity-history/step4_huf4e908e2d27d66e02f15f37bd2f8ca6d_209717_6022f708b51c20c545fe3a6642b8b35e.png 760w,
               /remove-activity-history/step4_huf4e908e2d27d66e02f15f37bd2f8ca6d_209717_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/remove-activity-history/step4_huf4e908e2d27d66e02f15f37bd2f8ca6d_209717_7942ed98d7cd3df8b69acaca3682d1ab.png&#34;
               width=&#34;760&#34;
               height=&#34;712&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;끝입니다! 설정사항은 따로 확인버튼 없이 자동으로 저장되니 그냥 창을 끄셔도 됩니다!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>작업표시줄, 시작메뉴에서 최근 항목 뜨지 않게 하는 법</title>
      <link>https://evandde.github.io/remove-recent-items/</link>
      <pubDate>Thu, 12 Nov 2020 09:54:54 +0900</pubDate>
      <guid>https://evandde.github.io/remove-recent-items/</guid>
      <description>&lt;p&gt;작업표시줄에서 아이콘을 우클릭할 때 뜨는 팝업이나, 시작메뉴의 점프목록 등에서 나타나는 &lt;strong&gt;최근 항목&lt;/strong&gt;에 대한 기록을 없애는 방법에 대해 알아봅니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;recentitems&#34; srcset=&#34;
               /remove-recent-items/recentitems_hu62069d273f59eafcb533d1489183463b_155059_b82a2f9c61902689ac0b929c5288ad40.png 400w,
               /remove-recent-items/recentitems_hu62069d273f59eafcb533d1489183463b_155059_ad3fae7cf078d451475d19984979f417.png 760w,
               /remove-recent-items/recentitems_hu62069d273f59eafcb533d1489183463b_155059_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/remove-recent-items/recentitems_hu62069d273f59eafcb533d1489183463b_155059_b82a2f9c61902689ac0b929c5288ad40.png&#34;
               width=&#34;459&#34;
               height=&#34;300&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;해결방법&#34;&gt;해결방법&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;[WIN]+[I]를 눌러, &lt;strong&gt;Windows 설정&lt;/strong&gt; 창을 엽니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;step1&#34; srcset=&#34;
               /remove-recent-items/step1_hubc09b5e5b45ebe0e6367e06cbbd22f6e_27288_cb2f46f5173535b507a310fa985ff4f5.png 400w,
               /remove-recent-items/step1_hubc09b5e5b45ebe0e6367e06cbbd22f6e_27288_315ecf754dde28affb86577282b8c074.png 760w,
               /remove-recent-items/step1_hubc09b5e5b45ebe0e6367e06cbbd22f6e_27288_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/remove-recent-items/step1_hubc09b5e5b45ebe0e6367e06cbbd22f6e_27288_cb2f46f5173535b507a310fa985ff4f5.png&#34;
               width=&#34;760&#34;
               height=&#34;588&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;개인 설정&lt;/strong&gt;에 들어갑니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;step2&#34; srcset=&#34;
               /remove-recent-items/step2_hu1021b5179eb911b503dfe42d0d60102f_36812_4d4df3ae42c0fa02ba9d4746e83fe18c.png 400w,
               /remove-recent-items/step2_hu1021b5179eb911b503dfe42d0d60102f_36812_0295068b196412ce481e1fc96471d96e.png 760w,
               /remove-recent-items/step2_hu1021b5179eb911b503dfe42d0d60102f_36812_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/remove-recent-items/step2_hu1021b5179eb911b503dfe42d0d60102f_36812_4d4df3ae42c0fa02ba9d4746e83fe18c.png&#34;
               width=&#34;760&#34;
               height=&#34;588&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;왼쪽 탭 중 &lt;strong&gt;시작 탭&lt;/strong&gt;에 들어갑니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;step3&#34; srcset=&#34;
               /remove-recent-items/step3_hu6f0cb14a1812bfaec7b84bbba2423e52_344721_ef50967df28671ec2b5877a6a2f77b91.png 400w,
               /remove-recent-items/step3_hu6f0cb14a1812bfaec7b84bbba2423e52_344721_a0f1fdb646de4d992a3d60537c568ac8.png 760w,
               /remove-recent-items/step3_hu6f0cb14a1812bfaec7b84bbba2423e52_344721_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/remove-recent-items/step3_hu6f0cb14a1812bfaec7b84bbba2423e52_344721_ef50967df28671ec2b5877a6a2f77b91.png&#34;
               width=&#34;760&#34;
               height=&#34;588&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;시작 메뉴의 점프 목록, 작업 표시줄 또는 파일 탐색기 즐겨찾기에서 최근에 연 항목 표시&lt;/strong&gt;의 스위치를 클릭하여 끔으로 바꾸어줍니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;step4&#34; srcset=&#34;
               /remove-recent-items/step4_hu7a6bb26a76c0f625a44c18439306c193_156567_2a8d110dc26faa6acd5ffedf7911fb36.png 400w,
               /remove-recent-items/step4_hu7a6bb26a76c0f625a44c18439306c193_156567_47259439bee97601a10ac1d61543c54d.png 760w,
               /remove-recent-items/step4_hu7a6bb26a76c0f625a44c18439306c193_156567_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/remove-recent-items/step4_hu7a6bb26a76c0f625a44c18439306c193_156567_2a8d110dc26faa6acd5ffedf7911fb36.png&#34;
               width=&#34;760&#34;
               height=&#34;588&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;끝입니다! 설정사항은 따로 확인버튼 없이 자동으로 저장되니 그냥 창을 끄셔도 됩니다!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>WSL2에서 X window를 세팅하는 법</title>
      <link>https://evandde.github.io/wsl2-x/</link>
      <pubDate>Tue, 27 Oct 2020 15:21:57 +0900</pubDate>
      <guid>https://evandde.github.io/wsl2-x/</guid>
      <description>&lt;p&gt;이 글에서는 WSL2를 설치한 뒤 X window(GUI)를 사용하기 위한 세팅 방법을 알아봅니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    여기서는 &lt;b&gt;WSL2&lt;/b&gt; 설치가 완료된 상태라고 가정합니다. 이에 관한 전반적인 내용은 &lt;a href=&#34;https://evandde.github.io/wsl/&#34;&gt;이 글&lt;/a&gt;을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;WSL을 설치하더라도, GUI 기반의 프로그램을 실행하려면 X window에 관한 추가적인 설정이 필요합니다. 이 글에서는 &lt;strong&gt;WSL2&lt;/strong&gt;에서 X window 사용을 위한 세팅 방법을 다룹니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;tldr&#34;&gt;TL;DR&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.straightrunning.com/XmingNotes/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Xming 공식 홈페이지&lt;/a&gt;에서 Xming 다운로드&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Xming 설치 (다음만 누르며 설치해도 괜찮음)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Xming을 한 번 실행한 뒤 종료. (방화벽에 Xming 허용 규칙을 추가하기 위함)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Xming 단축아이콘을 만들고, &lt;b&gt;속성-대상&lt;/b&gt; 항목의 맨 끝에 한 칸을 띄고 &lt;code&gt;-ac&lt;/code&gt;를 이어서 적음
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    지우고 적는 것이 아니라, 맨 끝에 추가하는 것임에 주의하세요.
  &lt;/div&gt;
&lt;/div&gt;

















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;xming_option_ac&#34; srcset=&#34;
               /wsl2-x/xming_option_ac_hud4dba51e4165dfbe5b19911f91f31e5d_25487_919f36167e8921b6f00384cfc1d1209f.png 400w,
               /wsl2-x/xming_option_ac_hud4dba51e4165dfbe5b19911f91f31e5d_25487_556845d9c0b3b71e48842fd0cc5caa77.png 760w,
               /wsl2-x/xming_option_ac_hud4dba51e4165dfbe5b19911f91f31e5d_25487_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/wsl2-x/xming_option_ac_hud4dba51e4165dfbe5b19911f91f31e5d_25487_919f36167e8921b6f00384cfc1d1209f.png&#34;
               width=&#34;421&#34;
               height=&#34;598&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Windows PowerShell을 &lt;b&gt;관리자 권한&lt;/b&gt;으로 실행한 뒤, 다음 명령어 입력 (에러가 뜬다면 본문 참고)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Set-NetFirewallRule -DisplayName &amp;quot;Xming X Server&amp;quot; -Enabled True -Profile Any
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WSL2에서 다음 명령어 입력&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#39;export DISPLAY=$(cat /etc/resolv.conf | grep nameserver | awk &#39;&amp;quot;&#39;&amp;quot;&#39;{print $2}&#39;&amp;quot;&#39;&amp;quot;&#39;):0&#39; &amp;gt;&amp;gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;x-window-x-server란&#34;&gt;X window, X server란&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;X window&lt;/strong&gt;는 UNIX 내지 Linux 계열의 운영체제에서 사용되는 GUI 환경 구현을 위한 시스템입니다. &lt;strong&gt;X11&lt;/strong&gt;이라고도 부르고, 줄여서 그냥 &lt;strong&gt;X&lt;/strong&gt;라고 부르기도 합니다. X window의 동작 원리는 간단하게 말하면 서버-클라이언트 구조입니다. &amp;ldquo;&lt;strong&gt;프로그램이 GUI 창을 띄워달라고 X server에 요청&lt;/strong&gt;&amp;ldquo;하면, &amp;ldquo;&lt;strong&gt;X server가 요청을 처리하여 GUI 창을 띄우는 것&lt;/strong&gt;&amp;ldquo;이죠.&lt;/p&gt;
&lt;p&gt;일반적으로 Linux 운영체제 내에서 X server 프로그램이 구동되도록 설정된 환경에서는 내부적으로 알아서 화면을 띄울 수 있습니다. 하지만, PuTTY&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;나 WSL과 같이 Windows에서 터미널만 켜서 이용하는 경우에는, 프로그램의 X window 실행 요청을 Windows가 받아서 처리해야 하기 때문에, &lt;strong&gt;Windows용 X server 프로그램&lt;/strong&gt;이 필요합니다. 대표적으로 &lt;strong&gt;Xming&lt;/strong&gt;, &lt;strong&gt;VcXsrv&lt;/strong&gt;, &lt;strong&gt;X410&lt;/strong&gt; 등이 있습니다.&lt;/p&gt;
&lt;p&gt;클라이언트가 보내는 X window 실행 요청은, Linux 상에서 &lt;code&gt;DISPLAY&lt;/code&gt;라고 정의된 환경변수의 값으로 전송됩니다. 즉, X server를 사용하려면, X server 프로그램이 요청을 받을 수 있는 일종의 사서함 주소를 확보한 뒤, 이 값을 &lt;code&gt;DISPLAY&lt;/code&gt;로 정의해주면 되는 것입니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;xming-설치&#34;&gt;Xming 설치&lt;/h2&gt;
&lt;p&gt;이 글에서는 Xming이라는 프로그램을 이용할 것입니다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.straightrunning.com/XmingNotes/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Xming 공식 홈페이지&lt;/a&gt;에 들어가셔서 &lt;u&gt;Xming 설치파일을 받아오시기 바랍니다&lt;/u&gt;. (버전이 높은 것은 Xming 측에 돈을 기부하고 계정을 받아야 사용가능하니, 그 밑에 있는 낮은 버전을 받으시면 됩니다.)&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;xming_download&#34; srcset=&#34;
               /wsl2-x/xming_download_hu33841999fc63939f7eb474d869007bc1_60385_e5985975304aa3ceb123b58cde707df8.png 400w,
               /wsl2-x/xming_download_hu33841999fc63939f7eb474d869007bc1_60385_36e1f59157a5f369f428e8e3dac4458d.png 760w,
               /wsl2-x/xming_download_hu33841999fc63939f7eb474d869007bc1_60385_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/wsl2-x/xming_download_hu33841999fc63939f7eb474d869007bc1_60385_e5985975304aa3ceb123b58cde707df8.png&#34;
               width=&#34;760&#34;
               height=&#34;514&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;설치는 그냥 다음 버튼만 누르며 하셔도 됩니다만, 나중의 편의를 위해 &lt;strong&gt;단축아이콘 하나만 만들어두도록 합니다&lt;/strong&gt;. 아래 그림에 보이는 내용이 떴을 때 &lt;strong&gt;Create a desktop icon for Xming에 체크&lt;/strong&gt;해주시면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;xming_install&#34; srcset=&#34;
               /wsl2-x/xming_install_huae6882490155567490c1a876368c14fe_25675_98ad75cb6e4b5cf095079d8030f5392e.png 400w,
               /wsl2-x/xming_install_huae6882490155567490c1a876368c14fe_25675_100b1cc69ac73144a347becc6ac6a8ab.png 760w,
               /wsl2-x/xming_install_huae6882490155567490c1a876368c14fe_25675_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/wsl2-x/xming_install_huae6882490155567490c1a876368c14fe_25675_98ad75cb6e4b5cf095079d8030f5392e.png&#34;
               width=&#34;499&#34;
               height=&#34;387&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Xming이 켜져 있는지의 여부는, 작업표시줄 오른쪽의 트레이아이콘을 확인하시면 알 수 있습니다. 트레이아이콘 중 X모양의 아이콘이 있다면 켜져있는 것입니다. 종료하고자 할 때에는, &lt;strong&gt;트레이아이콘을 우클릭&lt;/strong&gt;하고 &lt;strong&gt;Exit&lt;/strong&gt;를 눌러주시면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;xming_running&#34; srcset=&#34;
               /wsl2-x/xming_running_hu7d32509324eb9cf6b913e8446f20cba9_11550_fdf8f270899a5f07d2f8e873ec6e5aa4.png 400w,
               /wsl2-x/xming_running_hu7d32509324eb9cf6b913e8446f20cba9_11550_25fafa912564ab70957f284af9aaa48f.png 760w,
               /wsl2-x/xming_running_hu7d32509324eb9cf6b913e8446f20cba9_11550_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/wsl2-x/xming_running_hu7d32509324eb9cf6b913e8446f20cba9_11550_fdf8f270899a5f07d2f8e873ec6e5aa4.png&#34;
               width=&#34;363&#34;
               height=&#34;40&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;wsl2와-x-server-연동의-어려움&#34;&gt;WSL2와 X server 연동의 어려움&lt;/h2&gt;
&lt;p&gt;WSL2에서 X server를 연동하는 경우는 WSL1에서와 사뭇 다릅니다.&lt;/p&gt;
&lt;p&gt;WSL1이 Windows와 동일한 네트워크를 사용했던 것과 달리, WSL2는 Windows 10 내에서 &lt;u&gt;별도의 WSL2 전용 네트워크를 사용&lt;/u&gt;하고 있기 때문입니다.&lt;/p&gt;
&lt;p&gt;즉, WSL2와 Windows 10의 주소가 다르기 때문에, &lt;strong&gt;WSL2에서 자기자신(localhost)에 X 요청을 보내게 되면 Window로 그 요청이 도달하지 못하는 것&lt;/strong&gt;이지요.&lt;/p&gt;
&lt;p&gt;우리는 이 문제를 해결하기 위해 다음의 과정을 거쳐야 합니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Windows에서 실행한 X server 프로그램(Xming)에서 외부 IP로부터 들어오는 요청을 허용하도록 설정&lt;/li&gt;
&lt;li&gt;Windows 방화벽에서 WSL2의 요청을 허용하도록 설정&lt;/li&gt;
&lt;li&gt;WSL2에서 Windows의 주소를 획득하고, 이를 &lt;code&gt;DISPLAY&lt;/code&gt; 환경변수로 지정&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;wsl2와-xming-연동&#34;&gt;WSL2와 Xming 연동&lt;/h2&gt;
&lt;h3 id=&#34;xming에서-외부-ip로부터의-요청을-허용하도록-설정&#34;&gt;Xming에서 외부 IP로부터의 요청을 허용하도록 설정&lt;/h3&gt;
&lt;p&gt;Xming은 기본적으로 자기자신(localhost)으로부터 들어온 요청만을 받아들이고, 외부 IP로부터의 요청은 받지 않도록 설정되어 있습니다. 그래서 Xming에서 설정을 바꿔주지 않으면, 아무리 WSL2에서 요청을 보내도 Xming이 받지 않는 것이지요.&lt;/p&gt;
&lt;p&gt;이 부분을 허용하도록 설정하기 위해서는 Xming을 켤때 &lt;strong&gt;-ac&lt;/strong&gt; 옵션을 넣어주면 됩니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;-ac&lt;/strong&gt; 옵션을 넣어 실행하기 위한 &lt;strong&gt;Xming 단축아이콘 생성&lt;/strong&gt; (설치 시 바탕화면에 생성하였다면 이것을 이용해도 괜찮음)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;단축아이콘에서 &lt;strong&gt;우클릭 - 속성&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;바로 가기&lt;/strong&gt; 탭 선택&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;대상&lt;/strong&gt; 항목의 &lt;strong&gt;맨 끝에 한 칸을 띄어쓴 뒤 -ac를 이어서 적음&lt;/strong&gt; 
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    지우고 적는 것이 아니라, 맨 끝에 추가하는 것임에 주의하세요.
  &lt;/div&gt;
&lt;/div&gt;

















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;xming_option_ac&#34; srcset=&#34;
               /wsl2-x/xming_option_ac-16307509468631_hud4dba51e4165dfbe5b19911f91f31e5d_25487_39c623f508f3e7b1a04f937394b61635.png 400w,
               /wsl2-x/xming_option_ac-16307509468631_hud4dba51e4165dfbe5b19911f91f31e5d_25487_a8085b4ddf69b18aa454516efb603856.png 760w,
               /wsl2-x/xming_option_ac-16307509468631_hud4dba51e4165dfbe5b19911f91f31e5d_25487_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/wsl2-x/xming_option_ac-16307509468631_hud4dba51e4165dfbe5b19911f91f31e5d_25487_39c623f508f3e7b1a04f937394b61635.png&#34;
               width=&#34;421&#34;
               height=&#34;598&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;확인&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;이제 이 단축아이콘으로 Xming을 실행하게 되면, Xming이 -ac 옵션이 적용된 채로 켜지게 됩니다. 혹시 &lt;strong&gt;현재 Xming이 켜져있다면 종료&lt;/strong&gt;하시고, &lt;strong&gt;방금 설정한 단축아이콘으로 다시 실행&lt;/strong&gt;해주세요.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;windows-방화벽에서-xming으로-들어가는-요청-허용&#34;&gt;Windows 방화벽에서 Xming으로 들어가는 요청 허용&lt;/h3&gt;
&lt;p&gt;WSL2에서 보내는 요청이 Xming에 도달하기 전에 &lt;strong&gt;Windows 방화벽이 차단해버리는 경우&lt;/strong&gt;를 막기 위해, 다음의 작업을 통해 방화벽에서 Xming X Server로 들어가는 요청을 허용하도록 설정하시기 바랍니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    이 작업을 수행하기 전에 반드시 한 번은 Xming을 실행한 적이 있어야 합니다. 최초실행 시 뜨는 경고창을 통해 방화벽에 Xming 허용 규칙을 추가하게 되기 때문입니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;[WIN]+[R]을 눌러 실행 창 띄우기&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;powershell&lt;/strong&gt;을 입력한 뒤, [CTRL]+[SHIFT]+[ENTER]를 눌러서 PowerShell을 &lt;strong&gt;관리자 권한&lt;/strong&gt;으로 실행&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다음 명령어 입력&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Set-NetFirewallRule -DisplayName &amp;quot;Xming X Server&amp;quot; -Enabled True -Profile Any
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;이 명령어를 입력할 때 다음과 같은 에러가 뜬다면, Xming을 실행한 적이 없기 때문입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;firewall_error&#34; srcset=&#34;
               /wsl2-x/firewall_error_hu594f1ba172f02afa791059b715de055e_10751_f122cbe3f16f7c912b03a2a7eccd2df4.png 400w,
               /wsl2-x/firewall_error_hu594f1ba172f02afa791059b715de055e_10751_97540bc8bdca533b5ed75d7241164899.png 760w,
               /wsl2-x/firewall_error_hu594f1ba172f02afa791059b715de055e_10751_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/wsl2-x/firewall_error_hu594f1ba172f02afa791059b715de055e_10751_f122cbe3f16f7c912b03a2a7eccd2df4.png&#34;
               width=&#34;760&#34;
               height=&#34;107&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;혹시 Xming을 실행한 적이 있음에도 이런 에러가 뜬다면, 다음 명령어를 입력하세요. (앞의 Set이 New로 바뀝니다)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;New-NetFirewallRule -DisplayName &amp;quot;Xming X Server&amp;quot; -Enabled True -Profile Any
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;windows의-ip-주소-획득-및-display-환경변수로-지정&#34;&gt;Windows의 IP 주소 획득 및 DISPLAY 환경변수로 지정&lt;/h3&gt;
&lt;p&gt;WSL2에서 Windows의 IP 주소를 보는 것은 다음 명령어를 통해 가능합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat /etc/resolv.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;wsl2_winIP&#34; srcset=&#34;
               /wsl2-x/wsl2_winIP_hu5b032e4b17b9daeb95aaab0e3b5a5467_21872_9414c2b3526fe8952ade5d0d3d69a643.png 400w,
               /wsl2-x/wsl2_winIP_hu5b032e4b17b9daeb95aaab0e3b5a5467_21872_2658e53cda3ee473b418d5a085d7cbbc.png 760w,
               /wsl2-x/wsl2_winIP_hu5b032e4b17b9daeb95aaab0e3b5a5467_21872_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/wsl2-x/wsl2_winIP_hu5b032e4b17b9daeb95aaab0e3b5a5467_21872_9414c2b3526fe8952ade5d0d3d69a643.png&#34;
               width=&#34;760&#34;
               height=&#34;397&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;값을 확인했다면 이걸 이용해서 DISPLAY 환경변수의 값을 설정해주면 됩니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export DISPLAY=위에서_확인한_IP:0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;이 작업 역시, 터미널을 종료하면 설정한 정보가 날아가버립니다. 때문에, &lt;b&gt;Windows의 IP 값을 받아다가 &lt;code&gt;DISPLAY&lt;/code&gt; 변수를 정의하는 작업&lt;/b&gt;을 한 문장으로 작성하여 &lt;code&gt;~/.bashrc&lt;/code&gt;에 적어두는 방식을 사용합니다. 이 작업을 위해서는 &lt;code&gt;|&lt;/code&gt;&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;, &lt;code&gt;grep&lt;/code&gt;&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;, &lt;code&gt;awk&lt;/code&gt;&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;등 생소할 수도 있는 명령어가 사용됩니다만, 그대로 따라서 한 번만 실행시키시면 WSL2에서 작업할 내용은 끝나게 됩니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#39;export DISPLAY=$(cat /etc/resolv.conf | grep nameserver | awk &#39;&amp;quot;&#39;&amp;quot;&#39;{print $2}&#39;&amp;quot;&#39;&amp;quot;&#39;):0&#39; &amp;gt;&amp;gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;gui-연동-확인을-위한-테스트&#34;&gt;GUI 연동 확인을 위한 테스트&lt;/h2&gt;
&lt;p&gt;이 모든 작업이 끝났다면, 아마 정상적으로 GUI가 실행될 것입니다.&lt;/p&gt;
&lt;p&gt;GUI 창을 띄우는 프로그램을 사용하시는 게 있다면 그 프로그램으로 테스트 하시면 됩니다. 이 글에서는 xclock이라는 프로그램을 받아서 테스트하도록 하겠습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;## Install x11 applications
sudo apt install x11-apps -y

## Run xclock
xclock
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;xwindow_test_xclock&#34; srcset=&#34;
               /wsl2-x/xwindow_test_xclock_hu7f2651c3886c3374ad7b82dee80d4028_24044_d6889147aac72f98bb0de23c5c7c65ce.png 400w,
               /wsl2-x/xwindow_test_xclock_hu7f2651c3886c3374ad7b82dee80d4028_24044_687891b4135322426976b613ddc06513.png 760w,
               /wsl2-x/xwindow_test_xclock_hu7f2651c3886c3374ad7b82dee80d4028_24044_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/wsl2-x/xwindow_test_xclock_hu7f2651c3886c3374ad7b82dee80d4028_24044_d6889147aac72f98bb0de23c5c7c65ce.png&#34;
               width=&#34;760&#34;
               height=&#34;400&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://www.chiark.greenend.org.uk/~sgtatham/putty/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PuTTY&lt;/a&gt;는 무료 터미널 에뮬레이터로, 대개 서버용으로 활용되는 리눅스 운영체제 기반 컴퓨터에 원격접속하는 용도로 활용됩니다.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;code&gt;|&lt;/code&gt;는 &lt;strong&gt;pipe&lt;/strong&gt;라고 부르며, &lt;code&gt;|&lt;/code&gt;의 앞에 있는 명령어의 실행 결과를 &lt;code&gt;|&lt;/code&gt;의 뒤에 있는 명령어 실행의 입력인자로 활용하는 기호입니다.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;code&gt;grep&lt;/code&gt;은 텍스트 검색에 관한 명령어입니다.&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;code&gt;awk&lt;/code&gt;는 텍스트 형태의 데이터를 행과 단어 별로 처리하여 출력하는 데에 사용되는 명령어입니다.&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;</description>
    </item>
    
    <item>
      <title>WSL1에서 X window를 세팅하는 법</title>
      <link>https://evandde.github.io/wsl1-x/</link>
      <pubDate>Tue, 27 Oct 2020 15:09:37 +0900</pubDate>
      <guid>https://evandde.github.io/wsl1-x/</guid>
      <description>&lt;p&gt;이 글에서는 WSL1을 설치한 뒤 X window(GUI)를 사용하기 위한 세팅 방법을 알아봅니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    여기서는 &lt;b&gt;WSL1&lt;/b&gt; 설치가 완료된 상태라고 가정합니다. 이에 관한 전반적인 내용은 &lt;a href=&#34;https://evandde.github.io/wsl/&#34;&gt;이 글&lt;/a&gt;을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;WSL을 설치하더라도, GUI 기반의 프로그램을 실행하려면 X window에 관한 추가적인 설정이 필요합니다. 이 글에서는 &lt;strong&gt;WSL1&lt;/strong&gt;에서 X window 사용을 위한 세팅 방법을 다룹니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;tldr&#34;&gt;TL;DR&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.straightrunning.com/XmingNotes/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Xming 공식 홈페이지&lt;/a&gt;에서 Xming 다운로드&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Xming 설치 (다음만 누르며 설치해도 괜찮음)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WSL1에서 다음 명령어 입력&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &amp;quot;export DISPLAY=localhost:0&amp;quot; &amp;gt;&amp;gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;x-window-x-server란&#34;&gt;X window, X server란&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;X window&lt;/strong&gt;는 UNIX 내지 Linux 계열의 운영체제에서 사용되는 GUI 환경 구현을 위한 시스템입니다. &lt;strong&gt;X11&lt;/strong&gt;이라고도 부르고, 줄여서 그냥 &lt;strong&gt;X&lt;/strong&gt;라고 부르기도 합니다. X window의 동작 원리는 간단하게 말하면 서버-클라이언트 구조입니다. &amp;ldquo;&lt;strong&gt;프로그램이 GUI 창을 띄워달라고 X server에 요청&lt;/strong&gt;&amp;ldquo;하면, &amp;ldquo;&lt;strong&gt;X server가 요청을 처리하여 GUI 창을 띄우는 것&lt;/strong&gt;&amp;ldquo;이죠.&lt;/p&gt;
&lt;p&gt;일반적으로 Linux 운영체제 내에서 X server 프로그램이 구동되도록 설정된 환경에서는 내부적으로 알아서 화면을 띄울 수 있습니다. 하지만, PuTTY&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;나 WSL과 같이 Windows에서 터미널만 켜서 이용하는 경우에는, 프로그램의 X window 실행 요청을 Windows가 받아서 처리해야 하기 때문에, &lt;strong&gt;Windows용 X server 프로그램&lt;/strong&gt;이 필요합니다. 대표적으로 &lt;strong&gt;Xming&lt;/strong&gt;, &lt;strong&gt;VcXsrv&lt;/strong&gt;, &lt;strong&gt;X410&lt;/strong&gt; 등이 있습니다.&lt;/p&gt;
&lt;p&gt;클라이언트가 보내는 X window 실행 요청은, Linux 상에서 &lt;code&gt;DISPLAY&lt;/code&gt;라고 정의된 환경변수의 값으로 전송됩니다. 즉, X server를 사용하려면, X server 프로그램이 요청을 받을 수 있는 일종의 사서함 주소를 확보한 뒤, 이 값을 &lt;code&gt;DISPLAY&lt;/code&gt;로 정의해주면 되는 것입니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;xming-설치&#34;&gt;Xming 설치&lt;/h2&gt;
&lt;p&gt;이 글에서는 Xming이라는 프로그램을 이용할 것입니다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.straightrunning.com/XmingNotes/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Xming 공식 홈페이지&lt;/a&gt;에 들어가셔서 &lt;u&gt;Xming 설치파일을 받아오시기 바랍니다&lt;/u&gt;. (버전이 높은 것은 Xming 측에 돈을 기부하고 계정을 받아야 사용가능하니, 그 밑에 있는 낮은 버전을 받으시면 됩니다.)&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;xming_download&#34; srcset=&#34;
               /wsl1-x/xming_download_hu33841999fc63939f7eb474d869007bc1_60385_e5985975304aa3ceb123b58cde707df8.png 400w,
               /wsl1-x/xming_download_hu33841999fc63939f7eb474d869007bc1_60385_36e1f59157a5f369f428e8e3dac4458d.png 760w,
               /wsl1-x/xming_download_hu33841999fc63939f7eb474d869007bc1_60385_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/wsl1-x/xming_download_hu33841999fc63939f7eb474d869007bc1_60385_e5985975304aa3ceb123b58cde707df8.png&#34;
               width=&#34;760&#34;
               height=&#34;514&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;설치는 그냥 다음 버튼만 누르며 하셔도 됩니다만, 나중의 편의를 위해 &lt;strong&gt;단축아이콘 하나만 만들어두도록 합니다&lt;/strong&gt;. 아래 그림에 보이는 내용이 떴을 때 &lt;strong&gt;Create a desktop icon for Xming에 체크&lt;/strong&gt;해주시면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;xming_install&#34; srcset=&#34;
               /wsl1-x/xming_install_huae6882490155567490c1a876368c14fe_25675_98ad75cb6e4b5cf095079d8030f5392e.png 400w,
               /wsl1-x/xming_install_huae6882490155567490c1a876368c14fe_25675_100b1cc69ac73144a347becc6ac6a8ab.png 760w,
               /wsl1-x/xming_install_huae6882490155567490c1a876368c14fe_25675_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/wsl1-x/xming_install_huae6882490155567490c1a876368c14fe_25675_98ad75cb6e4b5cf095079d8030f5392e.png&#34;
               width=&#34;499&#34;
               height=&#34;387&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Xming이 켜져 있는지의 여부는, 작업표시줄 오른쪽의 트레이아이콘을 확인하시면 알 수 있습니다. 트레이아이콘 중 X모양의 아이콘이 있다면 켜져있는 것입니다. 종료하고자 할 때에는, &lt;strong&gt;트레이아이콘을 우클릭&lt;/strong&gt;하고 &lt;strong&gt;Exit&lt;/strong&gt;를 눌러주시면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;xming_running&#34; srcset=&#34;
               /wsl1-x/xming_running_hu7d32509324eb9cf6b913e8446f20cba9_11550_fdf8f270899a5f07d2f8e873ec6e5aa4.png 400w,
               /wsl1-x/xming_running_hu7d32509324eb9cf6b913e8446f20cba9_11550_25fafa912564ab70957f284af9aaa48f.png 760w,
               /wsl1-x/xming_running_hu7d32509324eb9cf6b913e8446f20cba9_11550_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/wsl1-x/xming_running_hu7d32509324eb9cf6b913e8446f20cba9_11550_fdf8f270899a5f07d2f8e873ec6e5aa4.png&#34;
               width=&#34;363&#34;
               height=&#34;40&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;wsl1과-xming-연동&#34;&gt;WSL1과 Xming 연동&lt;/h2&gt;
&lt;p&gt;WSL1은 고민할 것이 별로 없습니다. WSL1은 Windows와 네트워크 상 주소가 동일하기 때문입니다. 클라이언트에서 X window 요청이 들어오면, 그대로 자기자신(localhost)에게 켜져 있는 Windows용 X server에 던져주면 끝입니다.&lt;/p&gt;
&lt;p&gt;명령어 상으로는 다음과 같이 적어주면 됩니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export DISPLAY=localhost:0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;다만, 이렇게 정의한 환경변수는 터미널이 종료되는 순간 사라집니다. 일반적으로는 매번 터미널이 켜질 때마다 저 명령줄이 자동으로 실행되도록 하기 위해, &lt;code&gt;~/.bashrc&lt;/code&gt; 파일에 위의 내용을 적어두는 방식으로 활용합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &amp;quot;export DISPLAY=localhost:0&amp;quot; &amp;gt;&amp;gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;gui-연동-확인을-위한-테스트&#34;&gt;GUI 연동 확인을 위한 테스트&lt;/h2&gt;
&lt;p&gt;이 모든 작업이 끝났다면, 아마 정상적으로 GUI가 실행될 것입니다.&lt;/p&gt;
&lt;p&gt;GUI 창을 띄우는 프로그램을 사용하시는 게 있다면 그 프로그램으로 테스트 하시면 됩니다. 이 글에서는 xclock이라는 프로그램을 받아서 테스트하도록 하겠습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;## Install x11 applications
sudo apt install x11-apps -y

## Run xclock
xclock
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;xwindow_test_xclock&#34; srcset=&#34;
               /wsl1-x/xwindow_test_xclock_hu7f2651c3886c3374ad7b82dee80d4028_24044_d6889147aac72f98bb0de23c5c7c65ce.png 400w,
               /wsl1-x/xwindow_test_xclock_hu7f2651c3886c3374ad7b82dee80d4028_24044_687891b4135322426976b613ddc06513.png 760w,
               /wsl1-x/xwindow_test_xclock_hu7f2651c3886c3374ad7b82dee80d4028_24044_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/wsl1-x/xwindow_test_xclock_hu7f2651c3886c3374ad7b82dee80d4028_24044_d6889147aac72f98bb0de23c5c7c65ce.png&#34;
               width=&#34;760&#34;
               height=&#34;400&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://www.chiark.greenend.org.uk/~sgtatham/putty/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PuTTY&lt;/a&gt;는 무료 터미널 에뮬레이터로, 대개 서버용으로 활용되는 리눅스 운영체제 기반 컴퓨터에 원격접속하는 용도로 활용됩니다.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;</description>
    </item>
    
    <item>
      <title>Windows에서 사용자 폴더의 위치를 변경하는 방법</title>
      <link>https://evandde.github.io/userdir-change/</link>
      <pubDate>Tue, 13 Oct 2020 16:24:20 +0900</pubDate>
      <guid>https://evandde.github.io/userdir-change/</guid>
      <description>&lt;p&gt;Windows를 설치하면, &lt;code&gt;C:\Users\사용자이름&lt;/code&gt; 폴더에 &lt;strong&gt;다운로드, 사진, 문서, 동영상&lt;/strong&gt; 등의 폴더가 있는 것을 확인할 수 있습니다. 이러한 폴더를 &lt;strong&gt;사용자 폴더&lt;/strong&gt; 라고 합니다. 
이 글에서는 사용자 폴더의 위치를 변경하는 방법에 대해 알아봅니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;userdir&#34; srcset=&#34;
               /userdir-change/userdir_hu44aefba528d9ef9c074e54594b911602_7067_bed96f5d618e1b46df4d280a4286a85a.png 400w,
               /userdir-change/userdir_hu44aefba528d9ef9c074e54594b911602_7067_4ef6048c396066fae08e90ddde0039c0.png 760w,
               /userdir-change/userdir_hu44aefba528d9ef9c074e54594b911602_7067_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/userdir-change/userdir_hu44aefba528d9ef9c074e54594b911602_7067_bed96f5d618e1b46df4d280a4286a85a.png&#34;
               width=&#34;253&#34;
               height=&#34;254&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;사용자 폴더는 대개 응용프로그램(MS Office, Visual Studio, &amp;hellip;) 자체가 설치되는 공간이 아니라, 우리가 컴퓨터를 사용하는 과정에서 생성되는 &lt;b&gt;여러가지 데이터(*.txt, *.docx, *.pptx, &amp;hellip;)들이 저장되는 공간&lt;/b&gt;입니다. 그렇기 때문에, 컴퓨터를 사용하다보면 이러한 사용자 폴더가 차지하는 용량이 점점 늘어나게 됩니다.&lt;/p&gt;
&lt;p&gt;사용형태에 따라, C드라이브에는 적은 용량을 할당하여 윈도우와 응용프로그램을 설치하고, D드라이브에 많은 용량을 할당하여 데이터를 저장하고 백업하는 용도로 파티션 관리를 하는 분들도 꽤 있으리라 생각합니다. 이런 분들이라면 더욱, 사용자 폴더를 D드라이브로 변경하는 편이 용량 측면 및 백업·관리 측면에서 유리할 것입니다.&lt;/p&gt;
&lt;p&gt;이 글에서는 사용자 폴더를 임의의 경로로 옮기는 몇 가지 방법을 살펴볼 것입니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;tldr&#34;&gt;TL;DR&lt;/h2&gt;
&lt;h3 id=&#34;개별-폴더마다-경로-변경을-간단하게-수행하고자-하는-경우&#34;&gt;개별 폴더마다 경로 변경을 간단하게 수행하고자 하는 경우&lt;/h3&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    일부 폴더는 이 절차를 적용할 수 없거나, 적용되더라도 의도대로 동작하지 않을 수 있습니다. 자세한 사항은 아래의 &lt;a href=&#34;https://evandde.github.io/userdir-change/#%EB%AC%B8%EC%A0%9C%EC%A0%90&#34;&gt;개별 폴더 경로변경의 문제점&lt;/a&gt;을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;사용자 폴더가 있는 위치로 이동.
&lt;ol&gt;
&lt;li&gt;[WIN]+[R]을 눌러 &lt;strong&gt;실행&lt;/strong&gt; 창 띄우기.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%UserProfile%&lt;/code&gt;을 입력하고 확인을 눌러 사용자 폴더 위치의 파일 탐색기 띄우기.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;옮기고 싶은 사용자 폴더에서 &lt;b&gt;우클릭 - 속성&lt;/b&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;위치&lt;/strong&gt; 탭으로 이동.&lt;/li&gt;
&lt;li&gt;값을 원하는 경로로 변경.&lt;/li&gt;
&lt;li&gt;확인.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;user_folder_path_setting&#34; srcset=&#34;
               /userdir-change/user_folder_path_setting_hue9e265802e9cf0996367dc8bcdaab543_15429_2137d6529ede7ca0a5ccba8ce6ff1491.png 400w,
               /userdir-change/user_folder_path_setting_hue9e265802e9cf0996367dc8bcdaab543_15429_2c3664da7bdf8a426e712e7d02025c2b.png 760w,
               /userdir-change/user_folder_path_setting_hue9e265802e9cf0996367dc8bcdaab543_15429_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/userdir-change/user_folder_path_setting_hue9e265802e9cf0996367dc8bcdaab543_15429_2137d6529ede7ca0a5ccba8ce6ff1491.png&#34;
               width=&#34;421&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;windows-설치-과정-중에-설정하는-법&#34;&gt;Windows 설치 과정 중에 설정하는 법&lt;/h3&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    실수하지 않도록 각 단계를 차근차근 진행하세요. 작업이 정상적으로 이루어지지 않은 경우, 로그인이 되지 않거나, 최악의 경우 Windows를 다시 설치해야 할 수도 있습니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Windows 설치 과정 중, &lt;strong&gt;국가 선택창&lt;/strong&gt;이 뜨면 &lt;b&gt;[CTRL]+[SHIFT]+[F3]&lt;/b&gt;을 눌러 audit mode로 진입.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Windows 데스크탑 화면이 뜬 뒤, System Preperation Tool 대화상자가 나타나면 Cancle버튼을 눌러 끔.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;디스크 관리&lt;/strong&gt;를 실행하여 사용자 폴더를 위치시키고자 하는 드라이브 문자 확인.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;[WIN]+[R]을 눌러 실행 창 띄우기.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;diskmgmt.msc&lt;/code&gt;을 입력하고 확인을 눌러 디스크 관리 띄우기.&lt;/li&gt;
&lt;li&gt;파일 시스템이나 용량 등 정보를 바탕으로, 사용자 폴더를 위치시킬 드라이브의 문자 확인.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;아래 내용으로 unattended answer file 생성. (인터넷 연결이 가능하므로, 이 블로그에서 아래 내용을 복사-붙여넣기 가능)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;메모장 실행.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다음 &lt;code&gt;XML&lt;/code&gt; 내용 입력. (4번 줄과 6번 줄 내용을 본인에 맞게 수정)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;
&amp;lt;unattend xmlns=&amp;quot;urn:schemas-microsoft-com:unattend&amp;quot;&amp;gt;
&amp;lt;settings pass=&amp;quot;oobeSystem&amp;quot;&amp;gt;
&amp;lt;component name=&amp;quot;Microsoft-Windows-Shell-Setup&amp;quot; processorArchitecture=&amp;quot;amd64&amp;quot; publicKeyToken=&amp;quot;31bf3856ad364e35&amp;quot; language=&amp;quot;neutral&amp;quot; versionScope=&amp;quot;nonSxS&amp;quot; xmlns:wcm=&amp;quot;http://schemas.microsoft.com/WMIConfig/2002/State&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;&amp;gt;
&amp;lt;FolderLocations&amp;gt;
&amp;lt;ProfilesDirectory&amp;gt;D:\Users&amp;lt;/ProfilesDirectory&amp;gt;
&amp;lt;/FolderLocations&amp;gt;
&amp;lt;/component&amp;gt;
&amp;lt;/settings&amp;gt;
&amp;lt;/unattend&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;4번 줄: &lt;font color=&#34;red&#34;&gt;processorArchitecture&lt;/font&gt; 변수의 값은 64 bit 윈도우를 설치할 경우에는 &lt;font color=&#34;red&#34;&gt;amd64&lt;/font&gt;로 (프로세서 종류가 Intel / AMD 중 어느 것인지는 관계 없음), 32 bit 윈도우를 설치할 경우에는 &lt;font color=&#34;red&#34;&gt;x86&lt;/font&gt;로 입력.&lt;/li&gt;
&lt;li&gt;6번 줄: &lt;font color=&#34;red&#34;&gt;ProfilesDirectory&lt;/font&gt; 태그의 값은 사용할 &lt;font color=&#34;red&#34;&gt;사용자 폴더의 위치&lt;/font&gt;로 설정. 이 글에서는 D드라이브로 변경할 것을 상정하여, &lt;font color=&#34;red&#34;&gt;D:\Users&lt;/font&gt;로 설정하였음.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;C드라이브를 제외한 아무 드라이브의 최상위 위치&lt;/strong&gt;에 &lt;code&gt;relocate.xml&lt;/code&gt;로 저장.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;관리자 권한&lt;/strong&gt;으로 &lt;strong&gt;cmd&lt;/strong&gt;를 켜고 다음 명령어 두 줄 실행.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;net stop WMPNetworkSvc
%windir%\system32\sysprep\sysprep.exe /oobe /reboot /unattend:d:\relocate.xml
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;2번 줄: &lt;code&gt;/unattend&lt;/code&gt; 항목의 값으로 &lt;font color=red&gt;위에서 저장한 &lt;code&gt;relocate.xml&lt;/code&gt;의 경로&lt;/font&gt;를 입력&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;재부팅되는 것을 기다린 뒤 Windows 설치를 마저 진행하면 완료.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;용어-설명&#34;&gt;용어 설명&lt;/h2&gt;
&lt;p&gt;환경변수 &lt;code&gt;UserName&lt;/code&gt;: 현재 로그인한 Windows 계정의 사용자명입니다.&lt;/p&gt;
&lt;p&gt;환경변수 &lt;code&gt;UserProfile&lt;/code&gt;: 현재 로그인한 Windows 계정의 사용자 폴더 경로입니다. 기본값은 &lt;code&gt;C:\Users\%UserName%&lt;/code&gt; 입니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;개별-폴더-경로만-변경&#34;&gt;개별 폴더 경로만 변경&lt;/h2&gt;
&lt;p&gt;사용자 폴더 경로로 들어가 봅시다. &lt;b&gt;[WIN]+[R]&lt;/b&gt;을 눌러 실행 창을 열고, &lt;code&gt;%UserProfile%&lt;/code&gt;라고 입력하면 됩니다. (기본적으로 &lt;code&gt;C:\Users\%UserName%&lt;/code&gt; 입니다)&lt;/p&gt;
&lt;p&gt;그러면 다음과 같은 탐색기 창이 뜰 것입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;user_folders&#34; srcset=&#34;
               /userdir-change/user_folders_hu5a368aff3008d23cd9edfe5ed5e2346d_20870_de703a574a97a5454ca478c207cdee7e.png 400w,
               /userdir-change/user_folders_hu5a368aff3008d23cd9edfe5ed5e2346d_20870_59455b82c64ca282e8e0f103a85d13e5.png 760w,
               /userdir-change/user_folders_hu5a368aff3008d23cd9edfe5ed5e2346d_20870_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/userdir-change/user_folders_hu5a368aff3008d23cd9edfe5ed5e2346d_20870_de703a574a97a5454ca478c207cdee7e.png&#34;
               width=&#34;659&#34;
               height=&#34;315&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;여기서 보이는 3D 개체, 검색, 다운로드, 동영상, &amp;hellip; 이런 폴더들은 사실 일종의 단축아이콘 같은 녀석들입니다. 예를 들어 &lt;strong&gt;3D 개체&lt;/strong&gt;라는 아이콘은 사실 &lt;code&gt;C:\Users\%UserName%\3D Objects&lt;/code&gt;와 같은 경로로 연결해주는 바로가기의 역할을 하지요. 그러므로, 이 바로가기의 경로만 변경해주면 됩니다.&lt;/p&gt;
&lt;h3 id=&#34;변경-방법&#34;&gt;변경 방법&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;옮기고 싶은 폴더의 바로가기에서 &lt;b&gt;우클릭 - 속성&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;user_folder_properties&#34; srcset=&#34;
               /userdir-change/user_folder_properties_huf10f81ad9ada76846d789f9f3f4128cd_41309_b9f99b2531ade1e9e2cf9f5b1e7f4ae0.png 400w,
               /userdir-change/user_folder_properties_huf10f81ad9ada76846d789f9f3f4128cd_41309_58d1f9d2d4713b9a4db0cbfdd840774f.png 760w,
               /userdir-change/user_folder_properties_huf10f81ad9ada76846d789f9f3f4128cd_41309_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/userdir-change/user_folder_properties_huf10f81ad9ada76846d789f9f3f4128cd_41309_b9f99b2531ade1e9e2cf9f5b1e7f4ae0.png&#34;
               width=&#34;420&#34;
               height=&#34;578&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;위치&lt;/strong&gt; 탭으로 이동.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;값을 원하는 경로로 변경.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;확인.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;user_folder_path_setting&#34; srcset=&#34;
               /userdir-change/user_folder_path_setting-16307498431421_hue9e265802e9cf0996367dc8bcdaab543_15429_51e38c66ad5f98d2bef7e500a3d3c5be.png 400w,
               /userdir-change/user_folder_path_setting-16307498431421_hue9e265802e9cf0996367dc8bcdaab543_15429_9f66858eda389a06da889b4c939cf5e1.png 760w,
               /userdir-change/user_folder_path_setting-16307498431421_hue9e265802e9cf0996367dc8bcdaab543_15429_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/userdir-change/user_folder_path_setting-16307498431421_hue9e265802e9cf0996367dc8bcdaab543_15429_51e38c66ad5f98d2bef7e500a3d3c5be.png&#34;
               width=&#34;421&#34;
               height=&#34;548&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    이미 해당 폴더 안에 데이터가 들어있다면, 확인을 눌렀을 때 그 데이터들을 새로운 경로로 이동할지의 여부를 묻는 알림 창이 뜹니다. 원하는 방식에 따라 선택하시면 됩니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;문제점&#34;&gt;문제점&lt;/h3&gt;
&lt;p&gt;이 방법은 3D 개체, 검색, 다운로드, 동영상, &amp;hellip; 로 정의되어 있는 &lt;strong&gt;바로가기의 경로를 변경하는 방법&lt;/strong&gt;입니다. 예를 들어 &amp;ldquo;문서&amp;rdquo; 라는 바로가기의 경로를 &lt;code&gt;C:\Users\%UserName%\Documents&lt;/code&gt;에서 &lt;code&gt;D:\Users\%UserName%\Documents&lt;/code&gt;로 변경하는 것이죠.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;문제는, 우리가 이처럼 &amp;ldquo;문서&amp;quot;라는 바로가기를 변경해도, &lt;code&gt;%UserProfile%&lt;/code&gt;이라는 환경변수는 그대로 &lt;code&gt;C:\Users\%UserName%&lt;/code&gt;값을 가지고 있다는 것입니다.&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;일부 프로그램은, &amp;ldquo;문서&amp;quot;라는 폴더에 데이터를 저장하려고 접근할 때, &amp;ldquo;문서&amp;quot;라는 바로가기를 활용하지 않고 &lt;code&gt;%UserProfile%\Documents&lt;/code&gt;라는 경로를 활용하는 경우가 있습니다. 이런 프로그램은, 우리가 &amp;ldquo;문서&amp;quot;라는 바로가기를 D로 옮겨놓아도, 이를 무시하고 &lt;code&gt;%UserProfile%\Documents&lt;/code&gt;(&lt;code&gt;C:\Users\%UserName%\Documents&lt;/code&gt;) 폴더를 새로 만들어버린 뒤 그 안에 데이터를 저장합니다. 이러면 &amp;ldquo;문서&amp;rdquo; 폴더가 C드라이브와 D드라이브에 따로따로 생기고, 더욱 복잡해지는 결과를 초래하지요.&lt;/p&gt;
&lt;p&gt;또 다른 문제도 있습니다. &lt;code&gt;%UserProfile%&lt;/code&gt; 폴더 안에는, 우리가 위치를 바꿀수 없는 폴더들도 존재합니다. 대표적인 예가 &lt;code&gt;AppData&lt;/code&gt; 폴더입니다(기본적으로 숨김처리 되어있는 폴더입니다).  어떤 프로그램들은 그 프로그램의 환경설정 내용 등을 &lt;code&gt;AppData&lt;/code&gt; 폴더에 저장하는 경우가 있습니다. 그런데, 이 폴더는 위에서 설명한 방법으로는 위치를 변경할 수 없습니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;환경변수-userprofile-변경하기&#34;&gt;환경변수 UserProfile 변경하기&lt;/h2&gt;
&lt;p&gt;앞서의 문제를 해결하려면, &lt;b&gt;&lt;code&gt;%UserProfile%&lt;/code&gt; 환경변수 자체를 D드라이브로 바꾸면 됩니다&lt;/b&gt;&amp;hellip;만, 이 작업은 쉬운 일이 아닙니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;이 작업은 실수의 여지가 많고, 난이도가 높습니다.&lt;/p&gt;
&lt;p&gt;작업이 정상적으로 이루어지지 않은 경우, 로그인이 되지 않거나, 최악의 경우 Windows를 다시 설치해야 할 수도 있습니다.&lt;/p&gt;

  &lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;windows-재설치-없이-변경하는-법&#34;&gt;Windows 재설치 없이 변경하는 법&lt;/h3&gt;
&lt;p&gt;&lt;font color=&#39;red&#39;&gt;이 방법은 저도 아직 성공해본 적이 없습니다.&lt;/font&gt; 10회 이상 계정을 삭제하고 다시 만들고 Windows를 재설치하고 하며 시도하였지만, 성공하지 못했습니다.  (물론 제가 해당 방법에 대한 이해가 부족했기 때문일 수 있습니다)&lt;/p&gt;
&lt;p&gt;이 작업을 통해 &lt;code&gt;%UserProfile%&lt;/code&gt;을 변경하면 내부적으로 어딘가에서 꼬이는 것 같았습니다. 변경 후에 기존 계정으로 로그인하면, 로그인 하자마자 혹은 시작 버튼을 누르자마자 다음과 같은 에러가 발생하였습니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;error&#34; srcset=&#34;
               /userdir-change/error_hud78967525c9c647d43ab7204a237cccd_50744_33c828eb43d2cbd9297f55d4d9ce5313.png 400w,
               /userdir-change/error_hud78967525c9c647d43ab7204a237cccd_50744_42ed7fedb4627e73e1755feeb4163dd5.png 760w,
               /userdir-change/error_hud78967525c9c647d43ab7204a237cccd_50744_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/userdir-change/error_hud78967525c9c647d43ab7204a237cccd_50744_33c828eb43d2cbd9297f55d4d9ce5313.png&#34;
               width=&#34;760&#34;
               height=&#34;227&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;때문에, 참고하였던 관련 링크와 함께 간단한 부연설명만 하고 넘어가겠습니다.&lt;/p&gt;
&lt;p&gt;사용자 폴더를 이동하는 방법에 관해 구글링을 해보면 꽤나 많은 정보가 나옵니다. 핵심적인 흐름을 요약하면 다음과 같습니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;관리자 계정을 활성화&lt;/li&gt;
&lt;li&gt;기존 계정을 로그아웃하고 관리자 계정으로 로그인&lt;/li&gt;
&lt;li&gt;레지스트리 변경을 통해 &lt;code&gt;%UserProfile%&lt;/code&gt; 환경변수를 변경&lt;/li&gt;
&lt;li&gt;관리자 계정을 로그아웃하고 기존 계정으로 다시 로그인&lt;/li&gt;
&lt;li&gt;관리자 계정을 비활성화&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;대표적으로 제가 참고하였던 링크입니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://itrainbowm.tistory.com/29&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Windows10에서 사용자 폴더의 이름을 변경하는 방법 (C:\Users\Username)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wisebee.tistory.com/13&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Windows 7, 사용자 폴더 위치를 변경하는 방법&lt;/a&gt; (이론상 Windows 10에서도 동일하게 적용 가능합니다)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;내용 추가&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;새로운 방법을 찾게되어 내용을 추가합니다. 제가 시도해보지는 않았지만 뭔가 가능할 것 같은 느낌이 듭니다. 다음에 기회가 되면 시도해보도록 하겠습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ks2colorworld.tistory.com/13&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;윈도우 10에서 C:\사용자 (실제명 : C:\Users) 폴더를 다른 드라이브(ssd, hdd)로 옮기는 방법&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;windows-설치-시-초기-설정을-통해-변경하는-법&#34;&gt;Windows 설치 시 초기 설정을 통해 변경하는 법&lt;/h3&gt;
&lt;p&gt;저는 결국 이 방법을 통해 사용자 폴더의 위치를 변경하였습니다. 이 방법을 요약하면 다음과 같습니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Windows를 설치할 때 oobe&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;단계에서 audit 모드&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;에 진입.&lt;/li&gt;
&lt;li&gt;사용자 폴더를 변경한다는 내용이 담긴 unattended answer file&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;을 생성.&lt;/li&gt;
&lt;li&gt;2에서 생성한 unattended answer file을 참고하여 Windows를 설치.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;windows-재설치&#34;&gt;Windows 재설치&lt;/h4&gt;
&lt;p&gt;ISO 파일을 이용하여 제작한 부팅디스크도 좋고, Windows에서 기본적으로 제공하는 PC 초기화 기능을 이용해도 좋습니다.&lt;/p&gt;
&lt;h4 id=&#34;audit-모드-진입&#34;&gt;Audit 모드 진입&lt;/h4&gt;
&lt;p&gt;드라이브 초기화가 진행된 뒤, 재설치가 시작되면 다음 그림과 같은 &lt;b&gt;국가/언어 선택창&lt;/b&gt;이 뜹니다. 여기서 &lt;b&gt;[CTRL]+[SHIFT]+[F3]&lt;/b&gt;을 눌러 audit 모드로 진입합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;oobe_phase&#34; srcset=&#34;
               /userdir-change/oobe_phase_hu9c223f373d0d9e18c8b4a85f84b42b04_3513_03d9261eb4f6da219084e0e1c62787d3.png 400w,
               /userdir-change/oobe_phase_hu9c223f373d0d9e18c8b4a85f84b42b04_3513_144380774d0977164a8809e843a15dac.png 760w,
               /userdir-change/oobe_phase_hu9c223f373d0d9e18c8b4a85f84b42b04_3513_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/userdir-change/oobe_phase_hu9c223f373d0d9e18c8b4a85f84b42b04_3513_03d9261eb4f6da219084e0e1c62787d3.png&#34;
               width=&#34;600&#34;
               height=&#34;386&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h4 id=&#34;windows-부팅-후-sysprep-창-종료&#34;&gt;Windows 부팅 후 Sysprep 창 종료&lt;/h4&gt;
&lt;p&gt;자동으로 PC가 재부팅된 뒤, audit 모드로 진입할 것입니다. 윈도우 데스크탑이 뜬 뒤 다음과 같은 System Preparation Tool 창이 뜰텐데, 지금은 &lt;strong&gt;Cancle 버튼을 눌러 종료&lt;/strong&gt;해 줍니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;sysprep_cancle&#34; srcset=&#34;
               /userdir-change/sysprep_cancle_hu78d854eb793fcc65145afa92a8c978f0_8203_ed631a1921a21c39503f851e79980d06.png 400w,
               /userdir-change/sysprep_cancle_hu78d854eb793fcc65145afa92a8c978f0_8203_09687b883dd6ac4bb29bef291b824111.png 760w,
               /userdir-change/sysprep_cancle_hu78d854eb793fcc65145afa92a8c978f0_8203_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/userdir-change/sysprep_cancle_hu78d854eb793fcc65145afa92a8c978f0_8203_ed631a1921a21c39503f851e79980d06.png&#34;
               width=&#34;338&#34;
               height=&#34;258&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h4 id=&#34;디스크-관리에서-사용자-폴더를-둘-드라이브명-확인&#34;&gt;디스크 관리에서 사용자 폴더를 둘 드라이브명 확인&lt;/h4&gt;
&lt;p&gt;일반적으로 D드라이브라고 생각하고 있을지라도, audit 모드에서는 드라이브명이 다르게 부여되어 있을 수 있습니다. &lt;font color=&#39;red&#39;&gt;반드시 디스크 관리를 열어 용량 정보 등을 보고 사용자 폴더를 위치시킬 드라이브의 드라이브명이 무엇인지 확인하세요.&lt;/font&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;[WIN]+[R]을 눌러 실행 창을 띄움.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;diskmgmt.msc&lt;/code&gt;를 입력하고 실행하여 디스크 관리 창 띄움.&lt;/li&gt;
&lt;li&gt;용량 정보, 파일 시스템 등을 토대로, 사용자 폴더를 위치시킬 드라이브의 &lt;b&gt;드라이브명(알파벳)&lt;/b&gt;이 무엇인지 확인.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;unattended-answer-file-생성&#34;&gt;Unattended answer file 생성&lt;/h4&gt;
&lt;p&gt;이 시점에서는 인터넷 연결이 가능합니다. &lt;font color=&#39;red&#39;&gt;실수를 줄이기 위해, 아래의 xml 코드를 직접 입력하지 마시고, 복사-붙여넣기한 뒤 필요한 부분만 수정하시길 권장합니다.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;다음의 과정을 통해 unattended answer file을 생성합니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;메모장 실행.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다음 &lt;code&gt;XML&lt;/code&gt; 내용 입력. 단, 4번 줄과 6번 줄의 내용은 본인에 맞게 수정.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;
&amp;lt;unattend xmlns=&amp;quot;urn:schemas-microsoft-com:unattend&amp;quot;&amp;gt;
&amp;lt;settings pass=&amp;quot;oobeSystem&amp;quot;&amp;gt;
&amp;lt;component name=&amp;quot;Microsoft-Windows-Shell-Setup&amp;quot; processorArchitecture=&amp;quot;amd64&amp;quot; publicKeyToken=&amp;quot;31bf3856ad364e35&amp;quot; language=&amp;quot;neutral&amp;quot; versionScope=&amp;quot;nonSxS&amp;quot; xmlns:wcm=&amp;quot;http://schemas.microsoft.com/WMIConfig/2002/State&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;&amp;gt;
&amp;lt;FolderLocations&amp;gt;
&amp;lt;ProfilesDirectory&amp;gt;D:\Users&amp;lt;/ProfilesDirectory&amp;gt;
&amp;lt;/FolderLocations&amp;gt;
&amp;lt;/component&amp;gt;
&amp;lt;/settings&amp;gt;
&amp;lt;/unattend&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;4번 줄: &lt;font color=&#34;red&#34;&gt;processorArchitecture&lt;/font&gt; 변수의 값은 64 bit 윈도우를 설치할 경우에는 &lt;font color=&#34;red&#34;&gt;amd64&lt;/font&gt;로 (프로세서 종류가 Intel / AMD 중 어느 것인지는 관계 없음), 32 bit 윈도우를 설치할 경우에는 &lt;font color=&#34;red&#34;&gt;x86&lt;/font&gt;로 입력.&lt;/li&gt;
&lt;li&gt;6번 줄: &lt;font color=&#34;red&#34;&gt;ProfilesDirectory&lt;/font&gt; 태그의 값은 사용할 &lt;font color=&#34;red&#34;&gt;Users 폴더의 위치&lt;/font&gt;로 설정. 이 글에서는 D드라이브로 변경할 것을 상정하여, &lt;font color=&#34;red&#34;&gt;D:\Users&lt;/font&gt;로 설정하였음.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;C드라이브를 제외한 아무 드라이브의 최상위 위치에 &lt;code&gt;relocate.xml&lt;/code&gt;로 저장. 
&lt;font color=&#39;red&#39;&gt;반드시, 저장 시 파일 형식을 &lt;b&gt;모든 파일(All files)&lt;/b&gt;로 선택&lt;/font&gt;하여 txt 형태로 저장되지 않도록 주의.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;save_relocatexml&#34; srcset=&#34;
               /userdir-change/save_relocatexml_hu3ba298fcb23f309abfb0ebc8563cb7a1_25356_3e06afd3fa0ed93458d9596c07b461a2.png 400w,
               /userdir-change/save_relocatexml_hu3ba298fcb23f309abfb0ebc8563cb7a1_25356_6e1f3aa199603d44bd373febd324a9b2.png 760w,
               /userdir-change/save_relocatexml_hu3ba298fcb23f309abfb0ebc8563cb7a1_25356_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/userdir-change/save_relocatexml_hu3ba298fcb23f309abfb0ebc8563cb7a1_25356_3e06afd3fa0ed93458d9596c07b461a2.png&#34;
               width=&#34;618&#34;
               height=&#34;469&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;생성한-unattended-answer-file을-이용하여-설치-진행&#34;&gt;생성한 unattended answer file을 이용하여 설치 진행&lt;/h4&gt;
&lt;p&gt;우선 관리자 권한으로 cmd를 켭니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;[WIN]+[R]을 눌러 실행 창을 띄움.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cmd&lt;/code&gt;를 입력하고, &lt;b&gt;[CTRL]+[SHIFT]+[ENTER]&lt;/b&gt;을 눌러 관리자 권한으로 실행.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;이어서, cmd창에 다음 명령어 두 줄을 입력합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;net stop WMPNetworkSvc
%windir%\system32\sysprep\sysprep.exe /oobe /reboot /unattend:d:\relocate.xml
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;2번 줄: &lt;code&gt;/unattend&lt;/code&gt; 항목의 값으로 &lt;font color=red&gt;위에서 저장한 &lt;code&gt;relocate.xml&lt;/code&gt;의 경로&lt;/font&gt;를 입력&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;다음과 같은 창이 뜬 뒤, 자동으로 재부팅될 것입니다. 이어서 Windows 설치를 진행하시면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;sysprep&#34; srcset=&#34;
               /userdir-change/sysprep_hu4e0e11ce90bd4e32d47273100a8fb68a_2017_5c1d9b4e6e9b00d05b48b87fb6a01e57.png 400w,
               /userdir-change/sysprep_hu4e0e11ce90bd4e32d47273100a8fb68a_2017_655790237fab0d95ab2a421bffb01d24.png 760w,
               /userdir-change/sysprep_hu4e0e11ce90bd4e32d47273100a8fb68a_2017_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/userdir-change/sysprep_hu4e0e11ce90bd4e32d47273100a8fb68a_2017_5c1d9b4e6e9b00d05b48b87fb6a01e57.png&#34;
               width=&#34;234&#34;
               height=&#34;144&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;긴 과정을 따라오시느라 고생하셨습니다.&lt;/p&gt;
&lt;p&gt;정상적으로 진행되었다면, 사용자 폴더들이 원하는 드라이브에 생성되어 있을 것입니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://itrainbowm.tistory.com/29&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://itrainbowm.tistory.com/29&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wisebee.tistory.com/13&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://wisebee.tistory.com/13&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.tenforums.com/tutorials/1964-move-users-folder-location-windows-10-a.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.tenforums.com/tutorials/1964-move-users-folder-location-windows-10-a.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://ks2colorworld.tistory.com/13&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://ks2colorworld.tistory.com/13&lt;/a&gt;&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Out-of-Box Experience의 약자로, 새로 설치된 Windows 제품을 처음 사용할 때의 단계를 의미.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Windows에 내장된 관리자 계정 모드로, 설치 시점에서 다양한 설정을 할 수 있게 해줌.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Windows의 설치 과정에서 사용할 설정 값이나 변수 등을 기록한 xml형식의 파일.&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;</description>
    </item>
    
    <item>
      <title>WSL을 다른 경로에 설치하는 법</title>
      <link>https://evandde.github.io/wsl-otherloc/</link>
      <pubDate>Thu, 08 Oct 2020 14:09:10 +0900</pubDate>
      <guid>https://evandde.github.io/wsl-otherloc/</guid>
      <description>&lt;p&gt;MS Store를 통해 WSL을 다운받아 설치하게 되면, WSL이 설치되는 경로는 &lt;code&gt;%LocalAppData%\Packages\[PackageName]&lt;/code&gt; 폴더 하위로 고정됩니다. 이 글에서는 Windows Subsystem for Linux를 기본 설치경로가 아닌 다른 경로에 설치하는 방법에 대해 알아봅니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    여기서는 WSL 설치를 위한 &lt;strong&gt;Windows 기능 켜기&lt;/strong&gt; 등의 설정이 완료된 상태라고 가정합니다. 이에 관한 전반적인 내용은 &lt;a href=&#34;https://evandde.github.io/wsl/&#34;&gt;이 글&lt;/a&gt;을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;tldr&#34;&gt;TL;DR&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/ko-kr/windows/wsl/install-manual?irgwc=1&amp;amp;OCID=AID2000142_aff_7593_1243925&amp;amp;tduid=%28ir__tmctq6trigkfrhgekk0sohzx0m2xjpbvc3r3s12c00%29%287593%29%281243925%29%28je6NUbpObpQ-EBkcl.71_gDZ2KcRFsI7Jw%29%28%29&amp;amp;irclickid=_tmctq6trigkfrhgekk0sohzx0m2xjpbvc3r3s12c00#downloading-distros?ranMID=24542&amp;amp;ranEAID=je6NUbpObpQ&amp;amp;ranSiteID=je6NUbpObpQ-EBkcl.71_gDZ2KcRFsI7Jw&amp;amp;epi=je6NUbpObpQ-EBkcl.71_gDZ2KcRFsI7Jw&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;이 페이지&lt;/a&gt;에서 원하는 배포판을 다운로드&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다음 명령어로 파일확장자 변경&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Rename-Item XXXX.appx XXXX.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다음 명령어로 압축 해제&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Expand-Archive XXXX.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;압축 해제 후 생성된 폴더에 들어가서 배포판 실행&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;배포판-다운로드&#34;&gt;배포판 다운로드&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/ko-kr/windows/wsl/install-manual?irgwc=1&amp;amp;OCID=AID2000142_aff_7593_1243925&amp;amp;tduid=%28ir__tmctq6trigkfrhgekk0sohzx0m2xjpbvc3r3s12c00%29%287593%29%281243925%29%28je6NUbpObpQ-EBkcl.71_gDZ2KcRFsI7Jw%29%28%29&amp;amp;irclickid=_tmctq6trigkfrhgekk0sohzx0m2xjpbvc3r3s12c00#downloading-distros?ranMID=24542&amp;amp;ranEAID=je6NUbpObpQ&amp;amp;ranSiteID=je6NUbpObpQ-EBkcl.71_gDZ2KcRFsI7Jw&amp;amp;epi=je6NUbpObpQ-EBkcl.71_gDZ2KcRFsI7Jw&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;이 페이지&lt;/a&gt;를 방문하여, 설치하고자 하는 배포판을 다운받습니다.&lt;/p&gt;
&lt;p&gt;원래 MS Store를 사용할 수 없을 때 이용하라고 만들어져 있는 페이지입니다만, 이 페이지를 이용하면 &lt;code&gt;.appx&lt;/code&gt; 형식의 파일을 받을 수 있습니다.&lt;/p&gt;
&lt;p&gt;WSL을 설치하고자 하는 경로에, 다운받은 &lt;code&gt;.appx&lt;/code&gt;파일을 옮겨둡니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;다운받은-appx파일의-압축-해제&#34;&gt;다운받은 Appx파일의 압축 해제&lt;/h2&gt;
&lt;p&gt;아래 그림과 같이 &lt;code&gt;.appx&lt;/code&gt; 파일을 옮겨둔 폴더에서 &lt;b&gt;파일-Windows PowerShell 열기(&lt;u&gt;R&lt;/u&gt;)-Windows PowerShell 열기(&lt;u&gt;R&lt;/u&gt;)&lt;/b&gt;를 통해 PowerShell을 실행합니다. (PowerShell을 실행하여 해당 경로로 들어오셔도 됩니다.)&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;open_powershell&#34; srcset=&#34;
               /wsl-otherloc/open_powershell_hu8e1747213ace481b8cf92b2d16242d4c_42163_eddabec272f9a0e3054db3ccee6bd713.png 400w,
               /wsl-otherloc/open_powershell_hu8e1747213ace481b8cf92b2d16242d4c_42163_e86c7291cea7062b37d3940cdf0f87c4.png 760w,
               /wsl-otherloc/open_powershell_hu8e1747213ace481b8cf92b2d16242d4c_42163_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/wsl-otherloc/open_powershell_hu8e1747213ace481b8cf92b2d16242d4c_42163_eddabec272f9a0e3054db3ccee6bd713.png&#34;
               width=&#34;760&#34;
               height=&#34;532&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;이어서 &lt;code&gt;Rename-Item&lt;/code&gt; 명령어를 통해 확장자를 zip파일로 바꾸고, &lt;code&gt;Expand-Archive&lt;/code&gt; 명령어를 통해 압축을 풀 것입니다. 예를들어 Ubuntu 20.04 배포판을 받았다면, &lt;code&gt;Ubuntu_2004.2020.424.0_x64.appx&lt;/code&gt; 파일이 다운받아질 것입니다(작성일 기준). 그렇다면 다음과 같이 명령어를 입력하면 됩니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;## 받은 appx 파일을 Ubuntu2004.zip으로 이름 변경
Rename-Item Ubuntu_2004.2020.424.0_x64.appx Ubuntu2004.zip
## zip 파일의 압축을 해제
Expand-Archive Ubuntu2004.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;배포판-실행하여-설치-마무리&#34;&gt;배포판 실행하여 설치 마무리&lt;/h2&gt;
&lt;p&gt;압축을 해제하면 압축파일과 동일한 폴더가 생성됩니다. 그 폴더 안에 배포판의 실행파일이 있을 것입니다.&lt;/p&gt;
&lt;p&gt;최초 실행 시에는 이 파일로 실행하셔야 합니다. 그러면 MS Store에서 설치하는 경우와 동일하게 자동으로 설치과정이 마무리되고 계정생성과정이 진행될 것입니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    이렇게 최초 실행 후 설치가 마무리된 뒤에는 MS Store로 설치한 WSL과 동일한 방법으로 사용/관리 할 수 있습니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;wsl_firstrun&#34; srcset=&#34;
               /wsl-otherloc/wsl_firstrun_hu667f8da113358d28593ba3aa96b0f8eb_32356_fd5de9c372a23a8b871a5a6bde87339a.png 400w,
               /wsl-otherloc/wsl_firstrun_hu667f8da113358d28593ba3aa96b0f8eb_32356_bb46f5ad519a74a5d627359c04d0a2c2.png 760w,
               /wsl-otherloc/wsl_firstrun_hu667f8da113358d28593ba3aa96b0f8eb_32356_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/wsl-otherloc/wsl_firstrun_hu667f8da113358d28593ba3aa96b0f8eb_32356_fd5de9c372a23a8b871a5a6bde87339a.png&#34;
               width=&#34;760&#34;
               height=&#34;396&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Windows Subsystem for Linux 소개 및 설치</title>
      <link>https://evandde.github.io/wsl/</link>
      <pubDate>Mon, 28 Sep 2020 15:41:22 +0900</pubDate>
      <guid>https://evandde.github.io/wsl/</guid>
      <description>&lt;p&gt;Windows Subsystem for Linux, 약칭 WSL을 설치하고 이용하는 법을 알아봅니다. 이 글은 WSL1과 WSL2을 둘 다 다룹니다.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Linux용 Windows 하위 시스템(Windows Subsystem for Linux, WSL)&lt;/b&gt;은 가상머신을 이용함에 따른 추가적인 메모리/CPU 소모나 듀얼부팅 설정 등을 요구하지 않으면서도, Windows 운영체제 하에서 Linux 기반의 대부분의 명령줄 도구, 유틸리티, 애플리케이션 등을 사용할 수 있게 해주는 서비스입니다.&lt;/p&gt;
&lt;p&gt;간단하게 말하면, Windows에서 Linux의 bash shell을 켤 수 있고, Linux 전용의 프로그램을 자유롭게 실행할 수 있게 된다는 뜻입니다. 그것도 별도의 가상머신 프로그램 없이 말이죠.&lt;/p&gt;
&lt;p&gt;이 글에서는 두 가지 WSL 버전인 WSL1과 WSL2의 차이를 살펴보고, 이를 설치하고 이용하는 방법에 대해 알아봅니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;tldr&#34;&gt;TL;DR&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;PowerShell을 &lt;strong&gt;관리자 권한&lt;/strong&gt;으로 실행한 뒤, Linux용 Windows 하위시스템 옵션을 사용하기 위해 다음 명령어 입력&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(&lt;strong&gt;WSL1 설치 시에는 이 과정 스킵&lt;/strong&gt;) PowerShell을 &lt;strong&gt;관리자 권한&lt;/strong&gt;으로 실행한 뒤, Virtual Machine 플랫폼 옵션을 사용하기 위해 다음 명령어 입력&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;재부팅&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(&lt;strong&gt;WSL1 설치 시에는 이 과정 스킵&lt;/strong&gt;) 본인의 아키텍쳐에 맞추어 Linux 커널 업데이트 패키지를 다운로드 후 설치&lt;/p&gt;
&lt;p&gt;x64용 다운로드 링크: &lt;a href=&#34;https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ARM64용 다운로드 링크: &lt;a href=&#34;https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_arm64.msi&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_arm64.msi&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(&lt;strong&gt;WSL1 설치 시에는 이 과정 스킵&lt;/strong&gt;) &lt;strong&gt;재부팅&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(&lt;strong&gt;WSL1 설치 시에는 이 과정 스킵&lt;/strong&gt;) PowerShell을 &lt;strong&gt;관리자 권한&lt;/strong&gt;으로 실행한 뒤, WSL2를 기본 버전으로 설정하기 위해 다음 명령어 입력&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;wsl --set-default-version 2
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://aka.ms/wslstore&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Microsoft Store&lt;/a&gt;에서 WSL 검색 후, 원하는 Linux 배포 설치&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;wsl1-vs-wsl2&#34;&gt;WSL1 vs. WSL2&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;wsl1vswsl2&#34; srcset=&#34;
               /wsl/wsl1vswsl2_hu21402894ff639c3b706e7b0f03279d4c_30847_f03b2ffd84047f8064db1ec405390a1f.png 400w,
               /wsl/wsl1vswsl2_hu21402894ff639c3b706e7b0f03279d4c_30847_ffd7c2df905853a04fcc13272138c1da.png 760w,
               /wsl/wsl1vswsl2_hu21402894ff639c3b706e7b0f03279d4c_30847_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/wsl/wsl1vswsl2_hu21402894ff639c3b706e7b0f03279d4c_30847_f03b2ffd84047f8064db1ec405390a1f.png&#34;
               width=&#34;760&#34;
               height=&#34;447&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;위의 비교 표에서 알 수 있듯, WSL2가 WSL1에 비해 대개 우수한 성능을 보입니다.&lt;/p&gt;
&lt;p&gt;다만, OS 파일시스템 간 성능 측면에서는 WSL1이 우수합니다.&lt;/p&gt;
&lt;h3 id=&#34;os-파일시스템-간-성능이란&#34;&gt;OS 파일시스템 간 성능이란&lt;/h3&gt;
&lt;p&gt;WSL에서 Windows의 저장소 공간에 접근하거나, 반대로 Windows에서 WSL의 저장소 공간에 접근할 때의 성능을 말합니다.&lt;/p&gt;
&lt;p&gt;Windows 탐색기에서 WSL 파일시스템의 하위경로로 접근하려면 &lt;code&gt;\\wsl$\&amp;lt;distro&amp;gt;\home\&amp;lt;username&amp;gt;\&lt;/code&gt;로 들어가면 됩니다.&lt;/p&gt;
&lt;p&gt;반대로 WSL에서 Windows의 파일시스템에 접근하고자 하는 경우에는  &lt;code&gt;/mnt/c&lt;/code&gt;/, &lt;code&gt;/mnt/d/&lt;/code&gt;, &amp;hellip;와 같은 경로로 들어가면 됩니다.&lt;/p&gt;
&lt;p&gt;이처럼 서로의 파일시스템에 교차하여 접근할 수 있기는 하지만 성능 저하의 우려가 있기 때문에, &lt;strong&gt;WSL에서 주로 사용할 파일은 되도록 WSL 파일시스템의 하위경로에 두고 사용할 것을 권장&lt;/strong&gt;합니다.&lt;/p&gt;
&lt;p&gt;&lt;u&gt;다만, WSL에서 사용되는 파일을 WSL 파일시스템에 두고 사용하기 어려워, Windows 파일시스템에의 교차 접근이 불가피하고 잦은 경우에는 WSL1을 이용하는 것이 더 나을 수 있습니다.&lt;/u&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;최소-요구사양&#34;&gt;최소 요구사양&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;운영체제: Windows 10 혹은 Windows server 2019&lt;/li&gt;
&lt;li&gt;아키텍쳐&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;: 64 bit&lt;/li&gt;
&lt;li&gt;빌드 버전&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;
&lt;ul&gt;
&lt;li&gt;WSL1을 설치하는 경우: Build 16215 이상&lt;/li&gt;
&lt;li&gt;WSL2를 설치하는 경우: Build 19041 이상&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;wsl1-설치하기&#34;&gt;WSL1 설치하기&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. Linux용 Windows 하위 시스템 사용&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PowerShell을 &lt;strong&gt;관리자 권한&lt;/strong&gt;으로 실행하고, 다음 명령어를 입력합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;2. 재부팅&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 원하는 Linux 배포를 다운로드하여 설치&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://aka.ms/wslstore&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Microsoft Store&lt;/a&gt;에서 WSL을 검색하고, 원하는 배포판을 설치하면 됩니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    MS Store에서 설치 시, 설치되는 경로는 &lt;code&gt;%LocalAppData%\Packages\[PackageName]&lt;/code&gt; 폴더 하위로 고정됩니다. 만약 별도로 원하는 경로에 설치하고자 하는 경우에는 &lt;a href=&#34;https://evandde.github.io/wsl-otherloc/&#34;&gt;이 글&lt;/a&gt;을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;msstore_wsl&#34; srcset=&#34;
               /wsl/msstore_wsl_hub5e786e5ccc62f0277ceea02caa79f4d_287720_39d145b5862e1e383033465f9e389e74.png 400w,
               /wsl/msstore_wsl_hub5e786e5ccc62f0277ceea02caa79f4d_287720_43b6d959df3f1f026c7f965c6fbd2aa0.png 760w,
               /wsl/msstore_wsl_hub5e786e5ccc62f0277ceea02caa79f4d_287720_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/wsl/msstore_wsl_hub5e786e5ccc62f0277ceea02caa79f4d_287720_39d145b5862e1e383033465f9e389e74.png&#34;
               width=&#34;760&#34;
               height=&#34;668&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;wsl2-설치하기&#34;&gt;WSL2 설치하기&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. Linux용 Windows 하위 시스템 사용&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PowerShell을 &lt;strong&gt;관리자 권한&lt;/strong&gt;으로 실행하고, 다음 명령어를 입력합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;2. Virtual Machine 플랫폼 사용&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PowerShell을 &lt;strong&gt;관리자 권한&lt;/strong&gt;으로 실행하고, 다음 명령어를 입력합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;3. 재부팅&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Linux 커널 업데이트 패키지 설치&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/ko-kr/windows/wsl/install-win10#step-4---download-the-linux-kernel-update-package&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;이 페이지&lt;/a&gt;를 방문하여 본인 시스템의 아키텍쳐에 맞는 Linux 커널 업데이트 패키지를 다운받습니다. 해당 페이지에 있는 링크를 그대로 아래에 복사해두었으니 아래를 이용하셔도 됩니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;x64용 다운로드 링크: &lt;a href=&#34;https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ARM64용 다운로드 링크: &lt;a href=&#34;https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_arm64.msi&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_arm64.msi&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;.msi 파일을 다운받으셨다면, 실행하여 설치를 진행합니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 재부팅&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. WSL2를 WSL의 기본버전으로 설정&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PowerShell을 &lt;strong&gt;관리자 권한&lt;/strong&gt;으로 열어 실행하고, 다음 명령어를 입력합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;wsl --set-default-version 2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;7. 원하는 Linux 배포를 다운로드하여 설치&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://aka.ms/wslstore&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Microsoft Store&lt;/a&gt;에서 WSL을 검색하고, 원하는 배포판을 설치하면 됩니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    MS Store에서 설치 시, 설치되는 경로는 &lt;code&gt;%LocalAppData%\Packages\[PackageName]&lt;/code&gt; 폴더 하위로 고정됩니다. 만약 별도로 원하는 경로에 설치하고자 하는 경우에는 &lt;a href=&#34;https://evandde.github.io/wsl-otherloc/&#34;&gt;이 글&lt;/a&gt;을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;설치한-배포판-실행&#34;&gt;설치한 배포판 실행&lt;/h2&gt;
&lt;p&gt;Microsoft Store를 통해 설치하면, 시작메뉴에 설치한 리눅스 배포판이 뜰 것입니다. 이를 처음 실행하면 추가적인 설치 마무리 작업을 수행한 뒤, 그 후 계정 생성 과정이 진행됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;wsl_firstrun&#34; srcset=&#34;
               /wsl/wsl_firstrun_hu667f8da113358d28593ba3aa96b0f8eb_32356_fd5de9c372a23a8b871a5a6bde87339a.png 400w,
               /wsl/wsl_firstrun_hu667f8da113358d28593ba3aa96b0f8eb_32356_bb46f5ad519a74a5d627359c04d0a2c2.png 760w,
               /wsl/wsl_firstrun_hu667f8da113358d28593ba3aa96b0f8eb_32356_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/wsl/wsl_firstrun_hu667f8da113358d28593ba3aa96b0f8eb_32356_fd5de9c372a23a8b871a5a6bde87339a.png&#34;
               width=&#34;760&#34;
               height=&#34;396&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;여기서 원하는 계정명과 비밀번호를 입력하여 계정생성을 하면 설치가 완료됩니다.&lt;/p&gt;
&lt;p&gt;이후에는, 아까와 같이 시작메뉴에서 배포판을 실행하거나, cmd/powershell/실행윈도우([WIN]+[R])에서 &lt;code&gt;wsl&lt;/code&gt;을 입력하여 실행할 수 있습니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;배포판의-관리&#34;&gt;배포판의 관리&lt;/h2&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    하나의 Windows 운영체제에 여러 개의 WSL을 설치할 수 있습니다. 또한, 각 WSL마다 버전을 달리하여, 어떤 것은 WSL1로, 어떤 것은 WSL2로 이용할 수도 있습니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;PowerShell에서 &lt;code&gt;wsl&lt;/code&gt; 명령어 뒤에 다양한 옵션을 입력하여, 설치한 wsl 배포판에 대한 다양한 설정을 할 수 있습니다.&lt;/p&gt;
&lt;p&gt;사용 가능한 명령어의 설명은 다음 명령어로 확인 가능합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;wsl --help
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;설치된-배포판-목록-확인&#34;&gt;설치된 배포판 목록 확인&lt;/h3&gt;
&lt;p&gt;현재 설치된 배포판을 확인하려면 다음 명령어를 입력합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;wsl -l
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;이 때, &lt;code&gt;-v&lt;/code&gt; 옵션을 더 추가하면, 각 배포판의 현재 상태와 더불어 WSL1/WSL2 중 어떤 버전인지에 대한 정보까지 출력할 수 있습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;wsl -l -v
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;wsl_list&#34; srcset=&#34;
               /wsl/wsl_list_hu6701df01d532b72f94bb1436845054a0_33362_7ac4cbfe67da2ebe6d673704465517c8.png 400w,
               /wsl/wsl_list_hu6701df01d532b72f94bb1436845054a0_33362_90d45a14bd6cad8bb9ac38bb18fb4ef9.png 760w,
               /wsl/wsl_list_hu6701df01d532b72f94bb1436845054a0_33362_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/wsl/wsl_list_hu6701df01d532b72f94bb1436845054a0_33362_7ac4cbfe67da2ebe6d673704465517c8.png&#34;
               width=&#34;760&#34;
               height=&#34;301&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;NAME 옆의 * 표시는 &lt;code&gt;wsl&lt;/code&gt; 이라는 명령어만 입력하였을때 실행되는 기본 wsl 배포판이 무엇인지 알려주는 표시입니다.&lt;/p&gt;
&lt;h3 id=&#34;기본-실행-배포판-변경&#34;&gt;기본 실행 배포판 변경&lt;/h3&gt;
&lt;p&gt;앞서 &lt;code&gt;wsl -l&lt;/code&gt; 명령어로 확인한 배포판의 이름(예: &lt;code&gt;Ubuntu-20.04&lt;/code&gt;)을 확인한 뒤, &lt;code&gt;-s &amp;lt;Distro&amp;gt;&lt;/code&gt; 옵션을 이용합니다.&lt;/p&gt;
&lt;p&gt;예를 들어 기본 실행 배포판을 Ubuntu-20.04로 변경하는 경우에는 다음과 같이 입력합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;wsl -s Ubuntu-20.04
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;설치된-배포판의-버전-변경wsl1wsl2&#34;&gt;설치된 배포판의 버전 변경(WSL1/WSL2)&lt;/h3&gt;
&lt;p&gt;앞서 &lt;code&gt;wsl -l&lt;/code&gt; 명령어로 확인한 배포판의 이름(예: &lt;code&gt;Ubuntu-20.04&lt;/code&gt;)을 확인한 뒤, &lt;code&gt;--set-version &amp;lt;Distro&amp;gt; &amp;lt;버전&amp;gt;&lt;/code&gt; 옵션을 이용합니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    WSL1에서 WSL2로 올리는 것도 되고, 반대로 WSL2에서 WSL1로 내리는 것도 가능합니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;예를 들어 Ubuntu-20.04 배포판을 WSL2로 변경하는 경우에는 다음과 같이 입력합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;wsl --set-version Ubuntu-20.04 2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;수 분 정도 소요될 수 있습니다. 기다리면 배포판의 버전이 자동으로 변경됩니다.&lt;/p&gt;
&lt;h3 id=&#34;설치된-배포판의-제거&#34;&gt;설치된 배포판의 제거&lt;/h3&gt;
&lt;p&gt;앞서 &lt;code&gt;wsl -l&lt;/code&gt; 명령어로 확인한 배포판의 이름(예: &lt;code&gt;Ubuntu-20.04&lt;/code&gt;)을 확인한 뒤, &lt;code&gt;--unregister &amp;lt;Distro&amp;gt;&lt;/code&gt; 옵션을 이용합니다.&lt;/p&gt;
&lt;p&gt;예를 들어 Ubuntu-20.04 배포판을 제거하는 경우에는 다음과 같이 입력합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;wsl --unregister Ubuntu-20.04
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;이 후에, MS store에서 설치한 내역을 찾아 uninstall까지 해주면 완전히 제거됩니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;wsl에서-windows-파일시스템-접근&#34;&gt;WSL에서 Windows 파일시스템 접근&lt;/h2&gt;
&lt;p&gt;Windows의 디스크 드라이브는 WSL에서 &lt;code&gt;/mnt/c&lt;/code&gt;, &lt;code&gt;/mnt/d&lt;/code&gt;&amp;hellip; 등으로 마운트되어 있습니다. 사용자가 별도로 마운트하지 않아도 바로 접근이 가능합니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    USB나 media drive 등 이동식 디스크에 대해서는 마운트 방법이 지원되지 않고 있습니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;windows에서-wsl-파일시스템-접근&#34;&gt;Windows에서 WSL 파일시스템 접근&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;\\wsl$\&amp;lt;Distro&amp;gt;\&lt;/code&gt; 경로를 갖는 네트워크 드라이브로 접근할 수 있습니다. 예를 들어 Ubuntu-20.04 배포판의 파일시스템은 &lt;code&gt;\\wsl$\Ubuntu-20.04\&lt;/code&gt;로 접근할 수 있습니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    만약 탐색기에서 &lt;code&gt;\\wsl$\&lt;/code&gt;에 접근 시 하위 목록이 보이지 않는다면, 한 번도 해당 인스턴스가 기동되지 않았기 때문입니다. 경로 입력란에 &lt;code&gt;\\wsl$\&amp;lt;Distro&amp;gt;&lt;/code&gt;를 입력하여 한 번 들어가고 난 뒤부터는 표시가 될 것입니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://docs.microsoft.com/en-us/windows/wsl/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://cloudlinuxtech.com/install-linux-on-windows-10-wsl/#Prerequisite_to_install_WSL1_or_WSL2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://cloudlinuxtech.com/install-linux-on-windows-10-wsl/#Prerequisite_to_install_WSL1_or_WSL2&lt;/a&gt;&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;[WIN]+[R]로 실행 창을 연 뒤, &lt;code&gt;msinfo32&lt;/code&gt;를 입력하여 시스템 정보 창을 띄우고, &lt;strong&gt;시스템 종류&lt;/strong&gt;를 확인합니다.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;[WIN]+[R]로 실행 창을 연 뒤, &lt;code&gt;msinfo32&lt;/code&gt;를 입력하여 시스템 정보 창을 띄우고, &lt;strong&gt;버전&lt;/strong&gt;을 확인합니다.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;</description>
    </item>
    
    <item>
      <title>Windows 실행([WIN]&#43;[R]) 명령어 정리</title>
      <link>https://evandde.github.io/windowrun/</link>
      <pubDate>Thu, 24 Sep 2020 23:07:12 +0900</pubDate>
      <guid>https://evandde.github.io/windowrun/</guid>
      <description>&lt;p&gt;이 글에서는 &lt;b&gt;시작-실행&lt;/b&gt; 혹은 단축키 &lt;b&gt;[WIN]+[R]&lt;/b&gt;을 통해 띄울 수 있는 실행 창에서 사용 가능한 다양한 명령어를 정리해 봅니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;run&#34; srcset=&#34;
               /windowrun/run_hu9e8321c22afa1e03261d9f36a197b4cf_8782_42e54cebf8eb1262da46ea61982c6edc.png 400w,
               /windowrun/run_hu9e8321c22afa1e03261d9f36a197b4cf_8782_4d19731ad97a3adf486797db7c3eb3b2.png 760w,
               /windowrun/run_hu9e8321c22afa1e03261d9f36a197b4cf_8782_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/windowrun/run_hu9e8321c22afa1e03261d9f36a197b4cf_8782_42e54cebf8eb1262da46ea61982c6edc.png&#34;
               width=&#34;399&#34;
               height=&#34;206&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;사용법&#34;&gt;사용법&lt;/h2&gt;
&lt;h3 id=&#34;기본적인-사용&#34;&gt;기본적인 사용&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;실행 창을 띄웁니다. (&lt;b&gt;시작-실행&lt;/b&gt; 혹은 단축키 &lt;b&gt;[WIN]+[R]&lt;/b&gt;)&lt;/li&gt;
&lt;li&gt;&lt;b&gt;열기(&lt;u&gt;O&lt;/u&gt;):&lt;/b&gt; 라고 표시된 상자 안에 명령어를 입력합니다. (대소문자는 상관 없습니다)&lt;/li&gt;
&lt;li&gt;확인을 누릅니다. (혹은 &lt;b&gt;[ENTER]&lt;/b&gt;를 누릅니다.)&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;관리자-권한으로-실행&#34;&gt;관리자 권한으로 실행&lt;/h3&gt;
&lt;p&gt;어떤 명령어든, 위의 사용법 설명에서 확인을 누르는 대신, &lt;b&gt;[CTRL]+[SHIFT]+[ENTER]&lt;/b&gt;를 누르면, 해당 명령어가 &lt;strong&gt;관리자 권한으로 실행&lt;/strong&gt;됩니다.&lt;/p&gt;
&lt;p&gt;주로 cmd나 powershell 등을 관리자권한으로 실행하고 싶을 때 사용하면 좋습니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;응용프로그램-명령어&#34;&gt;응용프로그램 명령어&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;명령어&lt;/th&gt;
&lt;th&gt;결과&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;calc&lt;/td&gt;
&lt;td&gt;계산기&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cmd&lt;/td&gt;
&lt;td&gt;커맨드 창&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mspaint&lt;/td&gt;
&lt;td&gt;그림판&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;notepad&lt;/td&gt;
&lt;td&gt;메모장&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;powershell&lt;/td&gt;
&lt;td&gt;파워셸&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&#34;환경변수로-정의된-폴더명&#34;&gt;환경변수로 정의된 폴더명&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;명령어&lt;/th&gt;
&lt;th&gt;결과&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;%AppData%&lt;/td&gt;
&lt;td&gt;현재 로그인한 사용자계정 폴더 내에 숨김처리된 AppData\Roaming\ 폴더 (일반적으로 C:\Users\&amp;lt;계정명&amp;gt;\Appdata\Roaming\)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%LocalAppData%&lt;/td&gt;
&lt;td&gt;현재 로그인한 사용자계정 폴더 내에 숨김처리된 AppData\Local\ 폴더 (일반적으로 C:\Users\&amp;lt;계정명&amp;gt;\Appdata\Local\)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%ProgramData%&lt;/td&gt;
&lt;td&gt;ProgramData 폴더 (일반적으로 C:\ProgramData\)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%ProgramFiles%&lt;/td&gt;
&lt;td&gt;Program Files 폴더 (일반적으로 C:\Program Files\)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%ProgramFiles(x86)%&lt;/td&gt;
&lt;td&gt;Program Files (x86) 폴더. 64 bit 전용 (일반적으로 C:\Program Files (x86)\)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%UserProfile%&lt;/td&gt;
&lt;td&gt;현재 로그인한 사용자계정 폴더 (일반적으로 C:\Users\&amp;lt;계정명&amp;gt;\)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%WinDir%&lt;/td&gt;
&lt;td&gt;Windows 폴더 (일반적으로 C:\Windows\)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;shell:Startup&lt;/td&gt;
&lt;td&gt;현재 사용자의 시작프로그램 폴더&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;shell:Common Startup&lt;/td&gt;
&lt;td&gt;모든 사용자를 위한 시작프로그램 폴더&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&#34;windows-시스템&#34;&gt;Windows 시스템&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;명령어&lt;/th&gt;
&lt;th&gt;결과&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;appwiz.cpl&lt;/td&gt;
&lt;td&gt;프로그램 제거 또는 변경&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cleanmgr&lt;/td&gt;
&lt;td&gt;디스크 정리&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;compmgmt.msc&lt;/td&gt;
&lt;td&gt;컴퓨터 관리&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;control&lt;/td&gt;
&lt;td&gt;제어판&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;desk.cpl&lt;/td&gt;
&lt;td&gt;디스플레이 설정&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;devmgmt.msc&lt;/td&gt;
&lt;td&gt;장치 관리자&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;diskmgmt.msc&lt;/td&gt;
&lt;td&gt;디스크 관리&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dxdiag&lt;/td&gt;
&lt;td&gt;Direct X 진단 도구&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;firewall.cpl&lt;/td&gt;
&lt;td&gt;방화벽&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mmsys.cpl&lt;/td&gt;
&lt;td&gt;사운드 및 오디오 등록정보&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mrt&lt;/td&gt;
&lt;td&gt;악성 소프트웨어 제거 도구&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mstsc&lt;/td&gt;
&lt;td&gt;원격 데스크탑 연결&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mstsc /v &amp;lt;IP주소&amp;gt;&lt;/td&gt;
&lt;td&gt;IP 주소를 명시하여 원격 데스크탑 연결 실행&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ncpa.cpl&lt;/td&gt;
&lt;td&gt;네트워크 연결 정보&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;optionalfeatures&lt;/td&gt;
&lt;td&gt;Windows 기능 켜기/끄기&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;perfmon.msc&lt;/td&gt;
&lt;td&gt;성능 모니터 뷰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;powercfg.cpl&lt;/td&gt;
&lt;td&gt;전원 옵션&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;regedit&lt;/td&gt;
&lt;td&gt;레지스트리 편집기&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;services.msc&lt;/td&gt;
&lt;td&gt;서비스&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sndvol&lt;/td&gt;
&lt;td&gt;볼륨 Mixer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sysdm.cpl&lt;/td&gt;
&lt;td&gt;시스템 속성&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;taskmgr&lt;/td&gt;
&lt;td&gt;Windows 작업 관리자&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;taskschd.msc&lt;/td&gt;
&lt;td&gt;작업 스케줄러&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;winver&lt;/td&gt;
&lt;td&gt;Windows 버전 정보&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>Windows용 패키지 관리자 Chocolatey(choco) 설치 및 이용하기</title>
      <link>https://evandde.github.io/chocolatey/</link>
      <pubDate>Thu, 24 Sep 2020 07:05:42 +0900</pubDate>
      <guid>https://evandde.github.io/chocolatey/</guid>
      <description>&lt;p&gt;이 글에서는 Windows용 패키지 관리자인 Chocolatey(약칭: choco)를 설치하고 이용하는 방법에 대해 알아봅니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;choco&#34; srcset=&#34;
               /chocolatey/choco_hu02ed5e5f07537358b72c8023e76b32cb_16662_df2dede2c3df1cd27d967ad237c1dbac.png 400w,
               /chocolatey/choco_hu02ed5e5f07537358b72c8023e76b32cb_16662_28f6a702d2e66ce6271d9e0e252e24f0.png 760w,
               /chocolatey/choco_hu02ed5e5f07537358b72c8023e76b32cb_16662_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/chocolatey/choco_hu02ed5e5f07537358b72c8023e76b32cb_16662_df2dede2c3df1cd27d967ad237c1dbac.png&#34;
               width=&#34;324&#34;
               height=&#34;220&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://chocolatey.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chocolatey&lt;/a&gt;는 Linux에서의 &lt;a href=&#34;https://salsa.debian.org/apt-team/apt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;apt(apt-get)&lt;/a&gt;, &lt;a href=&#34;http://yum.baseurl.org/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;yum&lt;/a&gt;이나 macOS에서의 &lt;a href=&#34;https://brew.sh/index_ko.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Homebrew&lt;/a&gt;처럼 패키지를 설치/업데이트/제거 등 관리하는 데에 사용하는 Windows용 프로그램입니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;Chocolatey로 프로그램의 설치/제거 등을 하실 때에는 &lt;strong&gt;관리자 권한&lt;/strong&gt;으로 작업하셔야 합니다. 관리자 권한 없이 이용하려면 설치경로의 변경 등의 작업이 요구됩니다.&lt;/p&gt;
&lt;p&gt;(참고: &lt;a href=&#34;https://chocolatey.org/install#non-administrative-install&#34;&gt;https://chocolatey.org/install#non-administrative-install&lt;/a&gt;)&lt;/p&gt;

  &lt;/div&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;chocolatey-설치하기&#34;&gt;Chocolatey 설치하기&lt;/h2&gt;
&lt;h3 id=&#34;요구사항&#34;&gt;요구사항&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Windows 7+/ Windows Server 2003+&lt;/li&gt;
&lt;li&gt;Powershell v2+ (온라인 설치 시 v3+)&lt;/li&gt;
&lt;li&gt;.Net Framework 4+ (온라인 설치 시 4.5+)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;cmdexe로-설치하기&#34;&gt;cmd.exe로 설치하기&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;cmd.exe를 관리자 권한으로 실행합니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다음 명령줄을 실행합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;@&amp;quot;%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe&amp;quot; -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command &amp;quot; [System.Net.ServicePointManager]::SecurityProtocol = 3072; iex ((New-Object System.Net.WebClient).DownloadString(&#39;https://chocolatey.org/install.ps1&#39;))&amp;quot; &amp;amp;&amp;amp; SET &amp;quot;PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;powershellexe로-설치하기&#34;&gt;PowerShell.exe로 설치하기&lt;/h3&gt;
&lt;p&gt;PowerShell로 설치할 때에는 실행 정책(Execution Policy)상 제한이 걸리지 않도록 설정하는 과정이 추가적으로 필요할 수 있습니다. 실행 정책에 관해서는 간단하게 &lt;code&gt;Bypass&lt;/code&gt; 옵션을 사용하셔도 되고, 좀 더 보안을 신경쓰신다면 &lt;code&gt;AllSigned&lt;/code&gt; 옵션을 사용하셔도 됩니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;PowerShell.exe를 관리자 권한으로 실행합니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Get-ExecutionPolicy&lt;/code&gt; 명령어로 실행 정책을 확인합니다. 만약 &lt;code&gt;Restricted&lt;/code&gt;가 출력된다면, &lt;code&gt;Set-ExecutionPolicy AllSigned&lt;/code&gt; 나, &lt;code&gt;Set-ExecutionPolicy Bypass -Scope Process&lt;/code&gt;를 입력하여 제한을 풀어줍니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;이제 다음의 명령줄을 실행합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString(&#39;https://chocolatey.org/install.ps1&#39;))
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;그-외의-방법으로-설치하기&#34;&gt;그 외의 방법으로 설치하기&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://chocolatey.org/docs/installation#more-install-options&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;chocolatey 공식 홈페이지를 참고&lt;/a&gt;하세요.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;chocolatey-이용하기&#34;&gt;Chocolatey 이용하기&lt;/h2&gt;
&lt;h3 id=&#34;패키지-검색하기&#34;&gt;패키지 검색하기&lt;/h3&gt;
&lt;p&gt;choco로 설치 가능한 전체 패키지 목록은 &lt;a href=&#34;https://chocolatey.org/packages&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://chocolatey.org/packages&lt;/a&gt;에서 확인할 수 있습니다.&lt;/p&gt;
&lt;p&gt;혹은, cmd나 PowerShell에서 &lt;code&gt;choco search&lt;/code&gt; 명령어로 검색이 가능합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;choco search 검색할내용
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;choco_search&#34; srcset=&#34;
               /chocolatey/choco_search_hu293f8915d22526c78a36e432991d23a5_111115_f6f2d08756bd65a7b4a84c2668c552a9.png 400w,
               /chocolatey/choco_search_hu293f8915d22526c78a36e432991d23a5_111115_d55506e1abac48b907a2cdef2fdf9992.png 760w,
               /chocolatey/choco_search_hu293f8915d22526c78a36e432991d23a5_111115_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/chocolatey/choco_search_hu293f8915d22526c78a36e432991d23a5_111115_f6f2d08756bd65a7b4a84c2668c552a9.png&#34;
               width=&#34;708&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;추가적으로 다음과 같은 옵션을 사용할 수도 있습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;검색할내용과 정확하게 일치하는 항목만 출력하기: &lt;code&gt;-e&lt;/code&gt; (&lt;code&gt;--exact&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;패키지에 대한 자세한 정보 출력하기: &lt;code&gt;--detailed&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;현재 컴퓨터에 설치된 패키지 목록 출력하기: &lt;code&gt;-l&lt;/code&gt; (&lt;code&gt;--local&lt;/code&gt;) (&lt;a href=&#34;https://evandde.github.io/chocolatey/#설치한-패키지-목록-보기&#34;&gt;아래(설치한 패키지 목록 보기)&lt;/a&gt; 참고)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;패키지-설치하기&#34;&gt;패키지 설치하기&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;choco install&lt;/code&gt; 명령어를 통해 패키지를 설치할 수 있습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;choco install 패키지이름
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;추가적으로 다음과 같은 옵션을 사용할 수도 있습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;설치 시 확인여부를 묻는 내용을 띄우지 않고 무조건 수락하기: &lt;code&gt;-y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;특정 버전을 설치하기: &lt;code&gt;--version 버전번호&lt;/code&gt; (예: &lt;code&gt;choco install python --version 3.8.5&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;설치한-패키지-목록-보기&#34;&gt;설치한 패키지 목록 보기&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;choco search&lt;/code&gt; 명령어 뒤에 &lt;code&gt;-l&lt;/code&gt;옵션을 쓰면, 현재 이 컴퓨터에 설치된 목록을 출력해줍니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;choco search -l
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;패키지-삭제하기&#34;&gt;패키지 삭제하기&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;choco uninstall&lt;/code&gt; 명령어를 통해 설치한 패키지를 삭제할 수 있습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;choco uninstall 패키지이름
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;패키지-업그레이드하기&#34;&gt;패키지 업그레이드하기&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;choco upgrade&lt;/code&gt; 명령어를 통해 설치한 패키지를 업그레이드할 수 있습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;choco upgrade 패키지이름
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;choco upgrade chocolatey&lt;/code&gt; 명령어를 입력하면, chocolatey도 최신화할 수 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;choco upgrade all&lt;/code&gt; 명령어를 입력하면, 현재 컴퓨터에 설치된 모든 패키지(chocolatey 포함)를 최신화할 수 있습니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://chocolatey.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://chocolatey.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/chocolatey/choco/wiki&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/chocolatey/choco/wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://chocolatey.org/docs/commands-reference&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://chocolatey.org/docs/commands-reference&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Geant4 공식 설치가이드 요약</title>
      <link>https://evandde.github.io/geant4-install/</link>
      <pubDate>Mon, 15 Feb 2021 12:45:56 +0900</pubDate>
      <guid>https://evandde.github.io/geant4-install/</guid>
      <description>&lt;p&gt;이 글에서는 Geant4 공식 홈페이지에서 제공하는 설치가이드를 살펴보고, 대표적으로 사용되는 주요 옵션들에 대해 알아봅니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;공식-설치가이드-위치&#34;&gt;공식 설치가이드 위치&lt;/h2&gt;
&lt;p&gt;제가 각 설치환경에서의 예시 글을 통해 설명드릴 수 있는 내용은 제한적입니다. 그러므로 공식 설치가이드가 어디에 있으며, 그 가이드에서 무엇을 살펴봐야 하는지 알려드리도록 하겠습니다.&lt;/p&gt;
&lt;p&gt;우선 설치가이드는 다음의 과정을 따라가시면 확인할 수 있습니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://geant4.web.cern.ch/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Geant4 공식 홈페이지&lt;/a&gt; 접속&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;화면 중간의 &lt;strong&gt;User Support&lt;/strong&gt; 탭에 있는 &lt;a href=&#34;http://geant4.web.cern.ch/support/user_documentation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;guides&lt;/a&gt; 클릭&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;이후 나오는 User Documentation 페이지에서, &lt;a href=&#34;http://geant4-userdoc.web.cern.ch/geant4-userdoc/UsersGuides/InstallationGuide/html/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Installation Guide: For setting up Geant4 in your computing environment&lt;/a&gt;를 클릭 (pdf로 다운받거나, 혹은 이전 버전의 것을 볼 수도 있음)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;설치가이드에 도착!&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;G4InstallGuide&#34; srcset=&#34;
               /geant4-install/G4InstallGuide_hu4de46dcaec84922cf7a201198da5b837_159320_b29519200c07ff596506457ef85eaa8a.png 400w,
               /geant4-install/G4InstallGuide_hu4de46dcaec84922cf7a201198da5b837_159320_183948af928f984c05dc5fb4d7acedcf.png 760w,
               /geant4-install/G4InstallGuide_hu4de46dcaec84922cf7a201198da5b837_159320_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/geant4-install/G4InstallGuide_hu4de46dcaec84922cf7a201198da5b837_159320_b29519200c07ff596506457ef85eaa8a.png&#34;
               width=&#34;760&#34;
               height=&#34;643&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;설치-필수선택사항-확인&#34;&gt;설치 필수/선택사항 확인&lt;/h2&gt;
&lt;p&gt;이 가이드에서 가장 먼저 보셔야할 부분은 &lt;strong&gt;Getting Started&lt;/strong&gt; 탭입니다. 이 곳에는 설치에 필요한 &lt;strong&gt;필수 사항&lt;/strong&gt;과, 꼭 필요하지는 않지만 편의에 따라 연동 가능한 &lt;strong&gt;선택 사항&lt;/strong&gt;에 대한 요구조건이 적혀있습니다.&lt;/p&gt;
&lt;h3 id=&#34;필수-사항&#34;&gt;필수 사항&lt;/h3&gt;
&lt;p&gt;맨처음에 나오는 &lt;strong&gt;OS/Software Prerequisites&lt;/strong&gt;는 &lt;strong&gt;필수 사항&lt;/strong&gt;에 대한 설명입니다.&lt;/p&gt;
&lt;p&gt;몇 가지 부분만 추려서 적어보겠습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;OS/Software Prerequisites&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Geant4 Toolkit &lt;a href=&#34;https://geant4.web.cern.ch/support/download&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;소스 코드&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;C++ 컴파일러 및 C++11 표준을 지원하는 표준 라이브러리
&lt;ul&gt;
&lt;li&gt;Linux의 경우에는 &lt;a href=&#34;http://gcc.gnu.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GNU Compiler Collection&lt;/a&gt;(GCC) 4.9.3 이상
&lt;ul&gt;
&lt;li&gt;패키지 관리 시스템에서 기본 제공하는 GCC 컴파일러를 사용할 것을 강력히 권장함 (기본 제공 컴파일러가 버전 미달이면 따로 설치)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cmake.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CMake&lt;/a&gt; 3.8 이상
&lt;ul&gt;
&lt;li&gt;패키지 관리 시스템에서 기본 제공하는 CMake를 사용할 것을 권장함 (기본 제공 CMake가 버전 미달이면 따로 설치하되, &lt;a href=&#34;https://cmake.org/download/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CMake 공식 다운로드 페이지&lt;/a&gt;에서 제공하는 binary 실행파일을 통한 최신버전 설치를 권장함)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;선택-사항&#34;&gt;선택 사항&lt;/h3&gt;
&lt;p&gt;다음으로 살펴야 할 내용은 &lt;strong&gt;Prerequisites for Optional Components of Geant4&lt;/strong&gt; 입니다. 이는 &lt;strong&gt;선택 사항&lt;/strong&gt;에 대한 설명입니다. 연동하여 설치할 수 있는 다양한 라이브러리가 제시되어 있습니다.&lt;/p&gt;
&lt;p&gt;먼저 CLHEP, Expat, zlib 관련 내용입니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;CLHEP, Expat and zlib Support Libraries&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cern.ch/clhep/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CLHEP&lt;/a&gt;, &lt;a href=&#34;https://libexpat.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Expat&lt;/a&gt;, &lt;a href=&#34;https://zlib.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;zlib&lt;/a&gt;의 경우, Geant4에서 요구하는 최소한의 내용은 내장되어 있음&lt;/li&gt;
&lt;li&gt;다만 Linux와 macOS용 버전에는 Expat이 내장되어 있지 않으므로 별도 설치가 요구됨&lt;/li&gt;
&lt;li&gt;사용자가 해당 라이브러리의 기능을 더욱 확장하여 사용하고자 하는 경우 추가적으로 연동하여 설치&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;위 내용 상, Linux에서 Geant4를 설치하는 경우에는 &lt;strong&gt;Expat은 필수 사항&lt;/strong&gt;으로 봐도 무방합니다.&lt;/p&gt;
&lt;p&gt;다음은 GDML 부분(&lt;strong&gt;GDML XML Geometry Support&lt;/strong&gt;)입니다. 이는 Geometry 입출력을 위한 라이브러리 중 하나입니다만, 여기서는 생략하겠습니다.&lt;/p&gt;
&lt;p&gt;다음은 그래픽 및 UI 사용을 위해 대부분 연동하여 설치하는 UI 및 가시화 관련 내용(&lt;strong&gt;User Interface and Visualization Drivers&lt;/strong&gt;)입니다.&lt;/p&gt;
&lt;p&gt;여기서는 대표적으로 많이 사용되는 Qt 라이브러리 관련 내용만 적겠습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;User Interface and Visualization Drivers&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;아래에 나열한 패키지의 설치와 더불어, 사용자 시스템에 사용된 그래픽카드(NVIDIA 등)의 드라이버를 설치할 것을 강력히 권고합니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Qt UI 및 가시화 관련(모든 플랫폼)
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.qt.io/download-qt-for-application-development&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Qt5&lt;/a&gt; 헤더 및 라이브러리(Qt4는 이제 사용하지 않음)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.opengl.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OpenGL&lt;/a&gt; 혹은 &lt;a href=&#34;https://www.mesa3d.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MesaGL&lt;/a&gt;의 헤더 및 라이브러리&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;X11 OpenGL 가시화 관련(Linux, macOS)
&lt;ul&gt;
&lt;li&gt;X11 헤더 및 라이브러리&lt;/li&gt;
&lt;li&gt;혹은 &lt;a href=&#34;https://www.mesa3d.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MesaGL&lt;/a&gt;의 헤더 및 라이브러리&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;이 외에도 다양한 UI 및 가시화 옵션이 있으니 참고하시기 바랍니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;설치-옵션-확인하기&#34;&gt;설치 옵션 확인하기&lt;/h2&gt;
&lt;p&gt;설치가이드에서 다음으로 확인하셔야 할 부분은 &lt;strong&gt;Building and Installing&lt;/strong&gt; 탭입니다. 이 곳에는 여러분이 설치를 진행할 때, 어떤 옵션을 어떻게 주어야 원하는 조건에 따라 설치가 가능한 지에 대해 설명되어 있습니다.&lt;/p&gt;
&lt;p&gt;운영체제에 따라 핵심적인 설치 방법이 따로 정리되어 있습니다.&lt;/p&gt;
&lt;p&gt;특히, &lt;strong&gt;Geant4 Build Option&lt;/strong&gt; 이하의 내용에 추가옵션을 설정하는 방법이 기재되어 있습니다. 세부적인 설정을 변경하는 방법을 찾으신다면 이 부분을 살펴보시는 것도 좋습니다.&lt;/p&gt;
&lt;p&gt;여기서는 자주 사용되는 몇 가지만 다루겠습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Geant4 Build Option&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&amp;hellip;&lt;/p&gt;
&lt;p&gt;설치 시 다양한 옵션을 &lt;code&gt;cmake&lt;/code&gt; 명령어에서 &lt;code&gt;-D&lt;/code&gt; 플래그를 통해 설정할 수 있습니다.&lt;/p&gt;
&lt;p&gt;예를 들면, 다음과 같이 명령줄을 입력하면 설치경로(&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;)를 &lt;code&gt;/opt/geant4&lt;/code&gt;로 설정하고, GDML을 지원하게끔 설치하게 됩니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cmake -DCMAKE_INSTALL_PREFIX=/opt/geant4 -DGEANT4_USE_GDML=ON /path/to/geant4-source
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;hellip;&lt;/p&gt;
&lt;p&gt;CMake는 Curses (UNIX 한정)나 Qt (UNIX 혹은 Windows) 기반의 터미널/GUI 형태의 인터페이스도 제공하고 있으므로, 이를 활용하여 다양한 옵션을 살펴보고 설정할 수 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Standard Options&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;Geant4가 설치될 경로. Autotools에서의 &lt;code&gt;--prefix&lt;/code&gt;와 동일.&lt;/li&gt;
&lt;li&gt;Unix 시스템의 기본값은 &lt;code&gt;/usr/local&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;절대경로로 입력하기를 권장.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;hellip;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;GEANT4_BUILD_MULTITHREADED&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;기본값은 &lt;code&gt;OFF&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ON&lt;/code&gt;으로 설정되면, Geant4 라이브러리가 multi-threading을 지원하도록 빌드함.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GEANT4_INSTALL_DATA&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;기본값은 &lt;code&gt;OFF&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ON&lt;/code&gt;으로 설정되면, Geant4 설치 및 사용에 필요한 크로스섹션 데이터를 &lt;code&gt;GEANT4_INSTALL_DATADIR&lt;/code&gt;에서 찾아본 뒤, 부족한 데이터를 자동으로 인터넷에서 다운받은 뒤 압축을 풀어 &lt;code&gt;GEANT4_INSTALL_DATADIR&lt;/code&gt;에 넣고 설치를 진행함.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GEANT4_INSTALL_DATADIR&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;기본값은 &lt;code&gt;CMAKE_INSTALL_DATAROOTDIR&lt;/code&gt;. 설치경로의 &lt;code&gt;share/&lt;/code&gt; 임.&lt;/li&gt;
&lt;li&gt;Geant4 설치 및 사용에 필요한 크로스섹션 데이터를 이 경로에서 탐색함.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;hellip;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;GEANT4_USE_QT&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;기본값은 &lt;code&gt;OFF&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ON&lt;/code&gt;으로 설정되면, Qt5 UI 및 가시화 라이브러리를 연동하여 빌드함.&lt;/li&gt;
&lt;li&gt;경로 관련 문제가 발생하면, Advanced Options 부분의 &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; 항목을 참고.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GEANT4_USE_OPENGL_X11&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;기본값은 &lt;code&gt;OFF&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ON&lt;/code&gt;으로 설정되면, X11 OpenGL 가시화 라이브러리를 연동하여 빌드함.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Geant4 Windows 10에 설치 무작정 따라하기(초보자용)</title>
      <link>https://evandde.github.io/g4install-107p2-win10basic/</link>
      <pubDate>Thu, 15 Jul 2021 21:41:51 +0900</pubDate>
      <guid>https://evandde.github.io/g4install-107p2-win10basic/</guid>
      <description>&lt;p&gt;이 글은 Geant4 초보자 혹은 Geant4를 처음 사용하시는 분들에게, &lt;b&gt;Windows 10을 사용하는 개인 컴퓨터 환경&lt;/b&gt;에서 Geant4를 최대한 쉽게 설치하는 방법을 전달하기 위해 작성하였습니다. &lt;b&gt;(인터넷 연결 필요)&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;이 글에서 제시하는 방향보다, 각자에게 더 적합한 Geant4 설치 방향이 있을 수 있습니다.&lt;/p&gt;
&lt;p&gt;하지만, 이 글은 &lt;b&gt;배경지식 없이도 실무에 사용 가능한 수준으로 Geant4를 설치하는 것을 목적&lt;/b&gt;으로 하기 때문에, 작업 난이도 측면에서 쉬운 방향을 택하였습니다.&lt;/p&gt;
&lt;p&gt;다양한 설치 옵션을 입맛에 맞게 변경하기보다는, &amp;ldquo;&lt;strong&gt;우선 Geant4라는걸 써봐야겠다&lt;/strong&gt;&amp;rdquo; 라는 분에게 권장합니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;작업-흐름-요약&#34;&gt;작업 흐름 요약&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Windows 10에 Microsoft Visual Studio 2019에 포함된 빌드 도구를 설치합니다.&lt;/li&gt;
&lt;li&gt;Microsoft Visual Studio 2019 빌드 도구에 호환되는 Qt5 라이브러리를 설치합니다.&lt;/li&gt;
&lt;li&gt;Windows 10에 Geant4를 설치합니다.
&lt;ul&gt;
&lt;li&gt;크로스섹션 데이터는 설치과정에서 자동으로 다운되도록 할 예정이므로 인터넷 연결이 필요합니다.&lt;/li&gt;
&lt;li&gt;CLHep은 내장된 사양만 사용하며, 따로 설치하지 않을 것입니다.&lt;/li&gt;
&lt;li&gt;그래픽 라이브러리로 Qt5를 연동하여 설치합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Geant4 예제를 실행시켜, 잘 설치되었는지 확인합니다.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;vs2019-빌드-도구-설치&#34;&gt;VS2019 빌드 도구 설치&lt;/h2&gt;
&lt;p&gt;이 글에서는 Geant4 설치를 위한 빌드 도구로 gcc보다는 MSVC(Microsoft Visual C++)를 이용하여 진행할 예정입니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;&lt;a href=&#34;https://geant4-userdoc.web.cern.ch/UsersGuides/InstallationGuide/html/installguide.html#on-windows-platforms&#34;&gt;공식 가이드&lt;/a&gt;에 따르면, Cygwin이나 MinGW도 테스트를 해보거나 직접적인 지원을 하는건 아니지만 Unix 플랫폼에서와 유사하게 진행하면 될 것이라고 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Builds of Geant4 using Cygwin or MinGW with their own compilers or the Microsoft C++ Compiler are neither supported or tested, though the CMake system is expected to work under these toolchains. If you are using these tools via their native shells and with their own versions of CMake, then the instructions for building and installing on Unix platforms &lt;a href=&#34;https://geant4-userdoc.web.cern.ch/UsersGuides/InstallationGuide/html/installguide.html#unixbuild&#34;&gt;On Unix Platforms&lt;/a&gt; can be used.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;제 경험상으로는 Linux/Unix 환경에서 gcc를 사용했던 경험에 비해 그리 시원치 않아서, 개인적으로 Windows 10에서 설치 시에는 MSVC를 추천합니다.&lt;/p&gt;

  &lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;다운로드&#34;&gt;다운로드&lt;/h3&gt;
&lt;p&gt;Microsoft에서 제공하는 Visual Studio 2019용 Build Tools는 &lt;a href=&#34;https://visualstudio.microsoft.com/ko/downloads/#build-tools-for-visual-studio-2019&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;이 링크&lt;/a&gt;에서 무료로 받을 수 있습니다. 아래 그림에서 보이는 다운로드 링크를 누르면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;vs2019buildtools_download&#34; srcset=&#34;
               /g4install-107p2-win10basic/vs2019buildtools_download_hub57466a22a601cab6b68f2e5874681b3_25611_df9e25f1c544aa68a78a92d89e0c13a0.png 400w,
               /g4install-107p2-win10basic/vs2019buildtools_download_hub57466a22a601cab6b68f2e5874681b3_25611_b06efe6e544273a41390ecc7e564f614.png 760w,
               /g4install-107p2-win10basic/vs2019buildtools_download_hub57466a22a601cab6b68f2e5874681b3_25611_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p2-win10basic/vs2019buildtools_download_hub57466a22a601cab6b68f2e5874681b3_25611_df9e25f1c544aa68a78a92d89e0c13a0.png&#34;
               width=&#34;760&#34;
               height=&#34;135&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;설치&#34;&gt;설치&lt;/h3&gt;
&lt;p&gt;다운받은 뒤 실행하면, 아래 그림과 같은 창이 뜰 것입니다. 이 중 &lt;b&gt;C++를 사용한 데스크톱 개발&lt;/b&gt;을 클릭합니다. 오른쪽 설치 세부 정보에서, 자동으로 선택사항 중 일부가 선택될 것입니다. 혹시라도 &lt;b&gt;Windows용 C++ CMake 도구&lt;/b&gt;가 선택이 안되어있다면, &lt;b&gt;꼭 선택&lt;/b&gt;해주시기 바랍니다. 선택을 완료하셨다면 설치를 진행하시면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;vs2019buildtools_install&#34; srcset=&#34;
               /g4install-107p2-win10basic/vs2019buildtools_install_huefd9916a1e1dc2faa688934edddc7916_120879_c5d8029504a4fb8ef927f8c6b3a180ce.png 400w,
               /g4install-107p2-win10basic/vs2019buildtools_install_huefd9916a1e1dc2faa688934edddc7916_120879_0b55a1d22f1be37baad8292a20a41ba4.png 760w,
               /g4install-107p2-win10basic/vs2019buildtools_install_huefd9916a1e1dc2faa688934edddc7916_120879_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p2-win10basic/vs2019buildtools_install_huefd9916a1e1dc2faa688934edddc7916_120879_c5d8029504a4fb8ef927f8c6b3a180ce.png&#34;
               width=&#34;760&#34;
               height=&#34;424&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;설치여부-확인&#34;&gt;설치여부 확인&lt;/h3&gt;
&lt;p&gt;제대로 설치가 되었는지 확인해보겠습니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;b&gt;[WIN]+[S]&lt;/b&gt; 를 눌러 검색을 띄움&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;developer powershell&lt;/code&gt;을 입력하여 &lt;b&gt;Developer PowerShell for VS 2019&lt;/b&gt;를 찾은 뒤 실행&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;vs2019buildtools_test1&#34; srcset=&#34;
               /g4install-107p2-win10basic/vs2019buildtools_test1_hu607f4985e581e7292b5d47d4b801dedf_138468_226fbd82f31d51e44fa9627733e16400.png 400w,
               /g4install-107p2-win10basic/vs2019buildtools_test1_hu607f4985e581e7292b5d47d4b801dedf_138468_be659fa34a05acdcb7fbe530b7909974.png 760w,
               /g4install-107p2-win10basic/vs2019buildtools_test1_hu607f4985e581e7292b5d47d4b801dedf_138468_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p2-win10basic/vs2019buildtools_test1_hu607f4985e581e7292b5d47d4b801dedf_138468_226fbd82f31d51e44fa9627733e16400.png&#34;
               width=&#34;760&#34;
               height=&#34;623&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;cl&lt;/code&gt;을 입력하여, 다음 그림과 같이 사용법(usage)이 뜨는지 확인&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;vs2019buildtools_test2&#34; srcset=&#34;
               /g4install-107p2-win10basic/vs2019buildtools_test2_hub7498eb52e09045178598a550d3695f5_15086_9269aa39a59933636d852135180485aa.png 400w,
               /g4install-107p2-win10basic/vs2019buildtools_test2_hub7498eb52e09045178598a550d3695f5_15086_4c3b6009b4d76a83b68f225ace1e4e45.png 760w,
               /g4install-107p2-win10basic/vs2019buildtools_test2_hub7498eb52e09045178598a550d3695f5_15086_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p2-win10basic/vs2019buildtools_test2_hub7498eb52e09045178598a550d3695f5_15086_9269aa39a59933636d852135180485aa.png&#34;
               width=&#34;760&#34;
               height=&#34;397&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;확인이 끝난 뒤에는, &lt;b&gt;Developer PowerShell을 일단 종료&lt;/b&gt;(Qt 설치 시 충돌 방지)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;qt5-라이브러리-설치&#34;&gt;Qt5 라이브러리 설치&lt;/h2&gt;
&lt;p&gt;Qt는 Geant4에서 GUI를 띄우기 위해 필요한 라이브러리입니다. Qt는 라이센스 이슈 때문인지, 설치하려면 &lt;b&gt;Qt 계정 회원가입 및 로그인이 필요&lt;/b&gt;합니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Qt는 무료로 이용하고자 할 경우,  &lt;a href=&#34;https://www.qt.io/licensing/open-source-lgpl-obligations?hsLang=en&#34;&gt;(L)GPL 라이센스 규약&lt;/a&gt;을 따를 것을 요구하니, 라이센스에 관한 정보가 필요하신 분은 참고하시기 바랍니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;다운로드-1&#34;&gt;다운로드&lt;/h3&gt;
&lt;p&gt;일단 &lt;a href=&#34;https://www.qt.io/download&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;이 링크&lt;/a&gt;에서 Qt online installer를 다운받을 수 있습니다. 처음 들어오시면 헤매실까봐 눌러야하는 링크 순서를 보여드리니, 아래 그림을 참고해서 진행하시면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;qt_download1&#34; srcset=&#34;
               /g4install-107p2-win10basic/qt_download1_hu7c615b8709f940ffa5bb13f451cd49f9_26021_d55bd4dfc6220172c0712e02e46f26f3.png 400w,
               /g4install-107p2-win10basic/qt_download1_hu7c615b8709f940ffa5bb13f451cd49f9_26021_4bc597226c2518d91ab75a8608765824.png 760w,
               /g4install-107p2-win10basic/qt_download1_hu7c615b8709f940ffa5bb13f451cd49f9_26021_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p2-win10basic/qt_download1_hu7c615b8709f940ffa5bb13f451cd49f9_26021_d55bd4dfc6220172c0712e02e46f26f3.png&#34;
               width=&#34;625&#34;
               height=&#34;293&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;qt_download2&#34; srcset=&#34;
               /g4install-107p2-win10basic/qt_download2_hu61e4050399c5055af5f56e9b4d4c2f15_36717_a356c2ea2431d6ff850205a5495bc8f6.png 400w,
               /g4install-107p2-win10basic/qt_download2_hu61e4050399c5055af5f56e9b4d4c2f15_36717_0bf0974ceadca9bbee6f8e96b3469f0e.png 760w,
               /g4install-107p2-win10basic/qt_download2_hu61e4050399c5055af5f56e9b4d4c2f15_36717_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p2-win10basic/qt_download2_hu61e4050399c5055af5f56e9b4d4c2f15_36717_a356c2ea2431d6ff850205a5495bc8f6.png&#34;
               width=&#34;760&#34;
               height=&#34;184&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;qt_download3&#34; srcset=&#34;
               /g4install-107p2-win10basic/qt_download3_huea4d9f6c97de37a43c8a70ad4330f089_230053_4610af1c0ea0314a73cac61bbb438dd3.png 400w,
               /g4install-107p2-win10basic/qt_download3_huea4d9f6c97de37a43c8a70ad4330f089_230053_475143fb405d8d23955cf331866192f7.png 760w,
               /g4install-107p2-win10basic/qt_download3_huea4d9f6c97de37a43c8a70ad4330f089_230053_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p2-win10basic/qt_download3_huea4d9f6c97de37a43c8a70ad4330f089_230053_4610af1c0ea0314a73cac61bbb438dd3.png&#34;
               width=&#34;760&#34;
               height=&#34;450&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;설치-1&#34;&gt;설치&lt;/h3&gt;
&lt;p&gt;설치파일을 다운받은 뒤 실행하시면, 다음과 같이 계정을 입력하라는 창이 뜹니다. 이미 가입하셨다면 Qt 계정을 입력하여 로그인하시고, 계정이 없으시다면 &lt;u&gt;Sign up&lt;/u&gt;을 눌러 계정을 생성한 뒤 입력하시면 됩니다. 가입 시 이메일 인증절차가 필요합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;qt_install1&#34; srcset=&#34;
               /g4install-107p2-win10basic/qt_install1_hu818c53db882509e75ab7777b3766b47b_210990_96e11dcb13e813affb7354c64a6a85d9.png 400w,
               /g4install-107p2-win10basic/qt_install1_hu818c53db882509e75ab7777b3766b47b_210990_e514343e94719cdac1452220c0bdca59.png 760w,
               /g4install-107p2-win10basic/qt_install1_hu818c53db882509e75ab7777b3766b47b_210990_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p2-win10basic/qt_install1_hu818c53db882509e75ab7777b3766b47b_210990_96e11dcb13e813affb7354c64a6a85d9.png&#34;
               width=&#34;760&#34;
               height=&#34;505&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;이어서 라이센스 동의 관련 내용이 뜹니다. 첫 번째 체크박스는 라이센스에 동의하겠다는 것이니 체크를 반드시 하셔야 합니다. 두 번째 네모상자 및 체크박스는 사용자가 기관인지 개인인지를 확인하는 란입니다. 기관이시면 기관명을 적고, 개인이시면 체크박스에 체크를 하면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;qt_install2&#34; srcset=&#34;
               /g4install-107p2-win10basic/qt_install2_hu1ab13f0541a3679f75fdc0602ad75b9d_222457_d3ea5d1287a138a47c5a5fff5719b2cf.png 400w,
               /g4install-107p2-win10basic/qt_install2_hu1ab13f0541a3679f75fdc0602ad75b9d_222457_ae8408564ab169f580a24fcb3d8ed46f.png 760w,
               /g4install-107p2-win10basic/qt_install2_hu1ab13f0541a3679f75fdc0602ad75b9d_222457_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p2-win10basic/qt_install2_hu1ab13f0541a3679f75fdc0602ad75b9d_222457_d3ea5d1287a138a47c5a5fff5719b2cf.png&#34;
               width=&#34;760&#34;
               height=&#34;505&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Next 버튼을 누르다보면, Qt 발전을 위해 정보 제공 동의를 하는 내용이 나오는데, 이는 자유롭게 선택하시면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;qt_install3&#34; srcset=&#34;
               /g4install-107p2-win10basic/qt_install3_hufbf6bdf32d1a86c543ce2016bcb78281_215592_70a047b113f0c9a1c187bc348f5ec37b.png 400w,
               /g4install-107p2-win10basic/qt_install3_hufbf6bdf32d1a86c543ce2016bcb78281_215592_17f72271658d23736c74ed2bbf5abc69.png 760w,
               /g4install-107p2-win10basic/qt_install3_hufbf6bdf32d1a86c543ce2016bcb78281_215592_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p2-win10basic/qt_install3_hufbf6bdf32d1a86c543ce2016bcb78281_215592_70a047b113f0c9a1c187bc348f5ec37b.png&#34;
               width=&#34;760&#34;
               height=&#34;505&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;다음으로 설치경로 및 설치유형 선택이 나옵니다.&lt;/p&gt;
&lt;p&gt;일단, 이 글에서 설치 경로는 기본경로인 &lt;code&gt;C:\Qt&lt;/code&gt;로 가겠습니다.&lt;/p&gt;
&lt;p&gt;설치 유형은 &lt;b&gt;Custom Installation&lt;/b&gt;이 선택된대로 놔두시면 됩니다.&lt;/p&gt;
&lt;p&gt;맨 아래의 &lt;b&gt;Associate common file types with Qt Creator.&lt;/b&gt; 체크박스의 경우에는, 여러분이 Qt Creator라는 IDE를 사용하실 예정이라면 체크하시고, 사용할 계획이 없으시다면 체크를 해제하시면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;qt_install4&#34; srcset=&#34;
               /g4install-107p2-win10basic/qt_install4_hu6fadece4545434b2bd1de367d689d836_217054_da82cc6fb696fae419854f86e54d98b8.png 400w,
               /g4install-107p2-win10basic/qt_install4_hu6fadece4545434b2bd1de367d689d836_217054_4bb97a509b5925af6d4dfd08b704b460.png 760w,
               /g4install-107p2-win10basic/qt_install4_hu6fadece4545434b2bd1de367d689d836_217054_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p2-win10basic/qt_install4_hu6fadece4545434b2bd1de367d689d836_217054_da82cc6fb696fae419854f86e54d98b8.png&#34;
               width=&#34;760&#34;
               height=&#34;505&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Next를 누르면 설치할 항목을 고르는 부분이 나옵니다. &lt;strong&gt;여기가 중요&lt;/strong&gt;합니다.&lt;/p&gt;
&lt;p&gt;일단 &lt;font color=red&gt;&lt;b&gt;Deselect All을 눌러 모든 항목을 선택 해제&lt;/b&gt;&lt;/font&gt;합니다.&lt;/p&gt;
&lt;p&gt;그리고나서, &lt;font color=red&gt;&lt;b&gt;Qt &amp;gt; Qt 5.15.2 &amp;gt; MSVC 2019 64-bit만 선택&lt;/b&gt;&lt;/font&gt;합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;qt_install5&#34; srcset=&#34;
               /g4install-107p2-win10basic/qt_install5_hu8f5585a5cecf2d574b31193e653d9b9b_338720_f4fb1ddb13462f603f3617aba2cfe245.png 400w,
               /g4install-107p2-win10basic/qt_install5_hu8f5585a5cecf2d574b31193e653d9b9b_338720_c7a57905a445f6007c66d75b27901a42.png 760w,
               /g4install-107p2-win10basic/qt_install5_hu8f5585a5cecf2d574b31193e653d9b9b_338720_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p2-win10basic/qt_install5_hu8f5585a5cecf2d574b31193e653d9b9b_338720_f4fb1ddb13462f603f3617aba2cfe245.png&#34;
               width=&#34;760&#34;
               height=&#34;505&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;qt_install6&#34; srcset=&#34;
               /g4install-107p2-win10basic/qt_install6_huae82795004dd959b0cfea99e55d4e897_232833_a1a4e1aa6c9d5afeec0f3073dceae221.png 400w,
               /g4install-107p2-win10basic/qt_install6_huae82795004dd959b0cfea99e55d4e897_232833_3ac31b79246178d43e43c7f88f59e230.png 760w,
               /g4install-107p2-win10basic/qt_install6_huae82795004dd959b0cfea99e55d4e897_232833_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p2-win10basic/qt_install6_huae82795004dd959b0cfea99e55d4e897_232833_a1a4e1aa6c9d5afeec0f3073dceae221.png&#34;
               width=&#34;760&#34;
               height=&#34;505&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;현재 Qt 최신버전은 6.x 버전입니다만, Geant4에서 아직 Qt5까지만 지원합니다.&lt;/p&gt;
&lt;p&gt;그리고 Qt를 설치할 때 사용하는 컴파일러에 맞추어 설치해야 합니다. 저희는 MSVC를 이용하므로 이에 맞추어 설치를 진행합니다.&lt;/p&gt;

  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;이제 설치가 완료될 때까지 기다리시면 됩니다. Qt쪽 서버와 한국간 통신이 느려서 그런지 생각보다 오래 걸리더군요.&lt;/p&gt;
&lt;h3 id=&#34;환경변수-설정&#34;&gt;환경변수 설정&lt;/h3&gt;
&lt;p&gt;설치가 끝났다면 환경변수를 설정하는 과정이 필요합니다. &lt;code&gt;Path&lt;/code&gt; 환경변수에 Qt가 설치된 경로의 bin 폴더를 추가해주어야 합니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    기본경로인 &lt;code&gt;C:\Qt&lt;/code&gt;가 아닌 다른 곳에 설치하셨다면, 맞추어 경로를 바꿔서 입력하셔야 합니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;PowerShell을 관리자 권한으로 열어, 명령어를 통해 설정하도록 하겠습니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;b&gt;[WIN]+[R]&lt;/b&gt;을 눌러 실행 창 열기&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;powershell&lt;/code&gt; 입력 후 &lt;b&gt;[CTRL]+[SHIFT]+[ENTER]&lt;/b&gt;를 눌러 관리자 권한으로 powershell 실행&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다음 명령어 입력&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;[Environment]::SetEnvironmentVariable(&amp;quot;Path&amp;quot;, $env:Path+&amp;quot;;C:\Qt\5.15.2\msvc2019_64\bin&amp;quot;, &amp;quot;Machine&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;설치여부-확인-1&#34;&gt;설치여부 확인&lt;/h3&gt;
&lt;p&gt;방금 열어둔 PowerShell에서 &lt;code&gt;qmake&lt;/code&gt;라고 입력한 뒤 사용법(usage)이 뜨는지 확인합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;qt_test&#34; srcset=&#34;
               /g4install-107p2-win10basic/qt_test_hubf3ba68a4e76097738b05b1a7f5af941_39351_98e0d27ee8767c51c93a00408c2df775.png 400w,
               /g4install-107p2-win10basic/qt_test_hubf3ba68a4e76097738b05b1a7f5af941_39351_3e2a6b6a81c8c65d8c2d38c93fec61a9.png 760w,
               /g4install-107p2-win10basic/qt_test_hubf3ba68a4e76097738b05b1a7f5af941_39351_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p2-win10basic/qt_test_hubf3ba68a4e76097738b05b1a7f5af941_39351_98e0d27ee8767c51c93a00408c2df775.png&#34;
               width=&#34;760&#34;
               height=&#34;648&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;geant4-설치&#34;&gt;Geant4 설치&lt;/h2&gt;
&lt;h3 id=&#34;다운로드-2&#34;&gt;다운로드&lt;/h3&gt;
&lt;p&gt;Geant4 소스코드는 &lt;a href=&#34;https://geant4.web.cern.ch/support/download&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;이 링크&lt;/a&gt;에서 다운받을 수 있습니다. 위의 &lt;b&gt;Source files&lt;/b&gt;라고 되어있는 항목 중 &lt;b&gt;ZIP format 파일&lt;/b&gt;을 받으면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;geant4_download&#34; srcset=&#34;
               /g4install-107p2-win10basic/geant4_download_hu183cf2b1eeb3561d9817d0692bb26a75_27109_40e4803680c078ad27da5177d06f8d63.png 400w,
               /g4install-107p2-win10basic/geant4_download_hu183cf2b1eeb3561d9817d0692bb26a75_27109_47895efb1b1bc708b1ccd2292f8d0336.png 760w,
               /g4install-107p2-win10basic/geant4_download_hu183cf2b1eeb3561d9817d0692bb26a75_27109_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p2-win10basic/geant4_download_hu183cf2b1eeb3561d9817d0692bb26a75_27109_40e4803680c078ad27da5177d06f8d63.png&#34;
               width=&#34;760&#34;
               height=&#34;272&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;설치-2&#34;&gt;설치&lt;/h3&gt;
&lt;p&gt;이 글에서는 &lt;code&gt;C:\Geant4&lt;/code&gt; 폴더를 만들어 여기에 설치를 하도록 하겠습니다. 경로는 자유롭게 하셔도 됩니다만, 추후 환경변수 등을 설정할 때 경로를 맞추어 변경해주셔야 하니 주의하시기 바랍니다.&lt;/p&gt;
&lt;p&gt;이제 다음과 같이 순서대로 진행하시면 됩니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;위에서 다운받은 압축파일(geant4_10_07_p02.zip)을 &lt;code&gt;C:\Geant4&lt;/code&gt; 폴더에 옮기고, 압축을 풀어줍니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;geant4_install1&#34; srcset=&#34;
               /g4install-107p2-win10basic/geant4_install1_hu9513900efb93424c56c4af938a2a81cd_26224_e5de6750bdddb6b8a8df5a6b8ac14daa.png 400w,
               /g4install-107p2-win10basic/geant4_install1_hu9513900efb93424c56c4af938a2a81cd_26224_de2d0a6224d4664c519adab116794a5e.png 760w,
               /g4install-107p2-win10basic/geant4_install1_hu9513900efb93424c56c4af938a2a81cd_26224_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p2-win10basic/geant4_install1_hu9513900efb93424c56c4af938a2a81cd_26224_e5de6750bdddb6b8a8df5a6b8ac14daa.png&#34;
               width=&#34;760&#34;
               height=&#34;429&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;압축을 풀어 생긴 geant4_10_07_p02 폴더에 들어가서, &lt;b&gt;&lt;code&gt;build&lt;/code&gt; 폴더와 &lt;code&gt;install&lt;/code&gt; 폴더를 새로 만들어줍니다&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;build&lt;/code&gt; 폴더는 cmake를 통해 생성되는 컴파일 결과가 보관될 폴더입니다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;install&lt;/code&gt;폴더는 Geant4가 최종적으로 설치될 폴더입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;geant4_install2&#34; srcset=&#34;
               /g4install-107p2-win10basic/geant4_install2_hua77048e5d1921956f160189de712b8f3_41530_a2daf3210fa7ee251d4a0ba48eeeb61c.png 400w,
               /g4install-107p2-win10basic/geant4_install2_hua77048e5d1921956f160189de712b8f3_41530_8daeabc94eb674fbd290e9a8ce6333d7.png 760w,
               /g4install-107p2-win10basic/geant4_install2_hua77048e5d1921956f160189de712b8f3_41530_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p2-win10basic/geant4_install2_hua77048e5d1921956f160189de712b8f3_41530_a2daf3210fa7ee251d4a0ba48eeeb61c.png&#34;
               width=&#34;760&#34;
               height=&#34;429&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;b&gt;Developer PowerShell for VS 2019&lt;/b&gt;를 실행합니다.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;[WIN]+[S]&lt;/b&gt; 를 눌러 검색을 띄우고, &lt;code&gt;developer powershell&lt;/code&gt;을 입력하여 &lt;b&gt;Developer PowerShell for VS 2019&lt;/b&gt;를 찾은 뒤 실행하면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;vs2019buildtools_test1&#34; srcset=&#34;
               /g4install-107p2-win10basic/vs2019buildtools_test1_hu607f4985e581e7292b5d47d4b801dedf_138468_226fbd82f31d51e44fa9627733e16400.png 400w,
               /g4install-107p2-win10basic/vs2019buildtools_test1_hu607f4985e581e7292b5d47d4b801dedf_138468_be659fa34a05acdcb7fbe530b7909974.png 760w,
               /g4install-107p2-win10basic/vs2019buildtools_test1_hu607f4985e581e7292b5d47d4b801dedf_138468_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p2-win10basic/vs2019buildtools_test1_hu607f4985e581e7292b5d47d4b801dedf_138468_226fbd82f31d51e44fa9627733e16400.png&#34;
               width=&#34;760&#34;
               height=&#34;623&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PowerShell 상에서 &lt;code&gt;cd&lt;/code&gt; 명령어를 이용하여, 앞서 만든 &lt;code&gt;build &lt;/code&gt;폴더 위치로 이동합니다.&lt;/p&gt;
&lt;p&gt;예를 들어 이 글에서와 같이 &lt;code&gt;C:\Geant4\geant4_10_07_p02\build&lt;/code&gt;로 이동해야 하는 경우에는, 다음과 같이 입력하면 됩니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;cd C:\Geant4\geant4_10_07_p02\build
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;geant4_install3&#34; srcset=&#34;
               /g4install-107p2-win10basic/geant4_install3_hu85977aa02ce51a3886646f5bcd943b8b_11100_35045bc0eab59368fe1b41b175827b45.png 400w,
               /g4install-107p2-win10basic/geant4_install3_hu85977aa02ce51a3886646f5bcd943b8b_11100_70743a14b5d9cf2c11ad3e65e3c18a87.png 760w,
               /g4install-107p2-win10basic/geant4_install3_hu85977aa02ce51a3886646f5bcd943b8b_11100_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p2-win10basic/geant4_install3_hu85977aa02ce51a3886646f5bcd943b8b_11100_35045bc0eab59368fe1b41b175827b45.png&#34;
               width=&#34;760&#34;
               height=&#34;397&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다음 명령어를 그대로 입력하여 &lt;code&gt;cmake&lt;/code&gt; 작업을 수행합니다. 오탈자 방지를 위해 복사-붙여넣기를 권장합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;cmake .. -DCMAKE_INSTALL_PREFIX=&amp;quot;C:\Geant4\geant4_10_07_p02\install&amp;quot; -DGEANT4_BUILD_MULTITHREADED=ON -DGEANT4_INSTALL_DATA=ON -DGEANT4_BUILD_MSVC_MP=ON -DGEANT4_USE_QT=ON
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;각 옵션의 의미는 다음과 같습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CMAKE_INSTALL_PREFIX: Geant4가 설치될 폴더의 경로.&lt;/li&gt;
&lt;li&gt;GEANT4_BUILD_MULTITHREADED: Geant4에서 MultiThreading이 가능하도록 설치할 지에 대한 여부. 기본값은 OFF.&lt;/li&gt;
&lt;li&gt;GEANT4_INSTALL_DATA: Geant4 설치 시 크로스섹션 데이터를 자동으로 다운로드할 지에 대한 여부. 기본값은 OFF.&lt;/li&gt;
&lt;li&gt;GEANT4_BUILD_MSVC_MP: Windows에서 MSVC 빌드 도구를 통해 설치할 때 Multiprocessing을 통해 설치 속도를 빠르게 할 지에 대한 여부. 기본값은 OFF.&lt;/li&gt;
&lt;li&gt;GEANT4_USE_QT: Geant4에서 Qt5 기반의 GUI를 사용할 수 있도록 설치할 지에 대한 여부. 기본값은 OFF.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;다음 그림과 같이 &lt;b&gt;Configuring done&lt;/b&gt;과 &lt;b&gt;Generating done&lt;/b&gt; 문구를 확인하였다면 성공입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;geant4_install4&#34; srcset=&#34;
               /g4install-107p2-win10basic/geant4_install4_hu043c7cfde1e15baae59434bc37191b66_74610_8cf3f8525f5cadfb3a3c191bbb552242.png 400w,
               /g4install-107p2-win10basic/geant4_install4_hu043c7cfde1e15baae59434bc37191b66_74610_a553107361dda28ddd59717ca95be535.png 760w,
               /g4install-107p2-win10basic/geant4_install4_hu043c7cfde1e15baae59434bc37191b66_74610_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p2-win10basic/geant4_install4_hu043c7cfde1e15baae59434bc37191b66_74610_8cf3f8525f5cadfb3a3c191bbb552242.png&#34;
               width=&#34;531&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다음 명령어를 그대로 입력하여 빌드 및 설치 작업을 수행합니다. 오탈자 방지를 위해 복사-붙여넣기를 권장합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;cmake --build . --config Release --target install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;수행 중에 유니코드 이슈와 관련하여 warning C4819가 뜰 수 있습니다만, 무시하고 진행하셔도 괜찮습니다.&lt;/p&gt;
&lt;p&gt;최종적으로 아래 그림과 같이 &lt;code&gt;-- Installing: ...&lt;/code&gt; 내역이 쭉 뜨고 끝나면 정상적으로 종료된 것입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;geant4_install5&#34; srcset=&#34;
               /g4install-107p2-win10basic/geant4_install5_hude43c227001a54a767c1baedb2329d83_56181_19e0f88803e50475bc722e700e86d8e8.png 400w,
               /g4install-107p2-win10basic/geant4_install5_hude43c227001a54a767c1baedb2329d83_56181_33892bb46b3d1146dc3532feee154461.png 760w,
               /g4install-107p2-win10basic/geant4_install5_hude43c227001a54a767c1baedb2329d83_56181_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p2-win10basic/geant4_install5_hude43c227001a54a767c1baedb2329d83_56181_19e0f88803e50475bc722e700e86d8e8.png&#34;
               width=&#34;760&#34;
               height=&#34;448&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;환경변수-설정-1&#34;&gt;환경변수 설정&lt;/h3&gt;
&lt;p&gt;설치가 끝났다면 환경변수를 설정하는 과정이 필요합니다.&lt;/p&gt;
&lt;p&gt;먼저, PowerShell을 관리자 권한으로 실행합니다. &lt;font color=red&gt;&lt;b&gt;방금까지 Geant4 설치에 이용하던 Developer PowerShell for VS 2019에서 하는 것이 아님에 주의&lt;/b&gt;&lt;/font&gt;하세요. 권한이 없어서 명령어가 제대로 실행되지 않을 수 있습니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;b&gt;[WIN]+[R]&lt;/b&gt;을 눌러 실행 창 열기&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;powershell&lt;/code&gt; 입력 후 &lt;b&gt;[CTRL]+[SHIFT]+[ENTER]&lt;/b&gt;를 눌러 관리자 권한으로 powershell 실행&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다음 명령어 입력&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Path&lt;/code&gt; 환경변수에 Geant4가 설치된 경로의 &lt;code&gt;bin&lt;/code&gt; 폴더를 추가&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;[Environment]::SetEnvironmentVariable(&amp;quot;Path&amp;quot;, $env:Path+&amp;quot;;C:\Geant4\geant4_10_07_p02\install\bin&amp;quot;, &amp;quot;Machine&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Geant4_DIR&lt;/code&gt;이라는 환경변수를 만들어 Geant4가 설치된 경로의 &lt;code&gt;lib\Geant4-10.7.2&lt;/code&gt; 폴더를 추가&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;[Environment]::SetEnvironmentVariable(&amp;quot;Geant4_DIR&amp;quot;, &amp;quot;C:\Geant4\geant4_10_07_p02\install\lib\Geant4-10.7.2&amp;quot;, &amp;quot;Machine&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;크로스섹션 데이터 경로 설정을 위한 환경변수 설정 (참고: &lt;a href=&#34;https://geant4-userdoc.web.cern.ch/UsersGuides/InstallationGuide/html/postinstall.html#environment-variables-for-datasets&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Postinstall Setup — Geant4 Installation Guide 10.7 documentation (cern.ch)&lt;/a&gt;)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;[Environment]::SetEnvironmentVariable(&amp;quot;G4ABLADATA&amp;quot;, &amp;quot;C:\Geant4\geant4_10_07_p02\install\share\Geant4-10.7.2\data\G4ABLA3.1&amp;quot;, &amp;quot;Machine&amp;quot;)
[Environment]::SetEnvironmentVariable(&amp;quot;G4ENSDFSTATEDATA&amp;quot;, &amp;quot;C:\Geant4\geant4_10_07_p02\install\share\Geant4-10.7.2\data\G4ENSDFSTATE2.3&amp;quot;, &amp;quot;Machine&amp;quot;)
[Environment]::SetEnvironmentVariable(&amp;quot;G4INCLDATA&amp;quot;, &amp;quot;C:\Geant4\geant4_10_07_p02\install\share\Geant4-10.7.2\data\G4INCL1.0&amp;quot;, &amp;quot;Machine&amp;quot;)
[Environment]::SetEnvironmentVariable(&amp;quot;G4LEDATA&amp;quot;, &amp;quot;C:\Geant4\geant4_10_07_p02\install\share\Geant4-10.7.2\data\G4EMLOW7.13&amp;quot;, &amp;quot;Machine&amp;quot;)
[Environment]::SetEnvironmentVariable(&amp;quot;G4LEVELGAMMADATA&amp;quot;, &amp;quot;C:\Geant4\geant4_10_07_p02\install\share\Geant4-10.7.2\data\PhotonEvaporation5.7&amp;quot;, &amp;quot;Machine&amp;quot;)
[Environment]::SetEnvironmentVariable(&amp;quot;G4NEUTRONHPDATA&amp;quot;, &amp;quot;C:\Geant4\geant4_10_07_p02\install\share\Geant4-10.7.2\data\G4NDL4.6&amp;quot;, &amp;quot;Machine&amp;quot;)
[Environment]::SetEnvironmentVariable(&amp;quot;G4PARTICLEXSDATA&amp;quot;, &amp;quot;C:\Geant4\geant4_10_07_p02\install\share\Geant4-10.7.2\data\G4PARTICLEXS3.1.1&amp;quot;, &amp;quot;Machine&amp;quot;)
[Environment]::SetEnvironmentVariable(&amp;quot;G4PIIDATA&amp;quot;, &amp;quot;C:\Geant4\geant4_10_07_p02\install\share\Geant4-10.7.2\data\G4PII1.3&amp;quot;, &amp;quot;Machine&amp;quot;)
[Environment]::SetEnvironmentVariable(&amp;quot;G4RADIOACTIVEDATA&amp;quot;, &amp;quot;C:\Geant4\geant4_10_07_p02\install\share\Geant4-10.7.2\data\RadioactiveDecay5.6&amp;quot;, &amp;quot;Machine&amp;quot;)
[Environment]::SetEnvironmentVariable(&amp;quot;G4REALSURFACEDATA&amp;quot;, &amp;quot;C:\Geant4\geant4_10_07_p02\install\share\Geant4-10.7.2\data\RealSurface2.2&amp;quot;, &amp;quot;Machine&amp;quot;)
[Environment]::SetEnvironmentVariable(&amp;quot;G4SAIDXSDATA&amp;quot;, &amp;quot;C:\Geant4\geant4_10_07_p02\install\share\Geant4-10.7.2\data\G4SAIDDATA2.0&amp;quot;, &amp;quot;Machine&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;geant4-예제-실행해보기&#34;&gt;Geant4 예제 실행해보기&lt;/h2&gt;
&lt;p&gt;Geant4 설치를 완료했으니 이제 실행을 해봐야겠죠.&lt;/p&gt;
&lt;p&gt;Windows에서 Geant4 라이브러리 기반의 코드를 빌드하려면 &lt;b&gt;&lt;font color=red&gt;Developer PowerShell for VS 2019를 통해 진행&lt;/font&gt;&lt;/b&gt;하셔야 합니다.&lt;/p&gt;
&lt;p&gt;예제파일은 소스코드의 압축을 풀었던 곳에 있는 &lt;code&gt;examples&lt;/code&gt; 폴더에 있습니다. 여기서는 제일 기본예제인 &lt;code&gt;examples\basic\B1&lt;/code&gt;을 테스트 해보겠습니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;B1&lt;/code&gt; 폴더를 &lt;b&gt;폴더 째로 복사&lt;/b&gt;하여 원하는 곳에 가져옵니다. 저는 &lt;code&gt;C:\Geant4\B1&lt;/code&gt;으로 복사해왔습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;복사해온 &lt;code&gt;B1&lt;/code&gt; 폴더 안에 &lt;b&gt;&lt;code&gt;build&lt;/code&gt;라는 폴더를 새로 만듭니다&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;example1&#34; srcset=&#34;
               /g4install-107p2-win10basic/example1_huf71dc8f726b0bf69733721115d598312_45478_2271b60d0b0f68d1a65438b36778b1e8.png 400w,
               /g4install-107p2-win10basic/example1_huf71dc8f726b0bf69733721115d598312_45478_1196a18e54132938e17d36258bc891d4.png 760w,
               /g4install-107p2-win10basic/example1_huf71dc8f726b0bf69733721115d598312_45478_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p2-win10basic/example1_huf71dc8f726b0bf69733721115d598312_45478_2271b60d0b0f68d1a65438b36778b1e8.png&#34;
               width=&#34;760&#34;
               height=&#34;429&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;복사해온 B1 폴더 안에 있는 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일을 열어, 파일의 맨 위에 다음 내용을 추가합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-cmake&#34;&gt;#----------------------------------------------------------------------------
# Set build output directory to be ./build 
# rather than ./build/Release or ./build/RelWithDebInfo
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE &amp;quot;${CMAKE_BINARY_DIR}&amp;quot;)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO &amp;quot;${CMAKE_BINARY_DIR}&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;example2&#34; srcset=&#34;
               /g4install-107p2-win10basic/example2_hu5bc646f33e70b300bacd657798df2033_61231_4a8011c4ce801c6fee4a30ce57387679.png 400w,
               /g4install-107p2-win10basic/example2_hu5bc646f33e70b300bacd657798df2033_61231_6985b1e2e3a785ed7191d5a48e73ecde.png 760w,
               /g4install-107p2-win10basic/example2_hu5bc646f33e70b300bacd657798df2033_61231_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p2-win10basic/example2_hu5bc646f33e70b300bacd657798df2033_61231_4a8011c4ce801c6fee4a30ce57387679.png&#34;
               width=&#34;760&#34;
               height=&#34;640&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;Geant4 코드는 init_vis.mac, vis.mac,&amp;hellip;과 같은 *.mac 파일을 불러와서 이를 연동하여 실행하는 경우가 많습니다.&lt;/p&gt;
&lt;p&gt;일반적으로 UNIX/LINUX 환경에서는 실행파일과 *.mac 파일이 동일한 경로에 존재하도록 빌드를 수행하기 때문에, 대부분의 Geant4 코드는 이들의 위치가 동일하게 &lt;code&gt;build&lt;/code&gt; 폴더에 있으리라는 가정 하에 작성되어 있습니다. 그러나 MSVC를 이용하여 빌드를 수행할 경우에는, *.mac 파일은 &lt;code&gt;build&lt;/code&gt; 폴더에 있지만, 실행파일(*.exe)은 &lt;code&gt;build\Release&lt;/code&gt;나 &lt;code&gt;build\RelWithDebInfo&lt;/code&gt; 폴더 안에 생성됩니다.&lt;/p&gt;
&lt;p&gt;위의 코드를 &lt;code&gt;CMakeLists.txt&lt;/code&gt;에 추가하면, 실행파일이 *.mac 파일의 위치와 동일한 &lt;code&gt;build&lt;/code&gt; 폴더에 생성되어 이 문제를 해결할 수 있습니다.&lt;/p&gt;

  &lt;/div&gt;
&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Developer PowerShell for VS 2019를 실행합니다. (앞서 켜둔 것이 있다면 그대로 쓰시면 됩니다)&lt;/p&gt;
&lt;p&gt;&lt;b&gt;[WIN]+[S]&lt;/b&gt; 를 눌러 검색을 띄우고, &lt;code&gt;developer powershell&lt;/code&gt;을 입력하여 &lt;b&gt;Developer PowerShell for VS 2019&lt;/b&gt;를 찾은 뒤 실행하면 됩니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;cd&lt;/code&gt; 명령어를 이용하여, 예제 코드를 복사해온 경로의 &lt;code&gt;build&lt;/code&gt; 폴더로 이동합니다. 이 글에서처럼 &lt;code&gt;C:\Geant4\B1&lt;/code&gt;으로 복사하였다면 다음과 같이 입력하면 됩니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;cd C:\Geant4\B1\build
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다음 명령어를 입력하여 빌드를 수행합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;cmake ..
cmake --build . --config Release
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;example3&#34; srcset=&#34;
               /g4install-107p2-win10basic/example3_hu888d8b771db12f7f66c26db0f32a15ea_33726_621f437ff057ed4f1f7c887063813c41.png 400w,
               /g4install-107p2-win10basic/example3_hu888d8b771db12f7f66c26db0f32a15ea_33726_cfa3ba22d9eee1b9be958a931ab96906.png 760w,
               /g4install-107p2-win10basic/example3_hu888d8b771db12f7f66c26db0f32a15ea_33726_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p2-win10basic/example3_hu888d8b771db12f7f66c26db0f32a15ea_33726_621f437ff057ed4f1f7c887063813c41.png&#34;
               width=&#34;760&#34;
               height=&#34;524&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;명령줄에 &lt;code&gt;./exampleB1.exe&lt;/code&gt;를 입력하여 실행하거나, &lt;code&gt;build&lt;/code&gt; 폴더 안에 있는 &lt;code&gt;exampleB1.exe&lt;/code&gt;파일을 더블클릭하여 실행합니다.&lt;/p&gt;
&lt;p&gt;다음과 같은 GUI 창이 뜨면 성공입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;example4&#34; srcset=&#34;
               /g4install-107p2-win10basic/example4_hu2dde95ccbb0280d046477ee6b83126df_52878_f0e99116c4388a90fb871222be01af9f.png 400w,
               /g4install-107p2-win10basic/example4_hu2dde95ccbb0280d046477ee6b83126df_52878_eb06ba973e5be284bd1deb4b513e8a64.png 760w,
               /g4install-107p2-win10basic/example4_hu2dde95ccbb0280d046477ee6b83126df_52878_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p2-win10basic/example4_hu2dde95ccbb0280d046477ee6b83126df_52878_f0e99116c4388a90fb871222be01af9f.png&#34;
               width=&#34;760&#34;
               height=&#34;591&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Geant4 설치하기(10.6.p02, Ubuntu2004 LTS)</title>
      <link>https://evandde.github.io/g4install-106p2-ubt2004/</link>
      <pubDate>Sun, 01 Nov 2020 16:17:56 +0900</pubDate>
      <guid>https://evandde.github.io/g4install-106p2-ubt2004/</guid>
      <description>&lt;p&gt;이 글에서는 Linux계열 운영체제 중 하나인 &lt;strong&gt;Ubuntu 20.04 LTS&lt;/strong&gt;에서 &lt;strong&gt;Geant4 10.6 patch 02 버전&lt;/strong&gt;을 설치하는 방법에 대해 알아봅니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;설치-정보-요약&#34;&gt;설치 정보 요약&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;설치 환경&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;운영체제: Ubuntu 20.04 LTS&lt;/li&gt;
&lt;li&gt;인터넷 사용 가능&lt;/li&gt;
&lt;li&gt;관리자 권한 (&lt;code&gt;sudo&lt;/code&gt;) 이용 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;설치 대상&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Geant4 10.6 patch 02 버전&lt;/li&gt;
&lt;li&gt;Multi-threading 기능 활성화&lt;/li&gt;
&lt;li&gt;UI 및 가시화 기능 활용을 위해 Qt5, X11 OpenGL 라이브러리 연동하여 설치&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;설치 경로&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/opt/geant4/10.6.p02&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;여러 버전의 Geant4를 설치할 경우를 고려하여, &lt;code&gt;/opt/geant4&lt;/code&gt; 하위에 버전별로 디렉토리를 만들고 그 하위에 설치 진행.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;tldr&#34;&gt;TL;DR&lt;/h2&gt;
&lt;h3 id=&#34;geant4-관련-필수선택-라이브러리-설치&#34;&gt;Geant4 관련 필수/선택 라이브러리 설치&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;apt&lt;/code&gt; 패키지 매니저 최신화&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt update -y &amp;amp;&amp;amp; sudo apt upgrade -y &amp;amp;&amp;amp; sudo apt autoremove -y
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;apt&lt;/code&gt;를 이용하여 다음 항목 설치&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;C++ 컴파일러 및 표준 라이브러리, 헤더 (&lt;font color=&#39;red&#39;&gt;Geant4 설치 시 필수 라이브러리&lt;/font&gt;)&lt;/li&gt;
&lt;li&gt;CMake (&lt;font color=&#39;red&#39;&gt;Geant4 설치 시 필수 라이브러리&lt;/font&gt;)&lt;/li&gt;
&lt;li&gt;Expat (Linux, macOS에서 &lt;font color=&#39;red&#39;&gt;Geant4 설치 시 필수 라이브러리&lt;/font&gt;)&lt;/li&gt;
&lt;li&gt;Qt5, X11 OpenGL 라이브러리 설치 (&lt;font color=&#39;blue&#39;&gt;Geant4 설치 시 선택 라이브러리&lt;/font&gt;. GUI 등 그래픽 기반 기능 사용에 필요)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install -y build-essential cmake libexpat1-dev qt5-default libxmu-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;geant4-설치&#34;&gt;Geant4 설치&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Geant4 툴킷을 설치할 디렉토리 생성&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo mkdir -p /opt/geant4/10.6.p02
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;1에서 생성한 디렉토리로 이동하여, Geant4 소스코드 다운로드 (소스코드 용량 약 40 MB)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /opt/geant4/10.6.p02
sudo wget http://geant4-data.web.cern.ch/geant4-data/releases/geant4.10.06.p02.tar.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2에서 다운받은 압축파일을 압축해제&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo tar -xf geant4.10.06.p02.tar.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;build&lt;/code&gt;라는 이름의 디렉토리를 만들고 안으로 이동&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo mkdir build
cd build
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;컴파일 수행 (&lt;code&gt;make&lt;/code&gt; 명령은 인터넷 속도 및 cpu 성능에 따라 수 분~수 십분 소요될 수 있음)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;(설치경로): &lt;code&gt;/opt/geant4/10.6.p02&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GEANT4_BUILD_MULTITHREADED&lt;/code&gt;(multi-threading 사용 여부): ON&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GEANT4_INSTALL_DATA&lt;/code&gt;(크로스섹션 데이터 자동설치 여부): ON (데이터 총 용량 약 900 MB)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GEANT4_USE_OPENGL_X11&lt;/code&gt;(X11 OpenGL 라이브러리 연동 여부): ON&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GEANT4_USE_QT&lt;/code&gt;(QT 라이브러리 연동 여부): ON&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo cmake ../geant4.10.06.p02 -DCMAKE_INSTALL_PREFIX=/opt/geant4/10.6.p02 -DGEANT4_BUILD_MULTITHREADED=ON -DGEANT4_INSTALL_DATA=ON -DGEANT4_USE_OPENGL_X11=ON -DGEANT4_USE_QT=ON
sudo make -j `grep -c processor /proc/cpuinfo`
sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;환경변수 세팅을 위해 &lt;code&gt;~/.bashrc&lt;/code&gt;에 내용 추가&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &amp;quot;source /opt/geant4/10.6.p02/bin/geant4.sh&amp;quot; &amp;gt;&amp;gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;prerequisite-설치&#34;&gt;Prerequisite 설치&lt;/h2&gt;
&lt;p&gt;인터넷이 안된다거나, 관리자 권한을 사용할 수 없다거나, Ubuntu가 아니라면 이야기가 좀 달라지겠지만&amp;hellip;&lt;/p&gt;
&lt;p&gt;앞서 말한 5가지 준비물은 모두 Ubuntu에서 제공하는 패키지 관리자 &lt;code&gt;apt&lt;/code&gt;를 통해 설치할 수 있습니다.&lt;/p&gt;
&lt;p&gt;(RedHat 계열의 리눅스에서도 패키지 관리자 &lt;code&gt;yum&lt;/code&gt;을 통해 유사한 명령어로 설치할 수 있습니다)&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    패키지 관리자를 사용하기 전에 최신화를 해주세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    본인이 &lt;strong&gt;서버 등을 관리하는 사람&lt;/strong&gt;이라면, &lt;strong&gt;최신화를 할 때 주의&lt;/strong&gt;하세요. 이런 경우에는 전체 패키지를 최신화하기보다는 &lt;strong&gt;원하는 특정 패키지를 선별하여 최신화하기를 권장&lt;/strong&gt;합니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;패키지-매니저-최신화&#34;&gt;패키지 매니저 최신화&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt update -y &amp;amp;&amp;amp; sudo apt upgrade -y &amp;amp;&amp;amp; sudo apt autoremove -y
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;c-컴파일러-및-표준-라이브러리-헤더-설치-gcc-등&#34;&gt;C++ 컴파일러 및 표준 라이브러리, 헤더 설치 (GCC 등)&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install -y build-essential
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;cmake-설치&#34;&gt;CMake 설치&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install -y cmake
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;expat-설치&#34;&gt;Expat 설치&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install -y libexpat1-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;qt5-설치&#34;&gt;Qt5 설치&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install -y qt5-default
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;x11-opengl-설치&#34;&gt;X11 OpenGL 설치&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install -y libxmu-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;geant4-설치하기&#34;&gt;Geant4 설치하기&lt;/h2&gt;
&lt;p&gt;이제 준비가 다 되었습니다. 이어서 Geant4를 설치해봅시다.&lt;/p&gt;
&lt;p&gt;우리가 설치하고자 하는 경로는 &lt;code&gt;/opt/geant4/10.6.p02&lt;/code&gt;입니다. 앞서 말씀드린 것처럼, 여러 버전의 Geant4를 설치할 경우를 고려하여 &lt;code&gt;/opt/geant4&lt;/code&gt; 하위에 버전명에 해당하는 디렉토리를 두어 세분화한 것입니다.&lt;/p&gt;
&lt;h3 id=&#34;설치를-위한-디렉토리-생성&#34;&gt;설치를 위한 디렉토리 생성&lt;/h3&gt;
&lt;p&gt;우선 해당 디렉토리를 생성하기 위해 다음 명령어를 입력합니다. (&lt;code&gt;/opt&lt;/code&gt;는 관리자 권한이 있어야 수정할 수 있음)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo mkdir -p /opt/geant4/10.6.p02
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;geant4-소스코드-다운로드&#34;&gt;Geant4 소스코드 다운로드&lt;/h3&gt;
&lt;p&gt;이어서, 해당 디렉토리로 이동한 뒤 Geant4 소스코드를 다운 받겠습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /opt/geant4/10.6.p02
sudo wget http://geant4-data.web.cern.ch/geant4-data/releases/geant4.10.06.p02.tar.gz 
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;code&gt;wget&lt;/code&gt; 명령어를 사용하지 않고, &lt;a href=&#34;https://geant4.web.cern.ch/support/download&#34;&gt;Geant4 다운로드 페이지&lt;/a&gt;에서 직접 받아서 옮겨오셔도 괜찮습니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    본 글에서 다루는 10.6.p02와 다른 버전을 설치하시는 경우에는, &lt;code&gt;wget&lt;/code&gt; 링크를 바꿔주셔야 합니다. 일반적으로 맨 뒤의 버전부분만 수정하면 됩니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;소스코드-압축-해제&#34;&gt;소스코드 압축 해제&lt;/h3&gt;
&lt;p&gt;위 과정을 통해 &lt;code&gt;geant4.10.06.p02.tar.gz&lt;/code&gt;라는 압축파일을 다운받으셨을 것입니다.&lt;/p&gt;
&lt;p&gt;다음 명령어를 통해 해당 파일의 압축을 해제합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo tar -xf geant4.10.06.p02.tar.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;geant4.10.06.p02&lt;/code&gt;라는 디렉토리가 생성되고 그 안에 압축이 풀리게 됩니다.&lt;/p&gt;
&lt;h3 id=&#34;빌드를-위한-build-디렉토리-생성&#34;&gt;빌드를 위한 build 디렉토리 생성&lt;/h3&gt;
&lt;p&gt;빌드를 수행하면 CMake와 관련된 잡다한 부산물이 생성됩니다. 관리의 용이성을 위해, 별도의 &lt;code&gt;build&lt;/code&gt;라는 디렉토리를 만들고 이 안에서 컴파일을 수행하겠습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo mkdir build
cd build
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;빌드-수행&#34;&gt;빌드 수행&lt;/h3&gt;
&lt;p&gt;우리는 빌드를 진행할 때 다음과 같은 옵션을 설정할 것입니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;(설치경로): &lt;code&gt;/opt/geant4/10.6.p02&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GEANT4_BUILD_MULTITHREADED&lt;/code&gt;(multi-threading 사용 여부): ON&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GEANT4_INSTALL_DATA&lt;/code&gt;(크로스섹션 데이터 자동설치 여부): ON (데이터 총 용량 약 900 MB)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GEANT4_USE_OPENGL_X11&lt;/code&gt;(X11 OpenGL 라이브러리 연동 여부): ON&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GEANT4_USE_QT&lt;/code&gt;(QT 라이브러리 연동 여부): ON&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;그리고 우리의 소스 코드는 &lt;code&gt;../geant4.10.06.p02&lt;/code&gt; 디렉토리에 압축이 풀려져 있지요.&lt;/p&gt;
&lt;p&gt;이에 따라 다음과 같이 명령줄을 입력합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo cmake ../geant4.10.06.p02 -DCMAKE_INSTALL_PREFIX=/opt/geant4/10.6.p02 -DGEANT4_BUILD_MULTITHREADED=ON -DGEANT4_INSTALL_DATA=ON -DGEANT4_USE_OPENGL_X11=ON -DGEANT4_USE_QT=ON
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;이 명령어를 입력하면, 많은 내용이 출력되며 작업이 진행됩니다. 혹시라도 오타가 나면 이 부분에서 에러가 발생합니다. &lt;font color=&#34;red&#34;&gt;&lt;b&gt;오타가 나지 않도록 주의하세요! 복사-붙여넣기 추천!&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;&lt;code&gt;GEANT4_INSTALL_DATA&lt;/code&gt; 부분은 앞서 설명한 바와 같이, 크로스섹션 데이터를 자동으로 다운받을지에 대한 옵션입니다. 사용자에 따라 &lt;code&gt;OFF&lt;/code&gt;로 하고 직접 다운로드 받아서 가져오는 경우도 있습니다.&lt;/p&gt;
&lt;p&gt;이 글에서는 Geant4를 처음 설치하는 분들이 별도로 작업할 내용을 최소화하고자, 자동 다운로드 하는 방법으로 진행합니다.&lt;/p&gt;

  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;code&gt;ccmake&lt;/code&gt; (curses 기반 CMake)를 사용할 수 있는 분이라면, 이를 이용하는 편이 더욱 편할 수도 있습니다. 이에 관한 내용은 지면이 부족하여 생략합니다. :(far fa-grin-squint-tears):
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;다음과 같은 명령어와 함께 마무리되면 정상적으로 진행이 된 것입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cmake_done&#34; srcset=&#34;
               /g4install-106p2-ubt2004/cmake_done_hu59b50202ad73dc9f0ac73bd4a1e2ceec_5212_d962b0a01022ecdceb52d2963adad06b.png 400w,
               /g4install-106p2-ubt2004/cmake_done_hu59b50202ad73dc9f0ac73bd4a1e2ceec_5212_ecc011d54f915b53b9422d586ad841ca.png 760w,
               /g4install-106p2-ubt2004/cmake_done_hu59b50202ad73dc9f0ac73bd4a1e2ceec_5212_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-106p2-ubt2004/cmake_done_hu59b50202ad73dc9f0ac73bd4a1e2ceec_5212_d962b0a01022ecdceb52d2963adad06b.png&#34;
               width=&#34;647&#34;
               height=&#34;76&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;이어서 &lt;code&gt;make&lt;/code&gt; 명령어로 빌드를 진행하고, &lt;code&gt;make install&lt;/code&gt;로 설치를 마무리합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo make
sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;code&gt;make&lt;/code&gt; 명령어는 &lt;code&gt;-j &amp;lt;쓰레드 수&amp;gt;&lt;/code&gt; 옵션을 주면, 여러 쓰레드를 동시에 이용하여 좀 더 빨리 설치됩니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    &lt;code&gt;make&lt;/code&gt; 명령어에서 &lt;code&gt;-j&lt;/code&gt; 옵션을 주고 돌릴 때, 메모리가 부족한데 쓰레드 수가 너무 과하게 잡히면 &lt;code&gt;cc1plus&lt;/code&gt; 관련 에러가 발생할 수 있습니다. &lt;code&gt;-j&lt;/code&gt; 옵션에 적절한 숫자는 &lt;b&gt;자신의 쓰레드 수 * 1.2&lt;/b&gt; 입니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;환경변수-설정&#34;&gt;환경변수 설정&lt;/h2&gt;
&lt;p&gt;Geant4 툴킷을 설치하고나면 마지막으로 할 일이 있습니다. 바로 &lt;strong&gt;환경변수를 설정&lt;/strong&gt;하는 것입니다.&lt;/p&gt;
&lt;p&gt;Geant4 사용을 위해 컴퓨터에게 알려줘야 하는 초기값들이 몇 가지 있습니다만, 이를 정리하여 한 번에 자동으로 설정이 되게끔하는 파일을 Geant4에서 제공하고 있습니다.&lt;/p&gt;
&lt;p&gt;설치경로의 내부에 &lt;code&gt;bin/geant4.sh&lt;/code&gt;라는 파일입니다. (C-shell을 이용하시는 분은 &lt;code&gt;bin/geant4.csh&lt;/code&gt;를 이용합니다)&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Geant4가 여러 버전으로 설치되어 있는 경우, 원하는 버전의 &lt;code&gt;bin/geant4.sh&lt;/code&gt;를 실행함으로써 해당 버전으로 동작하도록 설정할 수 있습니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;실행을 위해서는 다음 명령어를 입력합니다. (&lt;code&gt;source&lt;/code&gt; 명령어 뒤에 오는 경로는 Geant4를 설치한 경로에 따라 바뀔 수 있습니다)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;source /opt/geant4/10.6.p02/bin/geant4.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;다만, 이 명령어는 실행한 이후 해당 shell이 종료될 때까지만 그 효과가 지속됩니다. 즉, 터미널을 새로 연다거나 하면 다시 환경변수 설정이 사라지게 되죠.&lt;/p&gt;
&lt;p&gt;그래서 일반적으로는 터미널을 켤 때마다 자동으로 한 번 실행되는 파일인 &lt;code&gt;~/.bashrc&lt;/code&gt; 맨 밑에 위의 명령줄을 적어둡니다. vim이나 gedit 등을 이용하여 직접 입력하셔도 되고, 다음 명령줄을 이용하여 &lt;code&gt;~/.bashrc&lt;/code&gt; 파일 맨 밑에 해당 내용이 추가되도록 하셔도 됩니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &amp;quot;source /opt/geant4/10.6.p02/bin/geant4.sh&amp;quot; &amp;gt;&amp;gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;~/.bashrc&lt;/code&gt;에 추가된 내용을 새로고침하기 위해 다음 줄까지 실행하고 넘어가겠습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;source ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;드디어 Geant4 설치가 끝났습니다!&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;제대로-설치되었는지-확인하기&#34;&gt;제대로 설치되었는지 확인하기&lt;/h2&gt;
&lt;h3 id=&#34;환경변수-확인&#34;&gt;환경변수 확인&lt;/h3&gt;
&lt;p&gt;정상적으로 설치가 완료되고 &lt;code&gt;geant.sh&lt;/code&gt; 파일이 제대로 실행되었다면, &lt;code&gt;G4...&lt;/code&gt;와 같은 형태의 환경변수가 크로스섹션 데이터를 담은 경로를 가리키고 있어야 합니다.&lt;/p&gt;
&lt;p&gt;다음 명령어를 통해 제대로 그 경로가 출력되는지 확인할 수 있습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;env | grep G4
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;G4env&#34; srcset=&#34;
               /g4install-106p2-ubt2004/G4env_hu1102490a29fda20111fe3e06fc01c4fd_34435_17846bd6732ec660a369cf341d379ff4.png 400w,
               /g4install-106p2-ubt2004/G4env_hu1102490a29fda20111fe3e06fc01c4fd_34435_315effa2cd254d4fae4ed70d0ec45f7b.png 760w,
               /g4install-106p2-ubt2004/G4env_hu1102490a29fda20111fe3e06fc01c4fd_34435_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-106p2-ubt2004/G4env_hu1102490a29fda20111fe3e06fc01c4fd_34435_17846bd6732ec660a369cf341d379ff4.png&#34;
               width=&#34;760&#34;
               height=&#34;237&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;예제-실행해보기&#34;&gt;예제 실행해보기&lt;/h3&gt;
&lt;h4 id=&#34;예제코드-복사해오기&#34;&gt;예제코드 복사해오기&lt;/h4&gt;
&lt;p&gt;예제코드는 &lt;strong&gt;소스 코드를 압축해제한 디렉토리 안&lt;/strong&gt;에 &lt;code&gt;examples&lt;/code&gt;이라는 디렉토리에 있습니다.&lt;/p&gt;
&lt;p&gt;우리의 경우에는 &lt;code&gt;/opt/geant4/10.6.p02/geant4.10.06.p02/examples&lt;/code&gt;이 되겠군요.&lt;/p&gt;
&lt;p&gt;테스트를 위해 &lt;code&gt;basic/B1&lt;/code&gt; 이라는 예제를 복사해오고, 복사해온 디렉토리 안으로 들어가봅시다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp -r /opt/geant4/10.6.p02/geant4.10.06.p02/examples/basic/B1 .
cd B1
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;예제코드-실행하기-터미널-상에서-실행&#34;&gt;예제코드 실행하기 (터미널 상에서 실행)&lt;/h4&gt;
&lt;p&gt;예제 코드 B1에는 다음과 같은 파일 및 디렉토리들이 있을 것입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;b1example&#34; srcset=&#34;
               /g4install-106p2-ubt2004/b1example_hu2b0264c12fc8d63cd9067b4beffeb1fb_6737_7d4a7c3e709907a7410a44a847981e3a.png 400w,
               /g4install-106p2-ubt2004/b1example_hu2b0264c12fc8d63cd9067b4beffeb1fb_6737_18ee76eaf7f4185acfb2c13e720c090b.png 760w,
               /g4install-106p2-ubt2004/b1example_hu2b0264c12fc8d63cd9067b4beffeb1fb_6737_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-106p2-ubt2004/b1example_hu2b0264c12fc8d63cd9067b4beffeb1fb_6737_7d4a7c3e709907a7410a44a847981e3a.png&#34;
               width=&#34;760&#34;
               height=&#34;62&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;이 글에서는 코드를 살펴보지는 않고, 그냥 실행만 하겠습니다.&lt;/p&gt;
&lt;p&gt;우선 빌드를 하기 위해 다음 명령어를 입력합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cmake .
make -f Makefile
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;다음 그림과 같이 많은 줄이 출력된 뒤, &lt;code&gt;[100%] Built target exampleB1&lt;/code&gt;까지 나오면 성공입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cmake_make&#34; srcset=&#34;
               /g4install-106p2-ubt2004/cmake_make_huc4ef8a6d99fcdd230b70d15474abe370_86490_17cd68d9b422eed5e6f3e4cafeb0f9a8.png 400w,
               /g4install-106p2-ubt2004/cmake_make_huc4ef8a6d99fcdd230b70d15474abe370_86490_dd048309e60202728a1ae6824433bfc2.png 760w,
               /g4install-106p2-ubt2004/cmake_make_huc4ef8a6d99fcdd230b70d15474abe370_86490_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-106p2-ubt2004/cmake_make_huc4ef8a6d99fcdd230b70d15474abe370_86490_17cd68d9b422eed5e6f3e4cafeb0f9a8.png&#34;
               width=&#34;760&#34;
               height=&#34;620&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;이어서 실행을 해봅니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./exampleB1 run1.mac
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;다음 그림처럼 또 무언가 잔뜩 출력된 뒤, &lt;code&gt;RunManagerKernel is deleted. Good bye :)&lt;/code&gt;가 출력되었다면 잘 실행된 것입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;exampleB1_runmac&#34; srcset=&#34;
               /g4install-106p2-ubt2004/exampleB1_runmac_hub1fed3afe1e544ed7be5854723b26421_52717_da6cd447281ce0174842e444ea297f69.png 400w,
               /g4install-106p2-ubt2004/exampleB1_runmac_hub1fed3afe1e544ed7be5854723b26421_52717_89286e8f8b48a21807266a0cd3ecea23.png 760w,
               /g4install-106p2-ubt2004/exampleB1_runmac_hub1fed3afe1e544ed7be5854723b26421_52717_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-106p2-ubt2004/exampleB1_runmac_hub1fed3afe1e544ed7be5854723b26421_52717_da6cd447281ce0174842e444ea297f69.png&#34;
               width=&#34;760&#34;
               height=&#34;689&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h4 id=&#34;예제코드-실행하기-gui-띄우기&#34;&gt;예제코드 실행하기 (GUI 띄우기)&lt;/h4&gt;
&lt;p&gt;Geant4 설치 시 Qt5와 OpenGL 설치도 함께 진행했으므로, 여러분의 우분투에 X window 관련 설정이 잘 되어있다면 다음 명령어로 GUI창도 띄워볼 수 있습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./exampleB1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;잘 실행되었다면 다음과 같은 창이 나타날 것입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;exampleB1_gui&#34; srcset=&#34;
               /g4install-106p2-ubt2004/exampleB1_gui_hue2766ed2f94b9529f211516c07186a9f_76426_0699a45c49f2473aff9790f41f8902d1.png 400w,
               /g4install-106p2-ubt2004/exampleB1_gui_hue2766ed2f94b9529f211516c07186a9f_76426_6a288eaaa576d22b6716c29439f2bb82.png 760w,
               /g4install-106p2-ubt2004/exampleB1_gui_hue2766ed2f94b9529f211516c07186a9f_76426_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-106p2-ubt2004/exampleB1_gui_hue2766ed2f94b9529f211516c07186a9f_76426_0699a45c49f2473aff9790f41f8902d1.png&#34;
               width=&#34;760&#34;
               height=&#34;591&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;여기까지 되셨다면 설치와 테스트까지 성공적으로 하신 것입니다! 고생하셨습니다.&lt;/p&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://geant4.cern.ch/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Geant4 Homepage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Geant4 Toolkit &lt;a href=&#34;https://geant4.web.cern.ch/support/download&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;소스 코드&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gcc.gnu.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GNU Compiler Collection&lt;/a&gt;(GCC)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cmake.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CMake&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://libexpat.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Expat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.qt.io/download-qt-for-application-development&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Qt5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.opengl.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OpenGL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Geant4 설치하기(10.7.p01, Ubuntu2004 LTS)</title>
      <link>https://evandde.github.io/g4install-107p1-ubt2004/</link>
      <pubDate>Mon, 15 Feb 2021 13:17:56 +0900</pubDate>
      <guid>https://evandde.github.io/g4install-107p1-ubt2004/</guid>
      <description>&lt;p&gt;이 글에서는 Linux계열 운영체제 중 하나인 &lt;strong&gt;Ubuntu 20.04 LTS&lt;/strong&gt;에서 &lt;strong&gt;Geant4 10.7 patch 01 버전&lt;/strong&gt;을 설치하는 방법에 대해 알아봅니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;설치-정보-요약&#34;&gt;설치 정보 요약&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;설치 환경&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;운영체제: Ubuntu 20.04 LTS&lt;/li&gt;
&lt;li&gt;인터넷 사용 가능&lt;/li&gt;
&lt;li&gt;관리자 권한 (&lt;code&gt;sudo&lt;/code&gt;) 이용 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;설치 대상&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Geant4 10.7 patch 01 버전&lt;/li&gt;
&lt;li&gt;CLHep 라이브러리 별도 설치하여 연동&lt;/li&gt;
&lt;li&gt;Cross-section data 직접 다운로드하여 준비&lt;/li&gt;
&lt;li&gt;Multi-threading 기능 활성화&lt;/li&gt;
&lt;li&gt;UI 및 가시화 기능 활용을 위해 Qt5, X11 OpenGL 라이브러리 연동하여 설치&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;설치 경로&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/opt/clhep/2.4.4.0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;여러 버전의 CLHep를 설치할 경우를 고려하여, &lt;code&gt;/opt/clhep&lt;/code&gt; 하위에 버전별로 디렉토리를 만들고 그 하위에 설치 진행&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/opt/geant4/10.7.p01&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;여러 버전의 Geant4를 설치할 경우를 고려하여, &lt;code&gt;/opt/geant4&lt;/code&gt; 하위에 버전별로 디렉토리를 만들고 그 하위에 설치 진행&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;tldr&#34;&gt;TL;DR&lt;/h2&gt;
&lt;h3 id=&#34;geant4-관련-필수선택-라이브러리-설치&#34;&gt;Geant4 관련 필수/선택 라이브러리 설치&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;apt&lt;/code&gt; 패키지 매니저 최신화&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt update -y &amp;amp;&amp;amp; sudo apt upgrade -y &amp;amp;&amp;amp; sudo apt autoremove -y
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;apt&lt;/code&gt;를 이용하여 다음 항목 설치&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;C++ 컴파일러 및 표준 라이브러리, 헤더 (&lt;font color=&#39;red&#39;&gt;Geant4 설치 시 필수 라이브러리&lt;/font&gt;)&lt;/li&gt;
&lt;li&gt;CMake (&lt;font color=&#39;red&#39;&gt;Geant4 설치 시 필수 라이브러리&lt;/font&gt;)&lt;/li&gt;
&lt;li&gt;Expat (Linux, macOS에서 &lt;font color=&#39;red&#39;&gt;Geant4 설치 시 필수 라이브러리&lt;/font&gt;)&lt;/li&gt;
&lt;li&gt;Qt5, X11 OpenGL 라이브러리 설치 (&lt;font color=&#39;blue&#39;&gt;Geant4 설치 시 선택 라이브러리&lt;/font&gt;. GUI 등 그래픽 기반 기능 사용에 필요)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install -y build-essential cmake libexpat1-dev qt5-default libxmu-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;clhep-설치&#34;&gt;CLHep 설치&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;CLHep 라이브러리를 설치할 디렉토리 생성&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo mkdir -p /opt/clhep
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;1에서 생성한 디렉토리로 이동하여, CLHep 소스코드 다운로드 (소스코드 용량 약 1.5 MB)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /opt/clhep
sudo wget https://proj-clhep.web.cern.ch/proj-clhep/dist1/clhep-2.4.4.0.tgz
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2에서 다운받은 압축파일을 압축해제&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo tar -xf clhep-2.4.4.0.tgz
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;압축해제로 생성된 &lt;code&gt;2.4.4.0&lt;/code&gt; 디렉토리로 이동한 뒤, &lt;code&gt;build&lt;/code&gt;라는 이름의 디렉토리를 생성하고 그 안으로 이동&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd 2.4.4.0
sudo mkdir build
cd build
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;컴파일 수행 (&lt;code&gt;make&lt;/code&gt; 명령은 인터넷 속도 및 cpu 성능에 따라 수 분가량 소요될 수 있음)&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    ccmake를 이용하여 설정하는 방법은 본문을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;(설치경로): &lt;code&gt;/opt/clhep/2.4.4.0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo cmake ../CLHEP -DCMAKE_INSTALL_PREFIX=/opt/clhep/2.4.4.0
sudo make -j `grep -c processor /proc/cpuinfo` &amp;amp;&amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;cross-section-data-준비&#34;&gt;Cross-section data 준비&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Geant4용 cross-section data를 넣을 디렉토리 생성&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo mkdir -p /opt/geant4/geant4data
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;1에서 생성한 디렉토리로 이동하여, cross-section data 다운로드 (전체 데이터 용량 약 928 MB)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /opt/geant4/geant4data
sudo wget https://geant4-data.web.cern.ch/datasets/G4NDL.4.6.tar.gz
sudo wget https://geant4-data.web.cern.ch/datasets/G4EMLOW.7.13.tar.gz
sudo wget https://geant4-data.web.cern.ch/datasets/G4PhotonEvaporation.5.7.tar.gz
sudo wget https://geant4-data.web.cern.ch/datasets/G4RadioactiveDecay.5.6.tar.gz
sudo wget https://geant4-data.web.cern.ch/datasets/G4SAIDDATA.2.0.tar.gz
sudo wget https://geant4-data.web.cern.ch/datasets/G4PARTICLEXS.3.1.1.tar.gz
sudo wget https://geant4-data.web.cern.ch/datasets/G4ABLA.3.1.tar.gz
sudo wget https://geant4-data.web.cern.ch/datasets/G4INCL.1.0.tar.gz
sudo wget https://geant4-data.web.cern.ch/datasets/G4PII.1.3.tar.gz
sudo wget https://geant4-data.web.cern.ch/datasets/G4ENSDFSTATE.2.3.tar.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2에서 다운받은 압축파일을 압축해제하고, 압축파일을 삭제&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo find -name &amp;quot;*.gz&amp;quot; -exec tar -xf {} \;
sudo rm -rf *.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;geant4-설치&#34;&gt;Geant4 설치&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Geant4 툴킷을 설치할 디렉토리 생성&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo mkdir -p /opt/geant4/10.7.p01
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;1에서 생성한 디렉토리로 이동하여, Geant4 소스코드 다운로드 (소스코드 용량 약 35 MB)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /opt/geant4/10.7.p01
sudo wget http://geant4-data.web.cern.ch/geant4-data/releases/geant4.10.07.p01.tar.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2에서 다운받은 압축파일을 압축해제 후 디렉토리명을 &lt;code&gt;source&lt;/code&gt;로 변경&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo tar -xf geant4.10.07.p01.tar.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;build&lt;/code&gt;라는 이름의 디렉토리를 만들고 안으로 이동&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo mkdir build
cd build
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;컴파일 수행 (&lt;code&gt;make&lt;/code&gt; 명령은 인터넷 속도 및 cpu 성능에 따라 수 분~수 십분 소요될 수 있음)&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    ccmake를 이용하여 설정하는 방법은 본문을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;(설치경로): &lt;code&gt;/opt/geant4/10.7.p01&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GEANT4_BUILD_MULTITHREADED&lt;/code&gt;(multi-threading 사용 여부): ON&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GEANT4_INSTALL_DATADIR&lt;/code&gt;(크로스섹션 데이터 경로): &lt;code&gt;/opt/geant4/geant4data&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GEANT4_USE_OPENGL_X11&lt;/code&gt;(X11 OpenGL 라이브러리 연동 여부): ON&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GEANT4_USE_QT&lt;/code&gt;(QT 라이브러리 연동 여부): ON&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GEANT4_USE_SYSTEM_CLHEP&lt;/code&gt;(직접 설치한 CLHep 라이브러리 연동 여부): ON&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CLHEP_DIR&lt;/code&gt;(CLHEP 경로): &lt;code&gt;/opt/clhep/2.4.4.0/lib/CLHEP-2.4.4.0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo cmake ../geant4.10.07.p01 -DCMAKE_INSTALL_PREFIX=/opt/geant4/10.7.p01 -DGEANT4_BUILD_MULTITHREADED=ON -DGEANT4_INSTALL_DATADIR=/opt/geant4/geant4data -DGEANT4_USE_OPENGL_X11=ON -DGEANT4_USE_QT=ON -DGEANT4_USE_SYSTEM_CLHEP=ON -DCLHEP_DIR=/opt/clhep/2.4.4.0/lib/CLHEP-2.4.4.0
sudo make -j `grep -c processor /proc/cpuinfo` &amp;amp;&amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;환경변수 세팅을 위해 &lt;code&gt;~/.bashrc&lt;/code&gt;에 내용 추가&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &amp;quot;source /opt/geant4/10.7.p01/bin/geant4.sh&amp;quot; &amp;gt;&amp;gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;prerequisite-설치&#34;&gt;Prerequisite 설치&lt;/h2&gt;
&lt;p&gt;인터넷이 안된다거나, 관리자 권한을 사용할 수 없다거나, Ubuntu가 아니라면 이야기가 좀 달라지겠지만&amp;hellip;&lt;/p&gt;
&lt;p&gt;앞서 말한 5가지 준비물은 모두 Ubuntu에서 제공하는 패키지 관리자 &lt;code&gt;apt&lt;/code&gt;를 통해 설치할 수 있습니다.&lt;/p&gt;
&lt;p&gt;(RedHat 계열의 리눅스에서도 패키지 관리자 &lt;code&gt;yum&lt;/code&gt;을 통해 유사한 명령어로 설치할 수 있습니다)&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    패키지 관리자를 사용하기 전에 최신화를 해주세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    본인이 &lt;strong&gt;서버 등을 관리하는 사람&lt;/strong&gt;이라면, &lt;strong&gt;최신화를 할 때 주의&lt;/strong&gt;하세요. 이런 경우에는 전체 패키지를 최신화하기보다는 &lt;strong&gt;원하는 특정 패키지를 선별하여 최신화하기를 권장&lt;/strong&gt;합니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;패키지-매니저-최신화&#34;&gt;패키지 매니저 최신화&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt update -y &amp;amp;&amp;amp; sudo apt upgrade -y &amp;amp;&amp;amp; sudo apt autoremove -y
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;c-컴파일러-및-표준-라이브러리-헤더-설치-gcc-등&#34;&gt;C++ 컴파일러 및 표준 라이브러리, 헤더 설치 (GCC 등)&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install -y build-essential
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;cmake-및-ccmake-설치&#34;&gt;CMake 및 CCMake 설치&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install -y cmake cmake-curses-gui
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;expat-설치&#34;&gt;Expat 설치&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install -y libexpat1-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;qt5-설치&#34;&gt;Qt5 설치&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install -y qt5-default
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;x11-opengl-설치&#34;&gt;X11 OpenGL 설치&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install -y libxmu-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;clhep-설치하기&#34;&gt;CLHep 설치하기&lt;/h3&gt;
&lt;p&gt;이어서 CLHep을 설치합니다. CLHep 라이브러리의 경우에는, apt 레포지토리에 원하는 버전이 없는 경우가 대부분이므로 직접 소스코드를 컴파일하여 설치합니다.&lt;/p&gt;
&lt;p&gt;Geant4 10.7 버전은 CLHep 2.4.4.0 버전을 요구합니다만, Geant4 버전이 바뀜에 따라 상응하는 CLHep 버전도 변경되므로 버전별 관리를 하는 것이 추후 심신이 편합니다. 따라서, 여기서는 &lt;code&gt;/opt/clhep/2.4.4.0&lt;/code&gt;과 같이 버전별로 경로를 만들어 설치하도록 하겠습니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;우선 CLHep 라이브러리를 설치할 디렉토리 생성합니다. (&lt;code&gt;/opt&lt;/code&gt;는 &lt;code&gt;sudo&lt;/code&gt; 권한이 있어야 수정할 수 있음)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo mkdir -p /opt/clhep
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;1에서 생성한 디렉토리로 이동하여, CLHep 소스코드를 다운로드합니다. (소스코드 용량 약 1.5 MB)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /opt/clhep
sudo wget https://proj-clhep.web.cern.ch/proj-clhep/dist1/clhep-2.4.4.0.tgz
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;code&gt;wget&lt;/code&gt; 명령어를 사용하지 않고, &lt;a href=&#34;https://proj-clhep.web.cern.ch/proj-clhep/clhep23.html&#34;&gt;CLHep 다운로드 페이지&lt;/a&gt;에서 직접 받아서 옮겨오셔도 괜찮습니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    본 글에서 다루는 2.4.4.0이 아닌 다른 버전을 설치하시는 경우에는, &lt;code&gt;wget&lt;/code&gt; 링크를 바꿔주셔야 합니다. 일반적으로 맨 뒤의 버전부분만 수정하면 됩니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2번 과정을 통해 받은 압축파일 &lt;code&gt;clhep-2.4.4.0.tgz&lt;/code&gt;을 압축해제합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo tar -xf clhep-2.4.4.0.tgz
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;2.4.4.0&lt;/code&gt; 디렉토리가 생성되며 압축이 해제됩니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;생성된 &lt;code&gt;2.4.4.0&lt;/code&gt; 디렉토리로 이동합니다. 이어서, 빌드를 수행하며 생기는 부산물을 보관하기 위한 &lt;code&gt;build&lt;/code&gt;라는 이름의 디렉토리를 생성하고 그 안으로 이동합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd 2.4.4.0
sudo mkdir build
cd build
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ccmake&lt;/code&gt; 명령어를 통해 Makefile 생성 작업을 진행합니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    ccmake란 cmake 작업에 요구되는 옵션을 UI형태로 보여주며 작업하게 해주는 프로그램입니다. 옵션명과 인자를 정확하게 알고있다면, &lt;code&gt;cmake&lt;/code&gt; 명령어를 이용하여 한번에 진행할 수도 있습니다. 이 명령줄은 위의 &lt;a href=&#34;#tldr&#34;&gt;TL;DR&lt;/a&gt; 부분을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;우선 ccmake를 실행하기 위해 다음 명령어를 입력합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo ccmake ../CLHEP
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;다음과 같은 화면이 뜰 것입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;clhep_ccmake_01&#34; srcset=&#34;
               /g4install-107p1-ubt2004/clhep_ccmake_01_hud34b15cfcc2a49f91e642cf8e10147cc_19361_4e0cb3dd35c344d92562c60211fd0890.png 400w,
               /g4install-107p1-ubt2004/clhep_ccmake_01_hud34b15cfcc2a49f91e642cf8e10147cc_19361_c00be5ad0d5d99c9bc512fc1b0903376.png 760w,
               /g4install-107p1-ubt2004/clhep_ccmake_01_hud34b15cfcc2a49f91e642cf8e10147cc_19361_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p1-ubt2004/clhep_ccmake_01_hud34b15cfcc2a49f91e642cf8e10147cc_19361_4e0cb3dd35c344d92562c60211fd0890.png&#34;
               width=&#34;760&#34;
               height=&#34;425&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;맨 처음 ccmake 프로그램을 실행하면, 기존 작업내용이 없어서 &lt;strong&gt;EMPTY CACHE&lt;/strong&gt;가 출력되고, 화면 아래에 보이는 바와 같이 키보드 [c]를 누르면 configure 작업이 수행되고, [q]를 누르면 종료되는 식입니다.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;[c]&lt;/b&gt;를 눌러 configure 작업을 수행합니다.&lt;/p&gt;
&lt;p&gt;이어서 다음의 화면이 뜰 것입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;clhep_ccmake_02&#34; srcset=&#34;
               /g4install-107p1-ubt2004/clhep_ccmake_02_hu94fe5788ed09fdfc24b71866fb3704e8_37289_3301190ac3c619396bee2b2a16c915ec.png 400w,
               /g4install-107p1-ubt2004/clhep_ccmake_02_hu94fe5788ed09fdfc24b71866fb3704e8_37289_32484eb861b4d0873ad6faa4cfe3b008.png 760w,
               /g4install-107p1-ubt2004/clhep_ccmake_02_hu94fe5788ed09fdfc24b71866fb3704e8_37289_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p1-ubt2004/clhep_ccmake_02_hu94fe5788ed09fdfc24b71866fb3704e8_37289_3301190ac3c619396bee2b2a16c915ec.png&#34;
               width=&#34;760&#34;
               height=&#34;425&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;여기서 &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; 항목이 CLHep을 설치할 경로를 설정하는 인자입니다. 우리는 이 값을 &lt;code&gt;/opt/clhep/2.4.4.0&lt;/code&gt;으로 변경하겠습니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;위아래 화살표키로 항목 간 이동이 가능하며, 엔터를 한 번 누르면 수정 모드로 변경되고, 내용 입력 후 다시 엔터를 한 번 누르면 확정됩니다.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;입력을 마친 뒤 [c] 키를 한번 더 누르면 다음과 같이 화면이 바뀝니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;clhep_ccmake_03&#34; srcset=&#34;
               /g4install-107p1-ubt2004/clhep_ccmake_03_hu8bfd5c075ad61c2e8da0f6c448ba1849_27388_f3dfa9ce4305f774982fd360bc78194b.png 400w,
               /g4install-107p1-ubt2004/clhep_ccmake_03_hu8bfd5c075ad61c2e8da0f6c448ba1849_27388_9ca136f51a35c446a4ab9ddc8b5ed1ca.png 760w,
               /g4install-107p1-ubt2004/clhep_ccmake_03_hu8bfd5c075ad61c2e8da0f6c448ba1849_27388_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p1-ubt2004/clhep_ccmake_03_hu8bfd5c075ad61c2e8da0f6c448ba1849_27388_f3dfa9ce4305f774982fd360bc78194b.png&#34;
               width=&#34;760&#34;
               height=&#34;425&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;새로 생긴 &lt;b&gt;[g]&lt;/b&gt;를 눌러 Makefile을 생성합니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;이제 컴파일 및 설치작업을 진행합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo make -j `grep -c processor /proc/cpuinfo` &amp;amp;&amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;code&gt;make&lt;/code&gt; 명령어는 &lt;code&gt;-j &amp;lt;쓰레드 수&amp;gt;&lt;/code&gt; 옵션을 주면, 여러 쓰레드를 동시에 이용하여 좀 더 빨리 설치됩니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    &lt;code&gt;make&lt;/code&gt; 명령어에서 &lt;code&gt;-j&lt;/code&gt; 옵션을 주고 돌릴 때, 메모리가 부족한데 쓰레드 수가 너무 과하게 잡히면 &lt;code&gt;cc1plus&lt;/code&gt; 관련 에러가 발생할 수 있습니다. &lt;code&gt;-j&lt;/code&gt; 옵션에 적절한 숫자는 &lt;b&gt;자신의 쓰레드 수 * 1.2&lt;/b&gt; 입니다. 여기서는 사용자 컴퓨터의 쓰레드 수를 가져오는 명령어인 &lt;code&gt;grep -c processor /proc/cpuinfo&lt;/code&gt;를 이용하여 자동으로 숫자가 입력되게 하였습니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code&gt;make&lt;/code&gt; 명령을 수행하면 퍼센트가 올라가며 컴파일이 수행될 것입니다. 이는 CPU 성능에 따라 수십 초 ~ 수 분 가량 소요될 수 있으니 잠시 휴식을 취하시면 됩니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;cross-section-data-준비하기&#34;&gt;Cross-section data 준비하기&lt;/h2&gt;
&lt;p&gt;Geant4를 설치하려면 cross-section data가 필요합니다. 이를 준비하는 방법은 두 가지 있습니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;사용자가 직접 다운받아서 압축 풀어서 준비.&lt;/li&gt;
&lt;li&gt;설치 과정에서 자동으로 다운로드.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;무엇을 택하든 크게 상관은 없습니다만, 여기서는 1번 방법에 해당하는 직접 준비를 해보겠습니다.&lt;/p&gt;
&lt;h3 id=&#34;geant4-cross-section-data-디렉토리-생성&#34;&gt;Geant4 cross-section data 디렉토리 생성&lt;/h3&gt;
&lt;p&gt;Cross-section data가 저장될 디렉토리를 생성한 뒤 이동합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo mkdir -p /opt/geant4/geant4data
cd /opt/geant4/geant4data
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;data-다운로드&#34;&gt;Data 다운로드&lt;/h3&gt;
&lt;p&gt;Cross-section data를 다운로드합니다. (총 10가지. 전체 데이터 용량 약 928 MB)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo wget https://geant4-data.web.cern.ch/datasets/G4NDL.4.6.tar.gz
sudo wget https://geant4-data.web.cern.ch/datasets/G4EMLOW.7.13.tar.gz
sudo wget https://geant4-data.web.cern.ch/datasets/G4PhotonEvaporation.5.7.tar.gz
sudo wget https://geant4-data.web.cern.ch/datasets/G4RadioactiveDecay.5.6.tar.gz
sudo wget https://geant4-data.web.cern.ch/datasets/G4SAIDDATA.2.0.tar.gz
sudo wget https://geant4-data.web.cern.ch/datasets/G4PARTICLEXS.3.1.1.tar.gz
sudo wget https://geant4-data.web.cern.ch/datasets/G4ABLA.3.1.tar.gz
sudo wget https://geant4-data.web.cern.ch/datasets/G4INCL.1.0.tar.gz
sudo wget https://geant4-data.web.cern.ch/datasets/G4PII.1.3.tar.gz
sudo wget https://geant4-data.web.cern.ch/datasets/G4ENSDFSTATE.2.3.tar.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;code&gt;wget&lt;/code&gt; 명령어를 사용하지 않고, &lt;a href=&#34;https://geant4.web.cern.ch/support/download&#34;&gt;Geant4 다운로드 페이지&lt;/a&gt;에서 직접 받아서 옮겨오셔도 괜찮습니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;위에 적힌 10가지 외에 G4RealSurface, G4TENDL, LEND 데이터가 있습니다만, 이는 필수가 아닌 옵션이므로 여기서는 생략하겠습니다.&lt;/p&gt;
&lt;h3 id=&#34;압축-해제&#34;&gt;압축 해제&lt;/h3&gt;
&lt;p&gt;10개의 파일을 하나하나 압축 해제하기 귀찮으므로, &lt;code&gt;find&lt;/code&gt; 명령어를 활용하여 일괄 해제 하는 명령어를 적어드립니다.&lt;/p&gt;
&lt;p&gt;이후 불필요한 압축파일(&lt;code&gt;*.gz&lt;/code&gt;)은 삭제해도 괜찮습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo find -name &amp;quot;*.gz&amp;quot; -exec tar -xf {} \;
sudo rm -rf *.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;geant4-설치하기&#34;&gt;Geant4 설치하기&lt;/h2&gt;
&lt;p&gt;이제 준비가 다 되었습니다. 이어서 Geant4를 설치해봅시다.&lt;/p&gt;
&lt;p&gt;우리가 설치하고자 하는 경로는 &lt;code&gt;/opt/geant4/10.7.p01&lt;/code&gt;입니다. 앞서 말씀드린 것처럼, 여러 버전의 Geant4를 설치할 경우를 고려하여 &lt;code&gt;/opt/geant4&lt;/code&gt; 하위에 버전명에 해당하는 디렉토리를 두어 세분화한 것입니다.&lt;/p&gt;
&lt;h3 id=&#34;설치를-위한-디렉토리-생성&#34;&gt;설치를 위한 디렉토리 생성&lt;/h3&gt;
&lt;p&gt;우선 해당 디렉토리를 생성하기 위해 다음 명령어를 입력합니다. (&lt;code&gt;/opt&lt;/code&gt;는 관리자 권한이 있어야 수정할 수 있음)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo mkdir -p /opt/geant4/10.7.p01
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;geant4-소스코드-다운로드&#34;&gt;Geant4 소스코드 다운로드&lt;/h3&gt;
&lt;p&gt;이어서, 해당 디렉토리로 이동한 뒤 Geant4 소스코드를 다운 받겠습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /opt/geant4/10.7.p01
sudo wget http://geant4-data.web.cern.ch/geant4-data/releases/geant4.10.07.p01.tar.gz 
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;code&gt;wget&lt;/code&gt; 명령어를 사용하지 않고, &lt;a href=&#34;https://geant4.web.cern.ch/support/download&#34;&gt;Geant4 다운로드 페이지&lt;/a&gt;에서 직접 받아서 옮겨오셔도 괜찮습니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    본 글에서 다루는 10.7.p01와 다른 버전을 설치하시는 경우에는, &lt;code&gt;wget&lt;/code&gt; 링크를 바꿔주셔야 합니다. 일반적으로 맨 뒤의 버전부분만 수정하면 됩니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;소스코드-압축-해제&#34;&gt;소스코드 압축 해제&lt;/h3&gt;
&lt;p&gt;위 과정을 통해 &lt;code&gt;geant4.10.07.p01.tar.gz&lt;/code&gt;라는 압축파일을 다운받으셨을 것입니다.&lt;/p&gt;
&lt;p&gt;다음 명령어를 통해 해당 파일의 압축을 해제합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo tar -xf geant4.10.07.p01.tar.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;geant4.10.07.p01&lt;/code&gt;라는 디렉토리가 생성되고 그 안에 압축이 풀리게 됩니다.&lt;/p&gt;
&lt;h3 id=&#34;빌드를-위한-build-디렉토리-생성&#34;&gt;빌드를 위한 build 디렉토리 생성&lt;/h3&gt;
&lt;p&gt;빌드를 수행하면 CMake와 관련된 잡다한 부산물이 생성됩니다. 관리의 용이성을 위해, 별도의 &lt;code&gt;build&lt;/code&gt;라는 디렉토리를 만들고 이 안에서 컴파일을 수행하겠습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo mkdir build
cd build
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;cmake-수행-ccmake-활용&#34;&gt;CMake 수행 (ccmake 활용)&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ccmake&lt;/code&gt; 명령어를 통해 Makefile 생성 작업을 진행합니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    ccmake란 cmake 작업에 요구되는 옵션을 UI형태로 보여주며 작업하게 해주는 프로그램입니다. 옵션명과 인자를 정확하게 알고있다면, &lt;code&gt;cmake&lt;/code&gt; 명령어를 이용하여 한번에 진행할 수도 있습니다. 이 명령줄은 위의 &lt;a href=&#34;#tldr&#34;&gt;TL;DR&lt;/a&gt; 부분을 참고하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;우선 ccmake를 실행하기 위해 다음 명령어를 입력합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo ccmake ../geant4.10.07.p01
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;다음과 같은 화면이 뜰 것입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;geant4_ccmake_01&#34; srcset=&#34;
               /g4install-107p1-ubt2004/geant4_ccmake_01_hua3be843ffbfadc86bab942fa940fc32c_19319_76737fcb125ccdba69d2fa4b2cd05c16.png 400w,
               /g4install-107p1-ubt2004/geant4_ccmake_01_hua3be843ffbfadc86bab942fa940fc32c_19319_2991042f60e0aee410ad5d4e0d6f3334.png 760w,
               /g4install-107p1-ubt2004/geant4_ccmake_01_hua3be843ffbfadc86bab942fa940fc32c_19319_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p1-ubt2004/geant4_ccmake_01_hua3be843ffbfadc86bab942fa940fc32c_19319_76737fcb125ccdba69d2fa4b2cd05c16.png&#34;
               width=&#34;760&#34;
               height=&#34;425&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;CLHep때와 마찬가지 모습입니다. &lt;b&gt;[c]&lt;/b&gt;를 눌러 configure 작업을 수행합니다.&lt;/p&gt;
&lt;p&gt;이어서 다음의 화면이 뜰 것입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;geant4_ccmake_02&#34; srcset=&#34;
               /g4install-107p1-ubt2004/geant4_ccmake_02_hu13f37bcfd817c18d39a6fc72f731cd66_24087_bd1863bbeb1656287ea49d5cc76aae9d.png 400w,
               /g4install-107p1-ubt2004/geant4_ccmake_02_hu13f37bcfd817c18d39a6fc72f731cd66_24087_f757ab3b85d01d0e815e46918622d8e4.png 760w,
               /g4install-107p1-ubt2004/geant4_ccmake_02_hu13f37bcfd817c18d39a6fc72f731cd66_24087_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p1-ubt2004/geant4_ccmake_02_hu13f37bcfd817c18d39a6fc72f731cd66_24087_bd1863bbeb1656287ea49d5cc76aae9d.png&#34;
               width=&#34;760&#34;
               height=&#34;425&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Geant4 설치를 위한 cross-section data가 어디있는지 못찾겠다는 문구입니다.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;[e]&lt;/b&gt;를 눌러 설정화면으로 돌아옵니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;geant4_ccmake_03&#34; srcset=&#34;
               /g4install-107p1-ubt2004/geant4_ccmake_03_hu64271c956081f9d7a11d1e78a210dcd6_68093_72aa0aadff1cb612fb145844cd0a4c36.png 400w,
               /g4install-107p1-ubt2004/geant4_ccmake_03_hu64271c956081f9d7a11d1e78a210dcd6_68093_928b95ca5e79c61325eb0a96f35f1f0c.png 760w,
               /g4install-107p1-ubt2004/geant4_ccmake_03_hu64271c956081f9d7a11d1e78a210dcd6_68093_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p1-ubt2004/geant4_ccmake_03_hu64271c956081f9d7a11d1e78a210dcd6_68093_72aa0aadff1cb612fb145844cd0a4c36.png&#34;
               width=&#34;760&#34;
               height=&#34;425&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;이 화면에서 우리는 Geant4 설치에 관한 여러가지 인자를 조정할 수 있습니다. 이 글에서는 앞서 설명했던 설치조건에 맞추어 다음 항목들을 변경할 것입니다. 그림의 빨간 체크표시 된 값들을 참고하세요.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;(설치경로): &lt;code&gt;/opt/geant4/10.7.p01&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GEANT4_BUILD_MULTITHREADED&lt;/code&gt;(multi-threading 사용 여부): ON&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GEANT4_INSTALL_DATADIR&lt;/code&gt;(크로스섹션 데이터 경로): &lt;code&gt;/opt/geant4/geant4data&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GEANT4_USE_OPENGL_X11&lt;/code&gt;(X11 OpenGL 라이브러리 연동 여부): ON&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GEANT4_USE_QT&lt;/code&gt;(QT 라이브러리 연동 여부): ON&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GEANT4_USE_SYSTEM_CLHEP&lt;/code&gt;(직접 설치한 CLHep 라이브러리 연동 여부): ON&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이후 &lt;b&gt;[c]&lt;/b&gt;를 눌러 configure 작업을 수행합니다.&lt;/p&gt;
&lt;p&gt;또 다른 에러가 뜰 것입니다. CLHep을 직접 설치한 것으로 연동하겠다고 하였는데, CLHep이 어디에 있는지 못찾겠다는 에러입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;geant4_ccmake_04&#34; srcset=&#34;
               /g4install-107p1-ubt2004/geant4_ccmake_04_hu3078bff302dd4ce24ab7c5be8c11df16_36734_dd82850956399746fdc560ead7ca52f5.png 400w,
               /g4install-107p1-ubt2004/geant4_ccmake_04_hu3078bff302dd4ce24ab7c5be8c11df16_36734_dfe6d831f125d0bc7f245be19f22a297.png 760w,
               /g4install-107p1-ubt2004/geant4_ccmake_04_hu3078bff302dd4ce24ab7c5be8c11df16_36734_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p1-ubt2004/geant4_ccmake_04_hu3078bff302dd4ce24ab7c5be8c11df16_36734_dd82850956399746fdc560ead7ca52f5.png&#34;
               width=&#34;760&#34;
               height=&#34;425&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;다음 그림과 같이 &lt;code&gt;CLHEP_DIR&lt;/code&gt;을 변경해줍니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;geant4_ccmake_05&#34; srcset=&#34;
               /g4install-107p1-ubt2004/geant4_ccmake_05_hub2d9ff68494c463387c836440e45bf4e_56440_9c6c993b07dd993e1e1b203ef7c73bcb.png 400w,
               /g4install-107p1-ubt2004/geant4_ccmake_05_hub2d9ff68494c463387c836440e45bf4e_56440_40054a229e7220ff885bd3840c92b680.png 760w,
               /g4install-107p1-ubt2004/geant4_ccmake_05_hub2d9ff68494c463387c836440e45bf4e_56440_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p1-ubt2004/geant4_ccmake_05_hub2d9ff68494c463387c836440e45bf4e_56440_9c6c993b07dd993e1e1b203ef7c73bcb.png&#34;
               width=&#34;760&#34;
               height=&#34;425&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CLHEP_DIR&lt;/code&gt;(CLHEP 경로): &lt;code&gt;/opt/clhep/2.4.4.0/lib/CLHEP-2.4.4.0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이제 다시 &lt;b&gt;[c]&lt;/b&gt;를 눌러 configure 작업을 수행하면, 에러는 뜨지 않고 Qt5 관련 경로가 알아서 잡힌 모습이 뜨게 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;geant4_ccmake_06&#34; srcset=&#34;
               /g4install-107p1-ubt2004/geant4_ccmake_06_hu709f9159207762a023727f38c5cc33e2_65511_70d6973712e75ca60f2dd7c572ac00d0.png 400w,
               /g4install-107p1-ubt2004/geant4_ccmake_06_hu709f9159207762a023727f38c5cc33e2_65511_9a355fb915cbea90489c74626f8cf484.png 760w,
               /g4install-107p1-ubt2004/geant4_ccmake_06_hu709f9159207762a023727f38c5cc33e2_65511_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p1-ubt2004/geant4_ccmake_06_hu709f9159207762a023727f38c5cc33e2_65511_70d6973712e75ca60f2dd7c572ac00d0.png&#34;
               width=&#34;760&#34;
               height=&#34;425&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;마지막으로 한번 더 &lt;b&gt;[c]&lt;/b&gt;를 눌러 configure 작업을 수행합니다. 이제 드디어 &lt;b&gt;[g]&lt;/b&gt; 버튼이 나타났습니다.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;[g]&lt;/b&gt;를 눌러 Makefile을 생성합니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;geant4_ccmake_07&#34; srcset=&#34;
               /g4install-107p1-ubt2004/geant4_ccmake_07_hu7791c7eb5f758a0275cf8fd6b0a3acdb_70381_bbc78dc6b0f753c56293c5c205abe5c5.png 400w,
               /g4install-107p1-ubt2004/geant4_ccmake_07_hu7791c7eb5f758a0275cf8fd6b0a3acdb_70381_888af432a20400bc53efcf854c2a2a6e.png 760w,
               /g4install-107p1-ubt2004/geant4_ccmake_07_hu7791c7eb5f758a0275cf8fd6b0a3acdb_70381_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p1-ubt2004/geant4_ccmake_07_hu7791c7eb5f758a0275cf8fd6b0a3acdb_70381_bbc78dc6b0f753c56293c5c205abe5c5.png&#34;
               width=&#34;760&#34;
               height=&#34;425&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;컴파일-및-설치작업&#34;&gt;컴파일 및 설치작업&lt;/h3&gt;
&lt;p&gt;이제 컴파일 및 설치작업을 진행합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo make -j `grep -c processor /proc/cpuinfo` &amp;amp;&amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;code&gt;make&lt;/code&gt; 명령어는 &lt;code&gt;-j &amp;lt;쓰레드 수&amp;gt;&lt;/code&gt; 옵션을 주면, 여러 쓰레드를 동시에 이용하여 좀 더 빨리 설치됩니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    &lt;code&gt;make&lt;/code&gt; 명령어에서 &lt;code&gt;-j&lt;/code&gt; 옵션을 주고 돌릴 때, 메모리가 부족한데 쓰레드 수가 너무 과하게 잡히면 &lt;code&gt;cc1plus&lt;/code&gt; 관련 에러가 발생할 수 있습니다. &lt;code&gt;-j&lt;/code&gt; 옵션에 적절한 숫자는 &lt;b&gt;자신의 쓰레드 수 * 1.2&lt;/b&gt; 입니다. 여기서는 사용자 컴퓨터의 쓰레드 수를 가져오는 명령어인 &lt;code&gt;grep -c processor /proc/cpuinfo&lt;/code&gt;를 이용하여 자동으로 숫자가 입력되게 하였습니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code&gt;make&lt;/code&gt; 명령을 수행하면 퍼센트가 올라가며 컴파일이 수행될 것입니다. 이는 CPU 성능에 따라 수 분 ~ 수십 분 가량 소요될 수 있으니 푹 쉬고 오세요.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;geant4_make&#34; srcset=&#34;
               /g4install-107p1-ubt2004/geant4_make_hua7e41a7b63fa0c1a8eb0a643fc558ee4_105500_3c06c5e6fcf6257e69fab880cffdc488.png 400w,
               /g4install-107p1-ubt2004/geant4_make_hua7e41a7b63fa0c1a8eb0a643fc558ee4_105500_6ae17510a0ce4e1dd6808c054a5bd49a.png 760w,
               /g4install-107p1-ubt2004/geant4_make_hua7e41a7b63fa0c1a8eb0a643fc558ee4_105500_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p1-ubt2004/geant4_make_hua7e41a7b63fa0c1a8eb0a643fc558ee4_105500_3c06c5e6fcf6257e69fab880cffdc488.png&#34;
               width=&#34;760&#34;
               height=&#34;425&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;환경변수-설정&#34;&gt;환경변수 설정&lt;/h2&gt;
&lt;p&gt;Geant4 툴킷을 설치하고나면 마지막으로 할 일이 있습니다. 바로 &lt;strong&gt;환경변수를 설정&lt;/strong&gt;하는 것입니다.&lt;/p&gt;
&lt;p&gt;Geant4 사용을 위해 컴퓨터에게 알려줘야 하는 초기값들이 몇 가지 있습니다만, 이를 정리하여 한 번에 자동으로 설정이 되게끔하는 파일을 Geant4에서 제공하고 있습니다.&lt;/p&gt;
&lt;p&gt;설치경로의 내부에 있는 &lt;code&gt;bin/geant4.sh&lt;/code&gt;라는 파일입니다. (C-shell을 이용하시는 분은 &lt;code&gt;bin/geant4.csh&lt;/code&gt;를 이용합니다)&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Geant4가 여러 버전으로 설치되어 있는 경우, 원하는 버전의 &lt;code&gt;bin/geant4.sh&lt;/code&gt;를 실행함으로써 해당 버전으로 동작하도록 설정할 수 있습니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;실행을 위해서는 다음 명령어를 입력합니다. (&lt;code&gt;source&lt;/code&gt; 명령어 뒤에 오는 경로는 Geant4를 설치한 경로에 따라 바뀔 수 있습니다)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;source /opt/geant4/10.7.p01/bin/geant4.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;다만, 이 명령어는 실행한 이후 해당 shell이 종료될 때까지만 그 효과가 지속됩니다. 즉, 터미널을 새로 연다거나 하면 다시 환경변수 설정이 사라지게 되죠.&lt;/p&gt;
&lt;p&gt;그래서 일반적으로는 터미널을 켤 때마다 자동으로 한 번 실행되는 파일인 &lt;code&gt;~/.bashrc&lt;/code&gt; 맨 밑에 위의 명령줄을 적어둡니다. vim이나 gedit 등을 이용하여 직접 입력하셔도 되고, 다음 명령줄을 이용하여 &lt;code&gt;~/.bashrc&lt;/code&gt; 파일 맨 밑에 해당 내용이 추가되도록 하셔도 됩니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &amp;quot;source /opt/geant4/10.7.p01/bin/geant4.sh&amp;quot; &amp;gt;&amp;gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;~/.bashrc&lt;/code&gt;에 추가된 내용을 새로고침하기 위해 다음 줄까지 실행하고 넘어가겠습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;source ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;드디어 Geant4 설치가 끝났습니다!&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;제대로-설치되었는지-확인하기&#34;&gt;제대로 설치되었는지 확인하기&lt;/h2&gt;
&lt;h3 id=&#34;환경변수-확인&#34;&gt;환경변수 확인&lt;/h3&gt;
&lt;p&gt;정상적으로 설치가 완료되고 &lt;code&gt;geant.sh&lt;/code&gt; 파일이 제대로 실행되었다면, &lt;code&gt;G4...&lt;/code&gt;와 같은 형태의 환경변수가 크로스섹션 데이터를 담은 경로를 가리키고 있어야 합니다.&lt;/p&gt;
&lt;p&gt;다음 명령어를 통해 제대로 그 경로가 출력되는지 확인할 수 있습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;env | grep G4
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;G4env&#34; srcset=&#34;
               /g4install-107p1-ubt2004/G4env_hu57ec8ae30cac818a4660715436bec0b7_30292_16edc7888164cea188874f79172c5740.png 400w,
               /g4install-107p1-ubt2004/G4env_hu57ec8ae30cac818a4660715436bec0b7_30292_4fb9ec7a8519c1ddf5ad065bb1f06e1a.png 760w,
               /g4install-107p1-ubt2004/G4env_hu57ec8ae30cac818a4660715436bec0b7_30292_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p1-ubt2004/G4env_hu57ec8ae30cac818a4660715436bec0b7_30292_16edc7888164cea188874f79172c5740.png&#34;
               width=&#34;553&#34;
               height=&#34;207&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;예제-실행해보기&#34;&gt;예제 실행해보기&lt;/h3&gt;
&lt;h4 id=&#34;예제코드-복사해오기&#34;&gt;예제코드 복사해오기&lt;/h4&gt;
&lt;p&gt;예제코드는 &lt;strong&gt;소스 코드를 압축해제한 디렉토리 안&lt;/strong&gt;에 &lt;code&gt;examples&lt;/code&gt;이라는 디렉토리에 있습니다.&lt;/p&gt;
&lt;p&gt;우리의 경우에는 &lt;code&gt;/opt/geant4/10.7.p01/geant4.10.07.p01/examples&lt;/code&gt;이 되겠군요.&lt;/p&gt;
&lt;p&gt;테스트를 위해 &lt;code&gt;basic/B1&lt;/code&gt; 이라는 예제를 복사해오고, 복사해온 디렉토리 안으로 들어가봅시다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp -r /opt/geant4/10.7.p01/geant4.10.07.p01/examples/basic/B1 .
cd B1
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;예제코드-실행하기-터미널-상에서-실행&#34;&gt;예제코드 실행하기 (터미널 상에서 실행)&lt;/h4&gt;
&lt;p&gt;예제 코드 B1에는 다음과 같은 파일 및 디렉토리들이 있을 것입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;b1example&#34; srcset=&#34;
               /g4install-107p1-ubt2004/b1example_hu5edf6da22d299150aa7e8f02df4d5762_9965_b2cb51134c96c03949161a50675a23d6.png 400w,
               /g4install-107p1-ubt2004/b1example_hu5edf6da22d299150aa7e8f02df4d5762_9965_81d1e10585c322f0bfd9cb50d26864c6.png 760w,
               /g4install-107p1-ubt2004/b1example_hu5edf6da22d299150aa7e8f02df4d5762_9965_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p1-ubt2004/b1example_hu5edf6da22d299150aa7e8f02df4d5762_9965_b2cb51134c96c03949161a50675a23d6.png&#34;
               width=&#34;760&#34;
               height=&#34;58&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;이 글에서는 코드를 살펴보지는 않고, 그냥 실행만 하겠습니다.&lt;/p&gt;
&lt;p&gt;우선 빌드를 하기 위해 다음 명령어를 입력합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cmake .
make -f Makefile
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;다음 그림과 같이 많은 줄이 출력된 뒤, &lt;code&gt;[100%] Built target exampleB1&lt;/code&gt;까지 나오면 성공입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cmake_make&#34; srcset=&#34;
               /g4install-107p1-ubt2004/cmake_make_hu26431fe645c026a33dab1d55bce329c9_149957_6833b0b3a183e190c2bb5cb356d50674.png 400w,
               /g4install-107p1-ubt2004/cmake_make_hu26431fe645c026a33dab1d55bce329c9_149957_af4c9ae0e0bd3122b8dc2f296f621cbe.png 760w,
               /g4install-107p1-ubt2004/cmake_make_hu26431fe645c026a33dab1d55bce329c9_149957_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p1-ubt2004/cmake_make_hu26431fe645c026a33dab1d55bce329c9_149957_6833b0b3a183e190c2bb5cb356d50674.png&#34;
               width=&#34;760&#34;
               height=&#34;710&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;이어서 실행을 해봅니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./exampleB1 run1.mac
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;다음 그림처럼 또 무언가 잔뜩 출력된 뒤, &lt;code&gt;RunManagerKernel is deleted. Good bye :)&lt;/code&gt;가 출력되었다면 잘 실행된 것입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;exampleB1_runmac&#34; srcset=&#34;
               /g4install-107p1-ubt2004/exampleB1_runmac_huea87dabda2709ba9c702c8795d99eb81_102505_a68af86c674bbfccbc4b109ba308c75e.png 400w,
               /g4install-107p1-ubt2004/exampleB1_runmac_huea87dabda2709ba9c702c8795d99eb81_102505_ac95731d6ca0c981df40e5113eb6e252.png 760w,
               /g4install-107p1-ubt2004/exampleB1_runmac_huea87dabda2709ba9c702c8795d99eb81_102505_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p1-ubt2004/exampleB1_runmac_huea87dabda2709ba9c702c8795d99eb81_102505_a68af86c674bbfccbc4b109ba308c75e.png&#34;
               width=&#34;760&#34;
               height=&#34;529&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h4 id=&#34;예제코드-실행하기-gui-띄우기&#34;&gt;예제코드 실행하기 (GUI 띄우기)&lt;/h4&gt;
&lt;p&gt;Geant4 설치 시 Qt5와 OpenGL 설치도 함께 진행했으므로, 여러분의 우분투에 X window 관련 설정이 잘 되어있다면 다음 명령어로 GUI창도 띄워볼 수 있습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./exampleB1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;잘 실행되었다면 다음과 같은 창이 나타날 것입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;exampleB1_gui&#34; srcset=&#34;
               /g4install-107p1-ubt2004/exampleB1_gui_hub97f1a8ae3d761e5b934d9f7c3803c78_89374_bc5709bcab8d2dd211fc73f6672ae9b1.png 400w,
               /g4install-107p1-ubt2004/exampleB1_gui_hub97f1a8ae3d761e5b934d9f7c3803c78_89374_d6d3c1730a40ac97bcbc8f32c5d97d4f.png 760w,
               /g4install-107p1-ubt2004/exampleB1_gui_hub97f1a8ae3d761e5b934d9f7c3803c78_89374_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p1-ubt2004/exampleB1_gui_hub97f1a8ae3d761e5b934d9f7c3803c78_89374_bc5709bcab8d2dd211fc73f6672ae9b1.png&#34;
               width=&#34;760&#34;
               height=&#34;591&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;여기까지 되셨다면 설치와 테스트까지 성공적으로 하신 것입니다! 고생하셨습니다.&lt;/p&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://geant4.cern.ch/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Geant4 Homepage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Geant4 Toolkit &lt;a href=&#34;https://geant4.web.cern.ch/support/download&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;소스 코드&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gcc.gnu.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GNU Compiler Collection&lt;/a&gt;(GCC)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cmake.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CMake&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://libexpat.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Expat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.qt.io/download-qt-for-application-development&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Qt5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.opengl.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OpenGL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Geant4 WSL에 설치 무작정 따라하기(초보자용)</title>
      <link>https://evandde.github.io/g4install-107p1-win10wslbasic/</link>
      <pubDate>Thu, 04 Mar 2021 10:39:24 +0900</pubDate>
      <guid>https://evandde.github.io/g4install-107p1-win10wslbasic/</guid>
      <description>&lt;p&gt;이 글은 Geant4 초보자 혹은 Geant4를 처음 사용하시는 분들에게, &lt;b&gt;Windows 10을 사용하는 개인 컴퓨터 환경&lt;/b&gt;에서 Geant4를 최대한 쉽게 설치하는 방법을 전달하기 위해 작성하였습니다. &lt;b&gt;(인터넷 연결 필요)&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;이 글에서 제시하는 방향보다, 각자에게 더 적합한 Geant4 설치 방향이 있을 수 있습니다.&lt;/p&gt;
&lt;p&gt;하지만, 이 글은 &lt;b&gt;배경지식 없이도 실무에 사용 가능한 수준으로 Geant4를 설치하는 것을 목적&lt;/b&gt;으로 하기 때문에, 작업 난이도 측면에서 쉬운 방향을 택하였습니다.&lt;/p&gt;
&lt;p&gt;다양한 설치 옵션을 입맛에 맞게 변경하기보다는, &amp;ldquo;&lt;strong&gt;우선 Geant4라는걸 써봐야겠다&lt;/strong&gt;&amp;rdquo; 라는 분에게 권장합니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;주의&#34;&gt;주의&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://geant4-userdoc.web.cern.ch/UsersGuides/InstallationGuide/html/gettingstarted.html#supported-and-tested-platforms&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Geant4 공식 설치가이드&lt;/a&gt;에서는, 현재(Version 10.7 기준) Windows Subsystem for Linux에서 Geant4를 사용하는 것에 대해 공식적인 지원은 제공하지 않는다고 하고 있습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;There is currently no official support for building/using Geant4 through Windows Subsystem for Linux, but we welcome reports or feedback on use of Geant4 under this system via our&lt;/em&gt; &lt;a href=&#34;https://geant4-forum.web.cern.ch/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Discourse Forum&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;다만, 제 경험상 Linux 운영체제에 직접 설치한 것에 비해 속도는 약간 느리지만, 결과 자체가 틀리게 나온다거나 사용 상에 문제가 있었던 적은 크게 없었기에 설치 과정을 공유합니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;작업-흐름-요약&#34;&gt;작업 흐름 요약&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Windows 10에서 지원하는 기능인 &lt;b&gt;Windows Subsystem for Linux(WSL)&lt;/b&gt;을 활용하여 Windows 10 내에 &lt;b&gt;Ubuntu 20.04 LTS&lt;/b&gt;를 설치합니다.&lt;/li&gt;
&lt;li&gt;Ubuntu 20.04 LTS 운영체제가 송신하는 그래픽 화면을 Windows10에서 띄울 수 있도록 해주는 &lt;strong&gt;Xming&lt;/strong&gt;을 설치합니다.&lt;/li&gt;
&lt;li&gt;Geant4 설치를 위해 Ubuntu 20.04 LTS 내에 필요한 라이브러리들을 설치합니다.&lt;/li&gt;
&lt;li&gt;Ubuntu 20.04 LTS에 Geant4를 설치합니다.
&lt;ul&gt;
&lt;li&gt;크로스섹션 데이터는 설치과정에서 자동으로 다운되도록 할 예정이므로 인터넷 연결이 필요합니다.&lt;/li&gt;
&lt;li&gt;CLHep이라는 외부 라이브러리를 연동할 수도 있습니다만, 이는 필수가 아니므로 따로 설치하지 않을 것입니다.&lt;/li&gt;
&lt;li&gt;그래픽정도는 보여야 기분이 좋으므로, 그래픽 라이브러리는 연동하여 설치하겠습니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Geant4 예제를 실행시켜, 잘 설치되었는지 확인합니다.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;ubuntu-2004-lts-설치하기&#34;&gt;Ubuntu 20.04 LTS 설치하기&lt;/h2&gt;
&lt;h3 id=&#34;windows-10의-os-빌드-버전-확인하기&#34;&gt;Windows 10의 OS 빌드 버전 확인하기&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;[WIN]+[R]로 실행창을 띄움.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;winver&lt;/code&gt; &lt;strong&gt;입력하고 실행&lt;/strong&gt;하여, OS 빌드가 16215보다 높은지 확인.&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    OS 빌드가 16215보다 낮으면, 윈도우즈 업데이트를 먼저 진행하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;winver&#34; srcset=&#34;
               /g4install-107p1-win10wslbasic/winver_hu1e24deef5e0713ba8aed36d87634342d_18146_f82f4e9ccac79e062380182447a20634.png 400w,
               /g4install-107p1-win10wslbasic/winver_hu1e24deef5e0713ba8aed36d87634342d_18146_f9db6729eb96a95aa793fe78f0bc4944.png 760w,
               /g4install-107p1-win10wslbasic/winver_hu1e24deef5e0713ba8aed36d87634342d_18146_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p1-win10wslbasic/winver_hu1e24deef5e0713ba8aed36d87634342d_18146_f82f4e9ccac79e062380182447a20634.png&#34;
               width=&#34;536&#34;
               height=&#34;472&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;확인 후에는 창을 끄셔도 됩니다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;wsl1-형태로-ubuntu-2004-lts-설치하기&#34;&gt;WSL1 형태로 Ubuntu 20.04 LTS 설치하기&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;[WIN]+[R]로 실행창을 띄움.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;powershell&lt;/code&gt; 입력하고, &lt;b&gt;[CTRL]+[SHIFT]+[ENTER]를 눌러서 실행&lt;/b&gt;하여, 관리자 권한으로 PowerShell을 실행.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    [WIN]+[R]로 띄운 실행창에서 [CTRL]+[SHIFT]+[ENTER]로 실행하면 관리자 권한으로 해당 프로그램을 실행합니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다음 명령어 입력.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;재부팅. (아마 자동으로 재부팅 요청이 뜰 것임)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Microsoft Store에서 &lt;b&gt;Ubuntu 20.04 LTS&lt;/b&gt;를 검색하여 설치. (이 &lt;a href=&#34;https://www.microsoft.com/store/productId/9N6SVWS3RX71&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;링크&lt;/a&gt;를 활용해도 됨)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;설치한 Ubuntu를 실행. (시작메뉴에서 찾을 수 있음)&lt;/p&gt;
&lt;p&gt;자동으로 추가적인 설치작업이 이루어진 뒤 계정 생성 과정이 진행 됨.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;wsl_firstrun&#34; srcset=&#34;
               /g4install-107p1-win10wslbasic/wsl_firstrun_hu667f8da113358d28593ba3aa96b0f8eb_32356_fd5de9c372a23a8b871a5a6bde87339a.png 400w,
               /g4install-107p1-win10wslbasic/wsl_firstrun_hu667f8da113358d28593ba3aa96b0f8eb_32356_bb46f5ad519a74a5d627359c04d0a2c2.png 760w,
               /g4install-107p1-win10wslbasic/wsl_firstrun_hu667f8da113358d28593ba3aa96b0f8eb_32356_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p1-win10wslbasic/wsl_firstrun_hu667f8da113358d28593ba3aa96b0f8eb_32356_fd5de9c372a23a8b871a5a6bde87339a.png&#34;
               width=&#34;760&#34;
               height=&#34;396&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;원하는 계정명(ID)과 비밀번호(Password)를 입력.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;b&gt;이로써 여러분은 Windows 10 안에서 Ubuntu 20.04 LTS라는 리눅스 운영체제를 사용할 수 있게 되었습니다.&lt;/b&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;xming-설치&#34;&gt;Xming 설치&lt;/h2&gt;
&lt;h3 id=&#34;설치하기&#34;&gt;설치하기&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.straightrunning.com/XmingNotes/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Xming 공식 홈페이지&lt;/a&gt;에서 Xming 다운로드.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;xming_download&#34; srcset=&#34;
               /g4install-107p1-win10wslbasic/xming_download_hu33841999fc63939f7eb474d869007bc1_60385_e5985975304aa3ceb123b58cde707df8.png 400w,
               /g4install-107p1-win10wslbasic/xming_download_hu33841999fc63939f7eb474d869007bc1_60385_36e1f59157a5f369f428e8e3dac4458d.png 760w,
               /g4install-107p1-win10wslbasic/xming_download_hu33841999fc63939f7eb474d869007bc1_60385_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p1-win10wslbasic/xming_download_hu33841999fc63939f7eb474d869007bc1_60385_e5985975304aa3ceb123b58cde707df8.png&#34;
               width=&#34;760&#34;
               height=&#34;514&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다운받은 파일을 실행하여 Xming 설치. (&lt;strong&gt;다음&lt;/strong&gt;만 누르면서 진행해도 괜찮음)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;실행하기&#34;&gt;실행하기&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;설치를 마치면 기본값으로 Xming이 자동으로 실행 될 것입니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;별도로 설치 옵션을 건드리지 않으셨다면, 시작메뉴에서 Xming을 찾을 수 있습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Xming이 켜져 있는지의 여부는, 작업표시줄 오른쪽의 트레이아이콘을 확인하시면 알 수 있습니다. 트레이아이콘 중 X모양의 아이콘이 있다면 켜져있는 것입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;xming_running&#34; srcset=&#34;
               /g4install-107p1-win10wslbasic/xming_running_hu7d32509324eb9cf6b913e8446f20cba9_11550_fdf8f270899a5f07d2f8e873ec6e5aa4.png 400w,
               /g4install-107p1-win10wslbasic/xming_running_hu7d32509324eb9cf6b913e8446f20cba9_11550_25fafa912564ab70957f284af9aaa48f.png 760w,
               /g4install-107p1-win10wslbasic/xming_running_hu7d32509324eb9cf6b913e8446f20cba9_11550_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p1-win10wslbasic/xming_running_hu7d32509324eb9cf6b913e8446f20cba9_11550_fdf8f270899a5f07d2f8e873ec6e5aa4.png&#34;
               width=&#34;363&#34;
               height=&#34;40&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;종료하고자 할 때에는, &lt;strong&gt;트레이아이콘을 우클릭&lt;/strong&gt;하고 &lt;strong&gt;Exit&lt;/strong&gt;를 눌러주시면 됩니다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;geant4를-위한-관련-라이브러리-설치&#34;&gt;Geant4를 위한 관련 라이브러리 설치&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;앞서 설치한 Ubuntu를 실행.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다음 명령어를 입력하여, Xming과의 연동을 위해 &lt;code&gt;DISPLAY&lt;/code&gt; 환경변수 설정.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &amp;quot;export DISPLAY=localhost:0&amp;quot; &amp;gt;&amp;gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다음 명령어를 입력하여, &lt;code&gt;apt&lt;/code&gt; 패키지 매니저 최신화&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt update -y &amp;amp;&amp;amp; sudo apt upgrade -y &amp;amp;&amp;amp; sudo apt autoremove -y
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;&lt;code&gt;sudo&lt;/code&gt; 명령어로 인해, 비밀번호를 입력하라는 문구가 뜰 수 있습니다.&lt;/p&gt;
&lt;p&gt;이는 리눅스에서의 관리자 권한을 사용하기 위해 확인하는 절차입니다.&lt;/p&gt;
&lt;p&gt;여러분이 만든 계정의 비밀번호를 입력해주시면 됩니다.&lt;/p&gt;

  &lt;/div&gt;
&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다음 명령어를 입력하여, 관련 라이브러리 설치&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;C++ 컴파일러 및 표준 라이브러리, 헤더 (&lt;font color=&#39;red&#39;&gt;Geant4 설치 시 필수 라이브러리&lt;/font&gt;)&lt;/li&gt;
&lt;li&gt;CMake (&lt;font color=&#39;red&#39;&gt;Geant4 설치 시 필수 라이브러리&lt;/font&gt;)&lt;/li&gt;
&lt;li&gt;Expat (Linux, macOS에서 &lt;font color=&#39;red&#39;&gt;Geant4 설치 시 필수 라이브러리&lt;/font&gt;)&lt;/li&gt;
&lt;li&gt;Qt5, X11 OpenGL 라이브러리 설치 (&lt;font color=&#39;blue&#39;&gt;Geant4 설치 시 선택 라이브러리&lt;/font&gt;. GUI 등 그래픽 기반 기능 사용에 필요)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install -y build-essential cmake libexpat1-dev qt5-default libxmu-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;br&gt;
&lt;p&gt;설치에 시간이 다소 소요될 수 있으니 잠시 쉬고 오셔도 됩니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;geant4-설치&#34;&gt;Geant4 설치&lt;/h2&gt;
&lt;p&gt;&lt;b&gt;명령어 부분만 순서대로 입력하시면 됩니다.&lt;/b&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Geant4 툴킷을 설치할 디렉토리 생성&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo mkdir -p /opt/geant4/10.7.p01
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;1에서 생성한 디렉토리로 이동하여, Geant4 소스코드 다운로드 (소스코드 용량 약 40 MB)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /opt/geant4/10.7.p01
sudo wget http://geant4-data.web.cern.ch/geant4-data/releases/geant4.10.07.p01.tar.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2에서 다운받은 압축파일을 압축해제&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo tar -xf geant4.10.07.p01.tar.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;build&lt;/code&gt;라는 이름의 디렉토리를 만들고 안으로 이동&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo mkdir build
cd build
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;컴파일 수행 (&lt;code&gt;make&lt;/code&gt; 명령은 인터넷 속도 및 cpu 성능에 따라 수 분~수 십분 소요될 수 있음)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;(설치경로): &lt;code&gt;/opt/geant4/10.7.p01&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GEANT4_BUILD_MULTITHREADED&lt;/code&gt;(multi-threading 사용 여부): ON&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GEANT4_INSTALL_DATA&lt;/code&gt;(크로스섹션 데이터 자동설치 여부): ON (데이터 총 용량 약 900 MB)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GEANT4_USE_OPENGL_X11&lt;/code&gt;(X11 OpenGL 라이브러리 연동 여부): ON&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GEANT4_USE_QT&lt;/code&gt;(QT 라이브러리 연동 여부): ON&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo cmake ../geant4.10.07.p01 -DCMAKE_INSTALL_PREFIX=/opt/geant4/10.7.p01 -DGEANT4_BUILD_MULTITHREADED=ON -DGEANT4_INSTALL_DATA=ON -DGEANT4_USE_OPENGL_X11=ON -DGEANT4_USE_QT=ON
sudo make -j `grep -c processor /proc/cpuinfo`
sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;b&gt;이 부분에서 꽤 오랜 시간이 소요됩니다. 잠시 쉬고 오세요.&lt;/b&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;환경변수 세팅을 위해 &lt;code&gt;~/.bashrc&lt;/code&gt;에 내용 추가&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &amp;quot;source /opt/geant4/10.7.p01/bin/geant4.sh&amp;quot; &amp;gt;&amp;gt; ~/.bashrc
source ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;geant4-예제-실행해보기&#34;&gt;Geant4 예제 실행해보기&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;다음 명령어를 입력하여 예제파일 복사해오기&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp -r /opt/geant4/10.7.p01/geant4.10.07.p01/examples/basic/B1 ~
cd ~/B1
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다음 명령어를 입력하여 빌드하기&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir build
cd build
cmake ..
make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;다음 그림과 같이 많은 줄이 출력된 뒤, &lt;code&gt;[100%] Built target exampleB1&lt;/code&gt;까지 나오면 성공입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;cmake_make&#34; srcset=&#34;
               /g4install-107p1-win10wslbasic/cmake_make_hucb13345fed95db3b387cfdd935fb214c_85484_f87da9b385d901c39133bcc0be9f1861.png 400w,
               /g4install-107p1-win10wslbasic/cmake_make_hucb13345fed95db3b387cfdd935fb214c_85484_445140d93fc8a1ef22937bdab6a8e55b.png 760w,
               /g4install-107p1-win10wslbasic/cmake_make_hucb13345fed95db3b387cfdd935fb214c_85484_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p1-win10wslbasic/cmake_make_hucb13345fed95db3b387cfdd935fb214c_85484_f87da9b385d901c39133bcc0be9f1861.png&#34;
               width=&#34;760&#34;
               height=&#34;401&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다음 명령어를 입력하여 실행해보기&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./exampleB1 run1.mac
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;다음 그림처럼 또 무언가 잔뜩 출력된 뒤, &lt;code&gt;RunManagerKernel is deleted. Good bye :)&lt;/code&gt;가 출력되었다면 잘 실행된 것입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;exampleB1_runmac&#34; srcset=&#34;
               /g4install-107p1-win10wslbasic/exampleB1_runmac_hu2b5f55a409345fc587137ada4e2143ee_50692_5580240f696ec05ba0a107086678191e.png 400w,
               /g4install-107p1-win10wslbasic/exampleB1_runmac_hu2b5f55a409345fc587137ada4e2143ee_50692_246ccf4cd993ca735391c2ab128c80a7.png 760w,
               /g4install-107p1-win10wslbasic/exampleB1_runmac_hu2b5f55a409345fc587137ada4e2143ee_50692_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p1-win10wslbasic/exampleB1_runmac_hu2b5f55a409345fc587137ada4e2143ee_50692_5580240f696ec05ba0a107086678191e.png&#34;
               width=&#34;760&#34;
               height=&#34;400&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다음 명령어를 입력하여 GUI 띄워보기&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    이 부분은 Xming이 실행된 상태에서만 가능합니다. 반드시 Xming이 실행되어 있는지 확인하세요.
  &lt;/div&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./exampleB1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;잘 실행되었다면 다음과 같은 창이 나타날 것입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;exampleB1_gui&#34; srcset=&#34;
               /g4install-107p1-win10wslbasic/exampleB1_gui_hu6a3d2e5bf3c69fff3c6a7ce2b678df94_80571_bbafbfcec6d6b71af76c2297c08b748f.png 400w,
               /g4install-107p1-win10wslbasic/exampleB1_gui_hu6a3d2e5bf3c69fff3c6a7ce2b678df94_80571_7f65a6b400d3857cf5a146bd93d741a2.png 760w,
               /g4install-107p1-win10wslbasic/exampleB1_gui_hu6a3d2e5bf3c69fff3c6a7ce2b678df94_80571_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4install-107p1-win10wslbasic/exampleB1_gui_hu6a3d2e5bf3c69fff3c6a7ce2b678df94_80571_bbafbfcec6d6b71af76c2297c08b748f.png&#34;
               width=&#34;760&#34;
               height=&#34;591&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;여기까지 되셨다면 설치와 테스트까지 성공적으로 하신 것입니다! 고생하셨습니다.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
