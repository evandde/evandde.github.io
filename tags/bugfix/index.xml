<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>BugFix | EvaNote</title>
    <link>https://evandde.github.io/tags/bugfix/</link>
      <atom:link href="https://evandde.github.io/tags/bugfix/index.xml" rel="self" type="application/rss+xml" />
    <description>BugFix</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>ko-kr</language><copyright>© 2020–2021 Evan Kim</copyright><lastBuildDate>Tue, 06 Apr 2021 15:39:13 +0900</lastBuildDate>
    <image>
      <url>https://evandde.github.io/media/icon_hu8e7e87b14a52eedd9109bf1b224bd29e_18847_512x512_fill_lanczos_center_3.png</url>
      <title>BugFix</title>
      <link>https://evandde.github.io/tags/bugfix/</link>
    </image>
    
    <item>
      <title>PyQt5 이용 시 qt.qpa.plugin 오류 해결</title>
      <link>https://evandde.github.io/python-cannotfind-qtplatform/</link>
      <pubDate>Tue, 06 Apr 2021 15:39:13 +0900</pubDate>
      <guid>https://evandde.github.io/python-cannotfind-qtplatform/</guid>
      <description>&lt;p&gt;Python에서 PyQt5 라이브러리를 연동하여 GUI 프로그래밍을 할 때 발생한 &amp;ldquo;&lt;b&gt;qt.qpa.plugin: Could not find the Qt platform plugin &amp;quot;windows&amp;quot; in &amp;quot;&amp;quot;.&lt;/b&gt;&amp;rdquo; 과 같은 오류를 해결하는 방법에 대해 알아봅니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;error&#34; srcset=&#34;
               /python-cannotfind-qtplatform/error_hu2a7690d5c5b903129d6d684495ca992a_5063_ddd8afe814aa43159c3f0f5c6398366b.png 400w,
               /python-cannotfind-qtplatform/error_hu2a7690d5c5b903129d6d684495ca992a_5063_7e193f59731bf897576490bbdb61a0a1.png 760w,
               /python-cannotfind-qtplatform/error_hu2a7690d5c5b903129d6d684495ca992a_5063_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/python-cannotfind-qtplatform/error_hu2a7690d5c5b903129d6d684495ca992a_5063_ddd8afe814aa43159c3f0f5c6398366b.png&#34;
               width=&#34;760&#34;
               height=&#34;33&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    이 글에서는 &lt;code&gt;pip install pyqt5 pyqt5-tools&lt;/code&gt; 등의 과정을 통해 pyqt5는 이미 설치한 상태라고 가정합니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;tldr&#34;&gt;TL;DR&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;python 실행&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다음 명령줄 입력하여 python이 설치된 경로 확인 (venv로 실행 중이라면 venv 경로로 뜰 것임)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import sys
sys.executable
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;뜨는 경로 중 &lt;strong&gt;시작부터 Scripts 이전까지&lt;/strong&gt;를 복사&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;pyexepath&#34; srcset=&#34;
               /python-cannotfind-qtplatform/pyexepath_huc30f9c59f7b2c1f418fb90567114822a_15257_8b1e541b51847c1519af2598ce8dc4c6.png 400w,
               /python-cannotfind-qtplatform/pyexepath_huc30f9c59f7b2c1f418fb90567114822a_15257_664e989523045a51bb4fc7a2e67502d1.png 760w,
               /python-cannotfind-qtplatform/pyexepath_huc30f9c59f7b2c1f418fb90567114822a_15257_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/python-cannotfind-qtplatform/pyexepath_huc30f9c59f7b2c1f418fb90567114822a_15257_8b1e541b51847c1519af2598ce8dc4c6.png&#34;
               width=&#34;760&#34;
               height=&#34;122&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PowerShell을 관리자권한으로 실행&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다음 명령줄 입력하여 &lt;strong&gt;환경변수 설정&lt;/strong&gt;. 이 때 따옴표 안의 경로는, &lt;strong&gt;앞서 3번에서 복사한 경로&lt;/strong&gt; 뒤에 &lt;code&gt;\Lib\site-packages\PyQt5\Qt\plugins\platforms&lt;/code&gt;를 이어 붙임. \(역슬래시)는 한 개씩이든 두 개씩이든 상관 없음&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;setx QT_QPA_PLATFORM_PLUGIN_PATH &amp;quot;C:\\Users\\---\\python\\venv\Lib\site-packages\PyQt5\Qt\plugins\platforms&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;재부팅&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;원인&#34;&gt;원인&lt;/h2&gt;
&lt;p&gt;문제가 발생하는 원인은 에러문구에 적힌 바와 같이, Qt platform plugin의 경로를 찾지 못했기 때문입니다.&lt;/p&gt;
&lt;p&gt;환경변수 &lt;code&gt;QT_QPA_PLATFORM_PLUGIN_PATH&lt;/code&gt;를 통해 해당 플러그인의 위치를 찾는데, 해당 내용이 설정되어 있지 않아 경로를 찾지못한다는 오류가 발생하는 것입니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;해결책&#34;&gt;해결책&lt;/h2&gt;
&lt;p&gt;우리가 설치해준 pyqt5 라이브러리 내에 있는 platforms 항목과 연동해주면 문제가 해결됩니다.&lt;/p&gt;
&lt;p&gt;pip를 통해 설치하게 되면, python 경로의 &lt;code&gt;Lib\site-packages\&lt;/code&gt; 안에 설치한 내용물이 보관됩니다.&lt;/p&gt;
&lt;p&gt;python 경로는 python을 실행하여 다음 명령어를 입력하면 확인할 수 있습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import sys
sys.executable
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;여기서 나오는 경로는 python.exe라는 실행파일의 경로이므로, Scripts라는 폴더 이전까지의 경로 부분만 복사해둡니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;pyexepath&#34; srcset=&#34;
               /python-cannotfind-qtplatform/pyexepath-16307493249411_huc30f9c59f7b2c1f418fb90567114822a_15257_535dc2a3d62ca743db7c9d1381a66519.png 400w,
               /python-cannotfind-qtplatform/pyexepath-16307493249411_huc30f9c59f7b2c1f418fb90567114822a_15257_7b1f6ffff426805e83b42123c5208ff3.png 760w,
               /python-cannotfind-qtplatform/pyexepath-16307493249411_huc30f9c59f7b2c1f418fb90567114822a_15257_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/python-cannotfind-qtplatform/pyexepath-16307493249411_huc30f9c59f7b2c1f418fb90567114822a_15257_535dc2a3d62ca743db7c9d1381a66519.png&#34;
               width=&#34;760&#34;
               height=&#34;122&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;이후, PowerShell을 관리자권한으로 실행하고 다음 명령어를 입력해 환경변수를 설정해 줍니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;setx QT_QPA_PLATFORM_PLUGIN_PATH &amp;quot;C:\\Users\\---\\python\\venv\Lib\site-packages\PyQt5\Qt\plugins\platforms&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;여기서 &lt;code&gt;C:\\Users\\---\\python\\venv&lt;/code&gt; 부분은 여러분이 앞서 확인하신 경로로 바꿔주셔야 합니다.&lt;/p&gt;
&lt;p&gt;앞부분 경로를 변경하고, 뒤의 &lt;code&gt;\Lib\site-packages\PyQt5\Qt\plugins\platforms&lt;/code&gt; 부분만 그대로 유지하시면 됩니다.&lt;/p&gt;
&lt;p&gt;환경변수 설정이 완료되었다면, 환경변수 적용을 위해 &lt;strong&gt;재부팅&lt;/strong&gt;을 해주면 해결됩니다!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>WSL에서 libQt5 관련 &#34;No such file or directory&#34; 에러 해결</title>
      <link>https://evandde.github.io/cannot-open-libqt5core/</link>
      <pubDate>Wed, 28 Oct 2020 13:00:27 +0900</pubDate>
      <guid>https://evandde.github.io/cannot-open-libqt5core/</guid>
      <description>&lt;p&gt;WSL로 설치된 Debian계열 리눅스에서 Qt5 기반 프로그램 실행 시, libQt5*.so 파일과 관련하여 발생하는 cannot access 오류를 해결하는 방법에 대해 알아봅니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;tldr&#34;&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;다음 명령어 입력. (&lt;code&gt;/usr/lib/x86_64-linux-gnu/libQt5Core.so.5&lt;/code&gt; 부분은 에러 문구에 나온 경로로 입력)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo strip --remove-section=.note.ABI-tag /usr/lib/x86_64-linux-gnu/libQt5Core.so.5
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;버그-설명&#34;&gt;버그 설명&lt;/h2&gt;
&lt;p&gt;WSL로 설치된 Debian계열 리눅스에서 Qt5 기반 프로그램을 실행하려 할 때, Qt5 라이브러리를 apt 등을 통해 정상설치 하였음에도 불구하고, libQt5Core.so.5, libQt5Gui.so.5, &amp;hellip; 등 libQt5 관련 라이브러리에서 cannot access 오류가 발생하는 경우가 있습니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;왜-발생하는가&#34;&gt;왜 발생하는가?&lt;/h2&gt;
&lt;p&gt;WSL로 설치된 Debian 계열 리눅스(Ubuntu 등)에 대해 &lt;a href=&#34;https://github.com/Microsoft/WSL/issues/3023&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;알려진 이슈&lt;/a&gt;입니다.&lt;/p&gt;
&lt;p&gt;내용이 어려워서 저도 전부 이해하지는 못했으나, 대강의 흐름은 이렇습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Qt5 tool에서 &lt;code&gt;lupdate&lt;/code&gt;를 실행할 때, (&lt;code&gt;LD_DEBUG=all ldd /usr/lib/libQt5Xml.so&lt;/code&gt; 등)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;libQt5Core.so.5&lt;/code&gt;를 정상적인 라이브러리로 인식하지 않는 문제가 발생함.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.note.ABI-tag&lt;/code&gt;를 호출하는 ELF section이 존재하는 한, 이 라이브러리는 &lt;code&gt;ld-linux&lt;/code&gt;링커로 직접 실행될 수는 있지만, 다른 shared object와 연동하여 링킹될 수 없음.&lt;/li&gt;
&lt;li&gt;이를 해결하려면 &lt;code&gt;strip --remove-section=.note.ABI-tag /usr/lib/libQt5Core.so.5&lt;/code&gt;와 같이 해당 라이브러리에서 ELF section을 제거해야 함.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;해결방법&#34;&gt;해결방법&lt;/h2&gt;
&lt;p&gt;위에 설명한 바와 같이, &lt;code&gt;strip&lt;/code&gt;이라는 명령어를 사용하여 해당 정보를 제거하면 됩니다.&lt;/p&gt;
&lt;p&gt;맨 끝에 &lt;code&gt;/usr/lib/x86_64-linux-gnu/libQt5Core.so.5&lt;/code&gt; 부분은 에러 문구에 출력된 라이브러리 경로를 입력합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo strip --remove-section=.note.ABI-tag /usr/lib/x86_64-linux-gnu/libQt5Core.so.5
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/YosysHQ/nextpnr/issues/375&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/YosysHQ/nextpnr/issues/375&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://superuser.com/questions/1347723/arch-on-wsl-libqt5core-so-5-not-found-despite-being-installed&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://superuser.com/questions/1347723/arch-on-wsl-libqt5core-so-5-not-found-despite-being-installed&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Microsoft/WSL/issues/3023&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/Microsoft/WSL/issues/3023&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cudart64_xxx.dll not found 에러 해결</title>
      <link>https://evandde.github.io/cudart64-not-found/</link>
      <pubDate>Thu, 22 Oct 2020 16:22:11 +0900</pubDate>
      <guid>https://evandde.github.io/cudart64-not-found/</guid>
      <description>&lt;p&gt;TensorFlow 설치 후 이용 시, cudart64_xxx.dll을 찾지 못하는 오류를 해결하는 방법에 대해 알아봅니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;tldr&#34;&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://developer.nvidia.com/cuda-toolkit-archive&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://developer.nvidia.com/cuda-toolkit-archive&lt;/a&gt;에서 맞는 버전을 다운받아 설치합니다.&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;예: cudart64_101.dll -&amp;gt; CUDA Toolkit 10.1 update 2 설치&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;버그-설명&#34;&gt;버그 설명&lt;/h2&gt;
&lt;p&gt;TensorFlow 2를 설치한 뒤 이용하려 할 때, cudart64_xxx.dll을 찾지 못하는 에러가 발생하는 경우가 있습니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;error&#34; srcset=&#34;
               /cudart64-not-found/error_hu382ddf66dda8b9c0e74a84755a6eb4d7_2253_b4d5b5985f9e4f8d7db835e788f7e8e8.png 400w,
               /cudart64-not-found/error_hu382ddf66dda8b9c0e74a84755a6eb4d7_2253_77fefef733e646bb26fb5197085bb46d.png 760w,
               /cudart64-not-found/error_hu382ddf66dda8b9c0e74a84755a6eb4d7_2253_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/cudart64-not-found/error_hu382ddf66dda8b9c0e74a84755a6eb4d7_2253_b4d5b5985f9e4f8d7db835e788f7e8e8.png&#34;
               width=&#34;619&#34;
               height=&#34;21&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;왜-발생하는가&#34;&gt;왜 발생하는가?&lt;/h2&gt;
&lt;p&gt;TensorFlow 2로 오면서, GPU 사용이 기본이 되었습니다. 이에 따라, 관련 하드웨어 및 소프트웨어 요구사항이 존재합니다.&lt;/p&gt;
&lt;p&gt;자세한 사항은 &lt;a href=&#34;https://www.tensorflow.org/install/gpu&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tensorflow 설치가이드&lt;/a&gt;에서 확인할 수 있습니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;hw_req&#34; srcset=&#34;
               /cudart64-not-found/hw_req_hu0ad19dfc9e065e893c61606d7e6ce243_63185_2e4daa22fbdb1a9ca22f485cab83cc65.png 400w,
               /cudart64-not-found/hw_req_hu0ad19dfc9e065e893c61606d7e6ce243_63185_2f40a99a954aac8f53fb8ae8ffdbbe1b.png 760w,
               /cudart64-not-found/hw_req_hu0ad19dfc9e065e893c61606d7e6ce243_63185_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/cudart64-not-found/hw_req_hu0ad19dfc9e065e893c61606d7e6ce243_63185_2e4daa22fbdb1a9ca22f485cab83cc65.png&#34;
               width=&#34;760&#34;
               height=&#34;334&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;sw_req&#34; srcset=&#34;
               /cudart64-not-found/sw_req_hud0e9902a58724d102076724365675e5c_42769_199acbe09f63e0f25655ac084d4e3f07.png 400w,
               /cudart64-not-found/sw_req_hud0e9902a58724d102076724365675e5c_42769_f8a81e93701190f289777765c6bd9008.png 760w,
               /cudart64-not-found/sw_req_hud0e9902a58724d102076724365675e5c_42769_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/cudart64-not-found/sw_req_hud0e9902a58724d102076724365675e5c_42769_199acbe09f63e0f25655ac084d4e3f07.png&#34;
               width=&#34;658&#34;
               height=&#34;277&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;해결방법&#34;&gt;해결방법&lt;/h2&gt;
&lt;p&gt;NVIDIA 홈페이지의 CUDA Toolkit 다운로드 페이지에서 맞는 버전을 다운받아 설치합니다.&lt;/p&gt;
&lt;p&gt;최신 버전을 요구하지 않는 경우가 있으므로, &lt;a href=&#34;https://developer.nvidia.com/cuda-toolkit-archive&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;이 곳&lt;/a&gt;에서 해당하는 버전을 찾아 설치하시면 됩니다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cudart64_xxx.dll&lt;/code&gt;에서 xxx 부분이 버전에 해당합니다.&lt;/p&gt;
&lt;p&gt;예를 들어, 2020년 10월 기준 TensorFlow 2에서 요구하는 버전은 &lt;code&gt;cudart64_101.dll&lt;/code&gt;로, 10.1 버전을 받으시면 됩니다.&lt;/p&gt;
&lt;p&gt;아래 그림과 같이 뜨면 성공입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;solved&#34; srcset=&#34;
               /cudart64-not-found/solved_hu7ffe73168613e819c82d258fb467ba7d_2112_8a5b9af3a3a4aacd5d230414e955b80b.png 400w,
               /cudart64-not-found/solved_hu7ffe73168613e819c82d258fb467ba7d_2112_c30ee170c3d8e6492d464497f7492104.png 760w,
               /cudart64-not-found/solved_hu7ffe73168613e819c82d258fb467ba7d_2112_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/cudart64-not-found/solved_hu7ffe73168613e819c82d258fb467ba7d_2112_8a5b9af3a3a4aacd5d230414e955b80b.png&#34;
               width=&#34;376&#34;
               height=&#34;24&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nvcuda.dll not found 에러 해결</title>
      <link>https://evandde.github.io/nvcuda-not-found/</link>
      <pubDate>Thu, 22 Oct 2020 16:22:11 +0900</pubDate>
      <guid>https://evandde.github.io/nvcuda-not-found/</guid>
      <description>&lt;p&gt;TensorFlow 설치 후 이용 시, nvcuda.dll을 찾지 못하는 오류를 해결하는 방법에 대해 알아봅니다.&lt;/p&gt;
&lt;h2 id=&#34;tldr&#34;&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://developer.nvidia.com/cudnn&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://developer.nvidia.com/cudnn&lt;/a&gt;에서 CUDA 버전에 맞는 것을 다운받고, 압축을 풀어서 CUDA가 설치된 폴더에 넣습니다.&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;copypaste&#34; srcset=&#34;
               /nvcuda-not-found/copypaste_hu8118c5e6ec57f15f6a53e8df829aab86_81670_04970abf9b802ea87297ce7cc14f5414.png 400w,
               /nvcuda-not-found/copypaste_hu8118c5e6ec57f15f6a53e8df829aab86_81670_ea444af4382fc3129e4dd3dad094fb8e.png 760w,
               /nvcuda-not-found/copypaste_hu8118c5e6ec57f15f6a53e8df829aab86_81670_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/nvcuda-not-found/copypaste_hu8118c5e6ec57f15f6a53e8df829aab86_81670_04970abf9b802ea87297ce7cc14f5414.png&#34;
               width=&#34;760&#34;
               height=&#34;317&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;단, NVIDIA 회원가입, Developer 정보 입력, cuDNN 이용목적 등의 설문조사 참여가 필요합니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;버그-설명&#34;&gt;버그 설명&lt;/h2&gt;
&lt;p&gt;TensorFlow 2를 설치한 뒤 이용하려 할 때, nvcuda.dll을 찾지 못하는 에러가 발생하는 경우가 있습니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;error&#34; srcset=&#34;
               /nvcuda-not-found/error_hue42b89329cbf0c9bb54c8c8873bf2da3_1912_3f5c8833dac78aa5effbb9d6f73aa71d.png 400w,
               /nvcuda-not-found/error_hue42b89329cbf0c9bb54c8c8873bf2da3_1912_3809d7ab4deadc43b4ba748ba67085b2.png 760w,
               /nvcuda-not-found/error_hue42b89329cbf0c9bb54c8c8873bf2da3_1912_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/nvcuda-not-found/error_hue42b89329cbf0c9bb54c8c8873bf2da3_1912_3f5c8833dac78aa5effbb9d6f73aa71d.png&#34;
               width=&#34;528&#34;
               height=&#34;20&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;왜-발생하는가&#34;&gt;왜 발생하는가?&lt;/h2&gt;
&lt;p&gt;TensorFlow 2로 오면서, GPU 사용이 기본이 되었습니다. 이에 따라, 관련 하드웨어 및 소프트웨어 요구사항이 존재합니다.&lt;/p&gt;
&lt;p&gt;자세한 사항은 &lt;a href=&#34;https://www.tensorflow.org/install/gpu&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tensorflow 설치가이드&lt;/a&gt;에서 확인할 수 있습니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;hw_req&#34; srcset=&#34;
               /nvcuda-not-found/hw_req_hu0ad19dfc9e065e893c61606d7e6ce243_63185_2e4daa22fbdb1a9ca22f485cab83cc65.png 400w,
               /nvcuda-not-found/hw_req_hu0ad19dfc9e065e893c61606d7e6ce243_63185_2f40a99a954aac8f53fb8ae8ffdbbe1b.png 760w,
               /nvcuda-not-found/hw_req_hu0ad19dfc9e065e893c61606d7e6ce243_63185_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/nvcuda-not-found/hw_req_hu0ad19dfc9e065e893c61606d7e6ce243_63185_2e4daa22fbdb1a9ca22f485cab83cc65.png&#34;
               width=&#34;760&#34;
               height=&#34;334&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;sw_req&#34; srcset=&#34;
               /nvcuda-not-found/sw_req_hud0e9902a58724d102076724365675e5c_42766_3246670bca8fc23da6929713f1cb348b.png 400w,
               /nvcuda-not-found/sw_req_hud0e9902a58724d102076724365675e5c_42766_a8f7e4cb8fda40645dd7f1e531b4d257.png 760w,
               /nvcuda-not-found/sw_req_hud0e9902a58724d102076724365675e5c_42766_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/nvcuda-not-found/sw_req_hud0e9902a58724d102076724365675e5c_42766_3246670bca8fc23da6929713f1cb348b.png&#34;
               width=&#34;658&#34;
               height=&#34;277&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;해결방법&#34;&gt;해결방법&lt;/h2&gt;
&lt;p&gt;NVIDIA 홈페이지의 cuDNN 다운로드 페이지에서 맞는 버전을 다운받아 설치합니다.&lt;/p&gt;
&lt;p&gt;단, cuDNN은 NVIDIA에의 회원가입 및 개발자가입이 요구됩니다. 그리고 cuDNN을 어떤 목적으로 사용할 것인지에 대한 설문조사도 있습니다.&lt;/p&gt;
&lt;p&gt;2020년 10월 기준 TensorFlow 2에서 요구하는 버전은 cuDNN SDK 7.6이고, CUDA 10.1 버전을 지원하므로, 이에 맞추어 받으시면 됩니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;version_select&#34; srcset=&#34;
               /nvcuda-not-found/version_select_hu56cb2cb3fdb7b04d2156840e58308cc1_34348_713ffe1a465c6c3189ec2906574cb5ec.png 400w,
               /nvcuda-not-found/version_select_hu56cb2cb3fdb7b04d2156840e58308cc1_34348_99f5139abdd38e5c72e987720c9fc50b.png 760w,
               /nvcuda-not-found/version_select_hu56cb2cb3fdb7b04d2156840e58308cc1_34348_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/nvcuda-not-found/version_select_hu56cb2cb3fdb7b04d2156840e58308cc1_34348_713ffe1a465c6c3189ec2906574cb5ec.png&#34;
               width=&#34;701&#34;
               height=&#34;752&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;해당 링크에서 압축파일이 받아지는데, 이를 풀면 &lt;code&gt;cuda&lt;/code&gt; 폴더가 나옵니다.&lt;/p&gt;
&lt;p&gt;이 안의 내용물을, CUDA를 설치한 폴더 안에 그대로 붙여넣으시면 됩니다. (일반적으로는 &lt;code&gt;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\vXX.X&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;copypaste&#34; srcset=&#34;
               /nvcuda-not-found/copypaste-16307488096501_hu8118c5e6ec57f15f6a53e8df829aab86_81670_b6a31b77357e6082543346bbf4624f89.png 400w,
               /nvcuda-not-found/copypaste-16307488096501_hu8118c5e6ec57f15f6a53e8df829aab86_81670_e7fe8d94d462279d11506782c744136b.png 760w,
               /nvcuda-not-found/copypaste-16307488096501_hu8118c5e6ec57f15f6a53e8df829aab86_81670_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/nvcuda-not-found/copypaste-16307488096501_hu8118c5e6ec57f15f6a53e8df829aab86_81670_b6a31b77357e6082543346bbf4624f89.png&#34;
               width=&#34;760&#34;
               height=&#34;317&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PowerShell에서 git log, diff 출력 시 한글 깨지는 오류 해결</title>
      <link>https://evandde.github.io/powershell-encoding/</link>
      <pubDate>Fri, 25 Sep 2020 08:55:52 +0900</pubDate>
      <guid>https://evandde.github.io/powershell-encoding/</guid>
      <description>&lt;p&gt;PowerShell에서 git log나 git diff 출력 시 인코딩 문제로 인해 글자가 깨져 나오는 경우가 있습니다. 이 문제를 해결하는 방법을 알아봅니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;tldr&#34;&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Git 설정을 변경하거나, 혹은 PowerShell 설정을 변경하거나. 둘 중 하나만 해도 고쳐집니다.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;방법 1. Git 설정을 변경&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Git의 출력 설정을 변경합니다. 이 방법은 Git의 설정만을 변경하므로, Git에 한해서만 문제가 해결됩니다. PowerShell은 건드리지 않으므로, 동일한 문제가 다른 프로그램에서도 발생한다면 그 부분은 고쳐지지 않을 것입니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;git config --global core.pager &#39;less --raw-control-chars&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;방법 2. PowerShell 설정을 변경&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Powershell에서 환경변수를 설정합니다. 이는 해당 PowerShell창에 한해 일시적으로 문제를 해결합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$env:LC_ALL=&#39;C.UTF-8&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Powershell을 켤 때 자동실행되는 스크립트에 환경변수를 설정하는 내용을 적습니다. 이는 새로운 PowerShell 창이 켜질때마다 해당 PowerShell 창에 환경변수를 설정하므로, 영구적으로 문제를 해결해줍니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Set-ExecutionPolicy unrestricted
if(!(Test-Path -path $profile)){ New-Item -Type File -Path $profile -Force }
Add-Content -Path $profile -Value &#39;$env:LC_ALL=&#39;&#39;C.UTF-8&#39;&#39;&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;버그-설명&#34;&gt;버그 설명&lt;/h2&gt;
&lt;p&gt;PowerShell에서 git log를 출력해보니 다음과 같이 한글이 깨져서 출력되는 일을 겪었습니다.
이 글에서는 이런 문제를 해결하는 방법을 다룹니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;error&#34; srcset=&#34;
               /powershell-encoding/error_hufdf22be8e591394f0a42568a58c0ed27_16086_b9664a7b5d8539ab2fb522dee029690a.png 400w,
               /powershell-encoding/error_hufdf22be8e591394f0a42568a58c0ed27_16086_f0d97a7bff89a893c90dd4bfe0a4b671.png 760w,
               /powershell-encoding/error_hufdf22be8e591394f0a42568a58c0ed27_16086_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/powershell-encoding/error_hufdf22be8e591394f0a42568a58c0ed27_16086_b9664a7b5d8539ab2fb522dee029690a.png&#34;
               width=&#34;592&#34;
               height=&#34;138&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;왜-발생하는가&#34;&gt;왜 발생하는가?&lt;/h2&gt;
&lt;p&gt;Git과 PowerShell에서의 인코딩 형식이 호환되지 않아서 그렇습니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;해결방법-1-git-설정을-변경&#34;&gt;해결방법 1. Git 설정을 변경&lt;/h2&gt;
&lt;p&gt;첫 번째 방법은 git의 출력형식을 변경해주는 것입니다.
이 방법은 git의 설정만 변경할 뿐, PowerShell은 전혀 건드리지 않는다는 장점이 있습니다.&lt;/p&gt;
&lt;p&gt;PowerShell에서 다음 명령어를 통해 git의 출력 설정을 변경합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;git config --global core.pager &#39;less --raw-control-chars&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;solved_git&#34; srcset=&#34;
               /powershell-encoding/solved_git_hu64357c13934de96543c05c5f070dc987_12539_521def6365e24571de8c34c9ef91eec9.png 400w,
               /powershell-encoding/solved_git_hu64357c13934de96543c05c5f070dc987_12539_321e870c48786c27017403abc8bf36e1.png 760w,
               /powershell-encoding/solved_git_hu64357c13934de96543c05c5f070dc987_12539_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/powershell-encoding/solved_git_hu64357c13934de96543c05c5f070dc987_12539_521def6365e24571de8c34c9ef91eec9.png&#34;
               width=&#34;661&#34;
               height=&#34;155&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;참고로 이 세팅을 해제하는 방법은 다음과 같습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;git config --global --unset core.pager
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;해결방법-2-powershell-설정을-변경&#34;&gt;해결방법 2. PowerShell 설정을 변경&lt;/h2&gt;
&lt;p&gt;두 번째 방법은 PowerShell에서 인코딩하는 방식을 변경해주는 것입니다.
이 방법은 PowerShell 설정을 변경하는 것이므로, PowerShell에서 사용하는 다른 프로그램에 영향을 줄 수도 있습니다.&lt;/p&gt;
&lt;h3 id=&#34;해당-powershell-윈도우에서만-일시적으로-수정&#34;&gt;해당 PowerShell 윈도우에서만 일시적으로 수정&lt;/h3&gt;
&lt;p&gt;Powershell에서 &lt;code&gt;$env:LC_ALL&lt;/code&gt;이라는 환경변수의 값을 &lt;code&gt;&#39;C.UTF-8&#39;&lt;/code&gt;로 설정해주면 됩니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    이 방법은 그 PowerShell창에서만 유효합니다. 새로운 창에서는 문제가 다시 나타날 것입니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;다음 명령어를 입력하여 환경변수를 설정합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$env:LC_ALL=&#39;C.UTF-8&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;solved_ps&#34; srcset=&#34;
               /powershell-encoding/solved_ps_hua0003c83d795a1caf463a0107814780f_11172_2e5fcd9d08bc5cb7cf1c9f2b5e3e500c.png 400w,
               /powershell-encoding/solved_ps_hua0003c83d795a1caf463a0107814780f_11172_632c3c0ab97810d7e02c1f94758baed3.png 760w,
               /powershell-encoding/solved_ps_hua0003c83d795a1caf463a0107814780f_11172_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/powershell-encoding/solved_ps_hua0003c83d795a1caf463a0107814780f_11172_2e5fcd9d08bc5cb7cf1c9f2b5e3e500c.png&#34;
               width=&#34;593&#34;
               height=&#34;153&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;powershell을-시작할-때마다-수정되도록-자동실행-스크립트-생성&#34;&gt;PowerShell을 시작할 때마다 수정되도록 자동실행 스크립트 생성&lt;/h3&gt;
&lt;p&gt;PowerShell을 켤 때마다 자동으로 실행되는 스크립트를 만들고 그 스크립트에 &lt;code&gt;$env:LC_ALL&lt;/code&gt; 환경변수를 설정하는 내용을 적으면, 매 번 환경변수를 따로 설정하지 않아도 자동으로 문제가 해결됩니다.&lt;/p&gt;
&lt;p&gt;단, PowerShell에서 외부 스크립트를 실행하기 위해서는 &lt;strong&gt;실행 정책&lt;/strong&gt;의 &lt;strong&gt;제한을 풀어줘야&lt;/strong&gt; 합니다. 먼저, 다음 명령어를 통해 실행 정책 제한을 풀어줍니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Set-ExecutionPolicy unrestricted
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;PowerShell을 켤 때마다 자동으로 실행되는 스크립트의 경로는 &lt;code&gt;$profile&lt;/code&gt; 변수에 저장되어 있습니다. 다음 명령줄을 통해, 만약 해당 경로에 스크립트가 없다면 새로 만들어줍니다. 그 뒤, 만들어진 스크립트 파일에 &lt;code&gt;$env:LC_ALL=&#39;C.UTF-8&#39;&lt;/code&gt; 내용을 추가합니다. 이를 통해, 앞으로는 PowerShell을 새로 시작할 때마다 이 스크립트가 실행되어 환경변수가 설정되도록 할 수 있습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;if(!(Test-Path -path $profile)){ New-Item -Type File -Path $profile -Force }
Add-Content -Path $profile -Value &#39;$env:LC_ALL=&#39;&#39;C.UTF-8&#39;&#39;&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/41139067/git-log-output-encoding-issues-on-windows-10-command-prompt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://stackoverflow.com/questions/41139067/git-log-output-encoding-issues-on-windows-10-command-prompt&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
