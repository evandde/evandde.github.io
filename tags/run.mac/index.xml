<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>run.mac | EvaNote</title>
    <link>https://evandde.github.io/tags/run.mac/</link>
      <atom:link href="https://evandde.github.io/tags/run.mac/index.xml" rel="self" type="application/rss+xml" />
    <description>run.mac</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>ko-kr</language><copyright>© 2020–2021 Evan Kim</copyright><lastBuildDate>Fri, 18 Jun 2021 10:00:26 +0900</lastBuildDate>
    <image>
      <url>https://evandde.github.io/media/icon_hu8e7e87b14a52eedd9109bf1b224bd29e_18847_512x512_fill_lanczos_center_3.png</url>
      <title>run.mac</title>
      <link>https://evandde.github.io/tags/run.mac/</link>
    </image>
    
    <item>
      <title>Geant4 무작정 따라하기 - 7. Tracking Verbose</title>
      <link>https://evandde.github.io/g4-noqasked-007-trkvb/</link>
      <pubDate>Fri, 18 Jun 2021 10:00:26 +0900</pubDate>
      <guid>https://evandde.github.io/g4-noqasked-007-trkvb/</guid>
      <description>&lt;p&gt;Geant4 무작정 따라하기 시리즈의 일곱번째. 시뮬레이션에서 입자가 발생되어 수송되는 과정을 직접 눈으로 보기 위해, Tracking Verbose를 다루는 법을 알아봅니다.&lt;/p&gt;
&lt;p&gt;선원항을 정의하고 나면 시뮬레이션 상에서 실제로 내가 정의한대로 초기 입자가 발생되고 있는지 확인을 할 필요가 있을 것입니다. 그래서 선원항을 정의하는 방법을 배우기 전에, Tracking Verbose를 먼저 다루게 되었습니다.&lt;/p&gt;
&lt;p&gt;관련된 Geant4의 용어부터 간단하게 설명한 뒤, Tracking Verbose의 모습을 살펴보겠습니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;event--run&#34;&gt;Event &amp;amp; Run&lt;/h2&gt;
&lt;h3 id=&#34;event&#34;&gt;Event&lt;/h3&gt;
&lt;p&gt;입자 수송해석을 위한 몬테칼로 시뮬레이션이라 하면 일반적으로 &lt;strong&gt;방사선원이나 발생장치로부터 입자가 발생되는 시점부터 그 입자로 인해 야기된 여러 반응들을 모니터링하는 일련의 과정&lt;/strong&gt;을 &lt;font color=&#39;red&#39;&gt;&lt;b&gt;반복적으로 시행&lt;/b&gt;&lt;/font&gt;하는 것을 의미하지요.&lt;/p&gt;
&lt;p&gt;이렇게 반복적으로 시행되는 &lt;strong&gt;일련의 과정 1회&lt;/strong&gt;를 Geant4에서는 &lt;strong&gt;Event&lt;/strong&gt;라고 합니다. 다시 말해 &lt;strong&gt;Event&lt;/strong&gt;란, 초기 입자(Primary particle)가 발생하여 이로부터 파생되는 이차 입자들(Secondary particles)까지의 수송 과정을 의미하는 것입니다.&lt;/p&gt;
&lt;h3 id=&#34;run&#34;&gt;Run&lt;/h3&gt;
&lt;p&gt;몬테칼로 시뮬레이션에서 &amp;ldquo;&lt;strong&gt;시뮬레이션을 한 회 수행한다&lt;/strong&gt;&amp;ldquo;는 표현은 일반적으로 &lt;strong&gt;한 세트의 반복시행작업을 전부 끝냈음&lt;/strong&gt;을 의미할 것입니다.&lt;/p&gt;
&lt;p&gt;Geant4에서는 &lt;strong&gt;시뮬레이션 한 회&lt;/strong&gt;를 &lt;strong&gt;Run&lt;/strong&gt;이라고 합니다. 즉, 여러 개의 Event를 반복하는 싸이클을 한데 묶어 Run이라고 부르는 것이지요.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;tracking&#34;&gt;Tracking&lt;/h2&gt;
&lt;p&gt;Geant4의 가장 핵심적인 기능은 &lt;strong&gt;입자의 수송을 모사하는 것&lt;/strong&gt;입니다. Geant4가 &lt;strong&gt;입자를 수송하면서 그 입자의 상태를 추적하는 것&lt;/strong&gt;을 &lt;strong&gt;Tracking&lt;/strong&gt;이라고 합니다.&lt;/p&gt;
&lt;p&gt;다만 Geant4는 입자의 수송을 &amp;ldquo;&lt;strong&gt;모사&lt;/strong&gt;&amp;ldquo;하는 프로그램이기 때문에, 실제 세상에서 입자가 거동하는 것과는 다소 차이가 있습니다. 대표적으로 다음 두 가지 관점에서의 차이를 살펴봅시다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;동시성&lt;/p&gt;
&lt;p&gt;실제 세상에서는 여러 입자가 동시에 움직이고 있지만, Geant4는 기본적으로 한 번에 하나의 입자의 움직임만 계산합니다.&lt;/p&gt;
&lt;p&gt;예를 들어 감마선이 Compton 산란을 일으켜 전자를 생성한 경우를 생각해봅시다.&lt;/p&gt;
&lt;p&gt;실제 세상에서는 감마선과 전자가 동시에 이동하겠지요.&lt;/p&gt;
&lt;p&gt;하지만 Geant4에서는 일단 감마선을 수송하다가 Compton 산란이 일어나서 전자가 생성돼도 &amp;ldquo;전자가 이 위치에서 생성되었다&amp;quot;는 기록만 남겨둔 채 감마선을 계속 수송합니다. 그러다가 언젠가 그 감마선이 광전흡수나 쌍생성 반응 등으로 완전히 사라진 후에야 비로소 아까 기록해둔 전자의 생성 위치에서부터 전자의 수송을 시작합니다.&lt;/p&gt;
&lt;p&gt;즉, &lt;strong&gt;실제 세상&lt;/strong&gt;에서 &lt;strong&gt;동시&lt;/strong&gt;에 일어나는 일을, &lt;strong&gt;Geant4&lt;/strong&gt;에서는 한 번에 한 입자씩 &lt;strong&gt;순차적으로 나누어 모사&lt;/strong&gt;하는 것입니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;연속성&lt;/p&gt;
&lt;p&gt;실제 세상에서 입자는 연속적인 궤적을 따라 움직입니다. (0, 0, 0)에 있던 입자가 (1, 0, 0) 위치로 순간이동 하듯 움직이는 것이 아니죠. (양자역학적 관점에서의 이산성은 논외로 하겠습니다)&lt;/p&gt;
&lt;p&gt;그러나 Geant4는 입자를 수송할 때 그 &lt;strong&gt;연속적인 궤적을 지속적으로 추적하는 것이 불가능&lt;/strong&gt;합니다. 마치 &lt;strong&gt;이동하는 물체를 연속 사진 촬영&lt;/strong&gt;을 하듯, &lt;strong&gt;약간의 간격을 두고 추적&lt;/strong&gt;할 수밖에 없지요. 그래서 Geant4가 기록해둔 입자의 궤적은 마치 순간이동을 한 것처럼 띄엄띄엄 기록되어 있습니다.&lt;/p&gt;
&lt;p&gt;물론, 기록한 두 지점 사이에서 변화한 물리량은 여러가지 물리학적 이론과 계산식을 바탕으로, 실제 세상의 입자가 거동한 것과 최대한 유사하게끔 모사하긴 합니다. 다만, 기록하는 방식 자체가 연속적일 수는 없다는 것이지요.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이 두 가지 차이를 인지하고, Track과 Step의 개념을 간단하게만 살펴보겠습니다.&lt;/p&gt;
&lt;h3 id=&#34;track&#34;&gt;Track&lt;/h3&gt;
&lt;p&gt;Track이란 Geant4가 수송하고 있는 입자의 &amp;ldquo;&lt;strong&gt;현재 상태&lt;/strong&gt;&amp;ldquo;를 의미합니다.&lt;/p&gt;
&lt;p&gt;Geant4는 한 번에 하나의 입자만 수송한다고 하였으므로, 현재 수송 중인 어떠한 입자가 있을 것입니다. 그리고, 그 입자의 궤적을 볼 때 마치 사진을 촬영하듯 불연속적인 한 순간만 포착하여 본다고 했지요. 이렇게 포착한 &lt;strong&gt;한 순간의 스냅샷&lt;/strong&gt;이 &lt;strong&gt;그 입자의 Track&lt;/strong&gt;입니다. 스냅샷을 찍을 때마다 입자의 궤적 상에 불연속적인 &lt;strong&gt;분절점&lt;/strong&gt;이 생기고, 이 지점에서의 정보를 Track이 가지고 있게 되는 것이지요.&lt;/p&gt;
&lt;p&gt;이런 분절점을 자주 만들어 기록하면 실제 궤적과 상당히 유사한 정보를 얻을 수는 있겠지만, 그만큼 연산량이 늘어 계산 시간이 길어지게 될 것입니다. 반대로, 분절점을 너무 가끔 만들게 되면 계산 시간은 단축되겠지만 실제 궤적과의 차이가 심해져 계산의 정확도가 떨어지게 되겠지요.&lt;/p&gt;
&lt;p&gt;Geant4 분절점이 만들어지는 조건은 기본적으로 다음과 같습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;지오메트리의 경계에 도달한 경우&lt;/li&gt;
&lt;li&gt;물리적 반응이 일어난 경우&lt;/li&gt;
&lt;li&gt;사용자가 지정한 분절점 간의 최대 길이에 도달한 경우&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Track은 &lt;strong&gt;입자가 수송되더라도 변하지 않는 정적 정보&lt;/strong&gt;와 &lt;strong&gt;입자가 수송됨에 따라 변화하는 동적 정보&lt;/strong&gt;를 모두 담고 있습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;정적 정보
&lt;ul&gt;
&lt;li&gt;입자의 종류&lt;/li&gt;
&lt;li&gt;입자의 질량&lt;/li&gt;
&lt;li&gt;입자의 전하량&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;동적 정보
&lt;ul&gt;
&lt;li&gt;입자의 위치&lt;/li&gt;
&lt;li&gt;입자의 에너지&lt;/li&gt;
&lt;li&gt;입자의 운동방향&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;step&#34;&gt;Step&lt;/h3&gt;
&lt;p&gt;Step이란 &amp;ldquo;&lt;strong&gt;이전 Track과 현재 Track의 차이&lt;/strong&gt;&amp;ldquo;를 의미합니다.&lt;/p&gt;
&lt;p&gt;Track은 불연속적인 순간들이라고 하였습니다. 그렇다면 현재의 Track(방금 찍은 사진)과 바로 이전의 Track(직전에 찍은 사진) 간에 차이를 확인할 수 있을 것입니다. 이 &lt;strong&gt;현재와 직전의 차이&lt;/strong&gt;를 Geant4에서는 &lt;strong&gt;Step&lt;/strong&gt;이라는 개념으로 다루고 있습니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;verbose&#34;&gt;Verbose&lt;/h2&gt;
&lt;p&gt;Geant4에서 Verbose란 일종의 &lt;strong&gt;로그(log)&lt;/strong&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;라고 생각하시면 됩니다. 시뮬레이션이 어떤 조건 하에서 어떠한 설정값을 바탕으로 어떻게 진행되는지를 &lt;strong&gt;출력&lt;/strong&gt;하는 것이죠.&lt;/p&gt;
&lt;p&gt;이 시리즈에서는 Geant4에서 제공하는 여러가지 Verbose들 중 Tracking Verbose 만을 다룰 예정입니다. 이 외에도 Geant4는 Run, Event, Physics 등 다양한 항목에 대해 정보를 출력하는 기능을 제공하고 있으니 필요에 따라 찾아보시기 바랍니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;tracking-verbose&#34;&gt;Tracking Verbose&lt;/h2&gt;
&lt;p&gt;이 시리즈에서는 Tracking Verbose 한 가지만 알아볼 것입니다. Tracking Verbose는 말그대로 Geant4가 Tracking을 하며 얻은 정보를 출력(Verbose)하는 기능입니다. 출력 수준은 &lt;strong&gt;-1부터 5까지 조정&lt;/strong&gt;할 수 있으며, 수준이 높아질수록 더욱 상세한 정보가 출력됩니다.&lt;/p&gt;
&lt;h3 id=&#34;tracking-verbose-설정하기&#34;&gt;Tracking Verbose 설정하기&lt;/h3&gt;
&lt;p&gt;일단 Tracking Verbose를 설정하는 방법부터 알아봅시다.&lt;/p&gt;
&lt;p&gt;이전에 Geant4 프로그램을 실행하는 방식 중 &lt;a href=&#34;https://evandde.github.io/g4-noqasked-001-clonetest/#%ec%8b%a4%ed%96%89ui%eb%aa%a8%eb%93%9c-%ec%8b%a4%ed%96%89-batch%eb%aa%a8%eb%93%9c-%ec%8b%a4%ed%96%89&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;batch모드 실행&lt;/a&gt;에 대해 언급한 적이 있습니다. &lt;code&gt;./g4_minimal run.mac&lt;/code&gt;과 같이 입력하여 실행하면, &lt;code&gt;run.mac&lt;/code&gt;파일의 내용이 일괄적으로 입력되어 시뮬레이션이 수행된다고 했었지요. 여기서 &lt;code&gt;run.mac&lt;/code&gt;과 같은 파일을 &lt;b&gt;매크로파일(macro file)&lt;/b&gt;이라고 부릅니다.&lt;/p&gt;
&lt;p&gt;Tracking Verbose는 이러한 매크로파일을 이용하면 쉽게 설정할 수 있습니다.&lt;/p&gt;
&lt;p&gt;현재 &lt;code&gt;run.mac&lt;/code&gt; 파일을 열어보면 다음과 같이 작성되어 있을 것입니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Can be run in batch, without graphic
# or interactively: Idle&amp;gt; /control/execute run.mac

# Verbose
/control/verbose 2
/run/verbose 2
/event/verbose 0
/tracking/verbose 1

/run/beamOn 100
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    매크로파일에서 &lt;code&gt;#&lt;/code&gt; 이후는 주석으로 처리됩니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;주석 이후 위에서부터 4개 줄에 전부 verbose가 적혀있지요. 이 모두가 각 사항에 대한 출력 수준을 설정하는 부분입니다. 여기서는 &lt;code&gt;/tracking/verbose 1&lt;/code&gt;이라고 적힌 부분만 조절하며 살펴볼 것입니다. 적혀있는 숫자 &lt;code&gt;1&lt;/code&gt;은 &lt;strong&gt;출력 수준을 1로 설정&lt;/strong&gt;하겠다는 뜻입니다.&lt;/p&gt;
&lt;p&gt;마지막 줄에는 &lt;code&gt;/run/beamOn 100&lt;/code&gt;이라는 내용이 있는데요, 이 줄이 바로 Run을 실행하는 명령줄입니다. &lt;code&gt;/run/beamOn&lt;/code&gt;은 Geant4 프로그램이 입자 수송을 시작하도록 하는 명령어로, 뒤에 정수 인자를 받아 이 &lt;strong&gt;정수 값만큼 Event를 반복시행&lt;/strong&gt;하여 &lt;strong&gt;하나의 Run을 구성&lt;/strong&gt;하도록 합니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    필요에 따라, &lt;code&gt;/run/beamOn&lt;/code&gt; 줄을 여러 회 입력하여 여러 개의 Run이 순차적으로 실행되게끔 할 수도 있습니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;tracking-verbose-확인하기&#34;&gt;Tracking Verbose 확인하기&lt;/h3&gt;
&lt;p&gt;지금 상태인 출력 수준 1에서 출력이 제대로 되는지부터 확인해보겠습니다. &lt;code&gt;build&lt;/code&gt; 디렉토리에서 다음 명령어를 입력하여 Geant4 프로그램을 batch 모드로 실행합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./g4_minimal run.mac
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;01_batchrun&#34; srcset=&#34;
               /g4-noqasked-007-trkvb/01_batchrun_huc08464d3f5749a22c8510b2f1d8128b6_65792_89fd67b33e54a53b041a1cd8b34d5ae5.png 400w,
               /g4-noqasked-007-trkvb/01_batchrun_huc08464d3f5749a22c8510b2f1d8128b6_65792_ed09ae09db91898b21530b6a5d004529.png 760w,
               /g4-noqasked-007-trkvb/01_batchrun_huc08464d3f5749a22c8510b2f1d8128b6_65792_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4-noqasked-007-trkvb/01_batchrun_huc08464d3f5749a22c8510b2f1d8128b6_65792_89fd67b33e54a53b041a1cd8b34d5ae5.png&#34;
               width=&#34;760&#34;
               height=&#34;400&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;많은 양의 글이 화면에 주르륵 뜨며 스크롤이 내려간 뒤, 다음 그림과 같이 Good Bye :)를 띄우며 끝나는 것을 확인할 수 있을 것입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;02_batchrunend&#34; srcset=&#34;
               /g4-noqasked-007-trkvb/02_batchrunend_hu49339d8422ae1c6f14d1f0751b5cd448_74215_0d1d9efba2a3417b48143ece51b1486a.png 400w,
               /g4-noqasked-007-trkvb/02_batchrunend_hu49339d8422ae1c6f14d1f0751b5cd448_74215_5bfe2bf47194776a24ce55ab87d3f7d3.png 760w,
               /g4-noqasked-007-trkvb/02_batchrunend_hu49339d8422ae1c6f14d1f0751b5cd448_74215_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4-noqasked-007-trkvb/02_batchrunend_hu49339d8422ae1c6f14d1f0751b5cd448_74215_0d1d9efba2a3417b48143ece51b1486a.png&#34;
               width=&#34;760&#34;
               height=&#34;399&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;여기까지는 이미 이전 글에서 해봤던 작업이지요.&lt;/p&gt;
&lt;p&gt;지금 우리가 관심있는 부분은, 위에 스쳐지나간 &lt;strong&gt;많은 양의 글&lt;/strong&gt;입니다. 스크롤을 올리다보면 다음 그림과 같은 부분이 보일 것입니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;03_trackingverbose&#34; srcset=&#34;
               /g4-noqasked-007-trkvb/03_trackingverbose_hu30349d2646ba777bd862190f29ee5ef2_39791_98f217962839ec3b722913781bf4b35c.png 400w,
               /g4-noqasked-007-trkvb/03_trackingverbose_hu30349d2646ba777bd862190f29ee5ef2_39791_f8050bdc195a790e4b4f807b93cb714a.png 760w,
               /g4-noqasked-007-trkvb/03_trackingverbose_hu30349d2646ba777bd862190f29ee5ef2_39791_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4-noqasked-007-trkvb/03_trackingverbose_hu30349d2646ba777bd862190f29ee5ef2_39791_98f217962839ec3b722913781bf4b35c.png&#34;
               width=&#34;760&#34;
               height=&#34;399&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;이것이 Tracking Verbose 입니다. 보시다시피 출력되는 양이 너무 많기도 하고, 터미널 창에서 보기에는 불편함이 많지요. 그래서 일반적으로는 리눅스 표준 입출력을 redirection하는 명령어인 &lt;code&gt;&amp;gt;&lt;/code&gt; 기능을 사용하여 파일에 출력시켜 내용을 확인합니다. 이 명령어를 간단히 설명하면, &amp;ldquo;&lt;strong&gt;화면에 출력될 내용을 파일에 적고싶을 때 사용하는 명령어&lt;/strong&gt;&amp;ldquo;라고 보시면 됩니다.&lt;/p&gt;
&lt;p&gt;다음과 같이 입력해보겠습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./g4_minimal run.mac &amp;gt; vb.out
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;04_vbout&#34; srcset=&#34;
               /g4-noqasked-007-trkvb/04_vbout_hu3adb6c5584afbdff09ffc90d59ec6b07_4524_5042dc896246c24f3b1b10a35badd324.png 400w,
               /g4-noqasked-007-trkvb/04_vbout_hu3adb6c5584afbdff09ffc90d59ec6b07_4524_c317a56eba9b98c1efdfb9798396a7b3.png 760w,
               /g4-noqasked-007-trkvb/04_vbout_hu3adb6c5584afbdff09ffc90d59ec6b07_4524_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4-noqasked-007-trkvb/04_vbout_hu3adb6c5584afbdff09ffc90d59ec6b07_4524_5042dc896246c24f3b1b10a35badd324.png&#34;
               width=&#34;654&#34;
               height=&#34;38&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;이러면 &lt;b&gt;build 디렉토리 안&lt;/b&gt;에 &lt;b&gt;vb.out이라는 새로운 파일이 생성&lt;/b&gt;되고, 화면에는 아무것도 출력되지 않을 것입니다. 화면에 출력될 내용을 vb.out에 담은 것이지요. 이런 방법을 통해 Verbose 수준을 올려서 &lt;strong&gt;출력되는 내용을 저장한 뒤에 확인&lt;/strong&gt;할 수 있습니다.&lt;/p&gt;
&lt;p&gt;이제 Tracking Verbose의 출력 수준을 바꾸어가며, 실제로 어떤 내용이 출력되는지 차근차근 살펴보겠습니다.&lt;/p&gt;
&lt;h3 id=&#34;출력-수준--1-0&#34;&gt;출력 수준 -1, 0&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;-1: Silent&lt;/p&gt;
&lt;p&gt;0: Silent&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;단계 -1과 0은 아무런 정보도 출력하지 않는 단계입니다.&lt;/p&gt;
&lt;h3 id=&#34;출력-수준-1&#34;&gt;출력 수준 1&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;1: Minimum information of each Step&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Tracking Verbose를 1로 설정하였을 때의 출력은 다음 그림과 같습니다.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    여러분이 앞서 배치한 지오메트리에 따라, Tracking Verbose의 내용이 약간 다를수도 있습니다.
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;05_vb1&#34; srcset=&#34;
               /g4-noqasked-007-trkvb/05_vb1_hue0951ee785ef860f82684cfb95d129ab_55161_162488fb707a31dedcf805b19bd5cedd.png 400w,
               /g4-noqasked-007-trkvb/05_vb1_hue0951ee785ef860f82684cfb95d129ab_55161_7dbf82f38a67872e1d4cf5d3eaf75457.png 760w,
               /g4-noqasked-007-trkvb/05_vb1_hue0951ee785ef860f82684cfb95d129ab_55161_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4-noqasked-007-trkvb/05_vb1_hue0951ee785ef860f82684cfb95d129ab_55161_162488fb707a31dedcf805b19bd5cedd.png&#34;
               width=&#34;760&#34;
               height=&#34;411&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;이 그림에서 보이는 것이 입자를 Tracking한 기록 3개 분량입니다. 빨간색 테두리로 표시한만큼이 입자 하나의 생성부터 소멸까지의 기록입니다.&lt;/p&gt;
&lt;p&gt;각 기록마다 맨 위에는 Tracking한 &lt;strong&gt;입자의 정보&lt;/strong&gt;가 간단하게 적혀 있습니다. (주황색 테두리로 표시한 부분)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Particle: &lt;strong&gt;Tracking을 수행한 이 입자의 이름&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Track ID: &lt;strong&gt;Tracking을 수행한 이 입자의 고유 번호&lt;/strong&gt;. 해당 입자가 &lt;strong&gt;초기입자라면 1번&lt;/strong&gt;이 부여됨. 이후에는 반응을 통해 이차입자가 생성될 때마다 순차적으로 정수 값이 부여되는 식임.&lt;/li&gt;
&lt;li&gt;Parent ID: &lt;strong&gt;이 입자를 생성시킨 입자의 Track ID&lt;/strong&gt;. 해당 입자가 &lt;strong&gt;초기입자라면 0번&lt;/strong&gt;이 부여됨.(초기입자를 생성시킨 입자라는 개념은 존재하지 않음)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;여기서 입자의 이름으로 나타난 &lt;b&gt;geantino&lt;/b&gt;는 실제 존재하는 입자가 아니라 Geant4가 만들어낸 &lt;strong&gt;가상의 입자&lt;/strong&gt;입니다. 이 입자는 어떠한 반응도 일으키지 않는 입자로, 여러가지 테스트를 목적으로 종종 사용됩니다.&lt;/p&gt;
&lt;p&gt;자세한 사항은 선원항 정의를 다루게 될 다음 글에서 좀 더 살펴보도록 하겠습니다.&lt;/p&gt;

  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;초록색 테두리로 표시한 입자의 정보 아래 부분에는 해당 입자를 &lt;strong&gt;Tracking을 하며 획득한 다양한 정보가 순차적으로 기록&lt;/strong&gt;됩니다. 표 형태로 기록되어 있으며, &lt;strong&gt;Track이라는 스냅샷을 새로이 찍을 때마다 가로줄이 한 줄씩 추가&lt;/strong&gt;되는 식입니다. 각 열이 의미하는 바를 간단하게 설명하자면 다음과 같습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Step #: 해당 Step의 ID. Track의 값이 변경되어 Step이 바뀔 때마다 순차적으로 정수 값이 부여되는 식&lt;/li&gt;
&lt;li&gt;X(mm), Y(mm), Z(mm): 해당 Track 시점에서의 입자의 위치&lt;/li&gt;
&lt;li&gt;KinE(MeV): 해당 Track 시점에서의 입자의 운동에너지&lt;/li&gt;
&lt;li&gt;dE(MeV): 해당 Step에서 입자의 운동에너지 변화량&lt;/li&gt;
&lt;li&gt;StepLeng: 해당 Step에서 입자가 이동한 경로의 길이. 단위는 mm. &lt;b&gt;위치의 차이는 직선거리로 측정되는 반면, StepLeng은 계산식을 통해 추산한 실제 입자의 이동경로의 길이라는 점에 주의&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;TrackLeng: 해당 입자가 생성된 최초 위치로부터 현재 Track 시점까지 이동한 경로의 길이. 단위는 mm. StepLeng과 마찬가지로, 직선거리가 아닌 실제 입자의 이동경로의 길이임&lt;/li&gt;
&lt;li&gt;NextVolume: 해당 Track 시점 직후에 입자가 지나가게 될 지오메트리의 Physical Volume의 이름&lt;/li&gt;
&lt;li&gt;ProcName: 해당 분절점이 생성된 원인이 되는 반응의 이름&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;출력-수준-2&#34;&gt;출력 수준 2&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;2: Addition to Level=1, info of secondary particles.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Tracking Verbose를 2로 설정하면, 1일 때의 출력에 추가적으로 이차입자의 정보가 표시됩니다.&lt;/p&gt;
&lt;p&gt;현재 초기입자가 geantino라서 아무런 반응이 일어나지 않아 차이를 확인할 수 없을 것입니다.&lt;/p&gt;
&lt;p&gt;예시를 보여드리기 위해 제가 임의로 gamma를 수송할 때의 결과를 가져와 보았습니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;06_vb2&#34; srcset=&#34;
               /g4-noqasked-007-trkvb/06_vb2_hu7833e2b777444a3cdb3cfc3d62278add_27763_090c0c4123be6ecdc5e2c9b23e464b71.png 400w,
               /g4-noqasked-007-trkvb/06_vb2_hu7833e2b777444a3cdb3cfc3d62278add_27763_47e845c2bec2bc5c79a9351cd6c574ac.png 760w,
               /g4-noqasked-007-trkvb/06_vb2_hu7833e2b777444a3cdb3cfc3d62278add_27763_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4-noqasked-007-trkvb/06_vb2_hu7833e2b777444a3cdb3cfc3d62278add_27763_090c0c4123be6ecdc5e2c9b23e464b71.png&#34;
               width=&#34;760&#34;
               height=&#34;202&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;출력 수준이 2가 되면 이차입자가 생성된 분절점에서, 그 이차입자에 대한 정보를 추가적으로 출력해 줍니다.&lt;/p&gt;
&lt;p&gt;앞서 말한 바와 같이, Geant4는 한 번에 한 입자만 수송하므로, 생성된 이차입자는 이처럼 기록만 해두고, 원래 수송하던 입자를 마저 수송하게 됩니다.&lt;/p&gt;
&lt;h3 id=&#34;출력-수준-3-4-5&#34;&gt;출력 수준 3, 4, 5&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;3: Addition to Level=1, pre/postStepoint information after all AlongStep/PostStep process executions.&lt;/p&gt;
&lt;p&gt;4: Addition to Level=3, pre/postStepoint information at each AlongStepPostStep process execuation.&lt;/p&gt;
&lt;p&gt;5 : Addition to Level=4, proposed Step length information from each AlongStepPostStep process.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;수준 3일 때의 출력은 다음 그림과 같습니다.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;07_vb3&#34; srcset=&#34;
               /g4-noqasked-007-trkvb/07_vb3_huf54de9fc2d2acda1437a8e24e9c3594e_118645_38002bc4ef871200c08e712da95aaebb.png 400w,
               /g4-noqasked-007-trkvb/07_vb3_huf54de9fc2d2acda1437a8e24e9c3594e_118645_368d31128ba139585d75c8c8c8c143f6.png 760w,
               /g4-noqasked-007-trkvb/07_vb3_huf54de9fc2d2acda1437a8e24e9c3594e_118645_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://evandde.github.io/g4-noqasked-007-trkvb/07_vb3_huf54de9fc2d2acda1437a8e24e9c3594e_118645_38002bc4ef871200c08e712da95aaebb.png&#34;
               width=&#34;393&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;지금 보시는 이만큼이 &lt;strong&gt;분절점 한 개&lt;/strong&gt; 입니다. 입자 한 개 분량이 아닙니다. 엄청나게 길죠.&lt;/p&gt;
&lt;p&gt;여기부터는 Geant4에 어느정도 익숙해지시고 난 뒤에 공부하셔도 충분할 것이라 생각합니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;정리&#34;&gt;정리&lt;/h2&gt;
&lt;p&gt;Tracking Verbose는 Geant4 시뮬레이션 코드를 작성함에 있어 반드시 익숙해져야 하는 기능입니다. 현재 시뮬레이션이 계획한대로 진행되고 있는지 디버깅 목적으로 활용할 수 있는 아주 유용한 도구이기 때문입니다.&lt;/p&gt;
&lt;p&gt;자주 사용되는 수준은 다음과 같습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;0: 검토를 다 마치고 실제 시뮬레이션을 수행할 때 아무런 출력이 필요 없는 경우 설정&lt;/li&gt;
&lt;li&gt;1: 시뮬레이션 코드 작성 단계에서 검토용으로 활용. 경우에 따라 2단계를 사용하는 때도 있음&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;다음 글에서는 선원항을 정의해서 어떤 입자가 어떻게 수송되는지 직접 살펴보도록 하겠습니다.&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;시간의 흐름에 따라 작업, 성능, 컴퓨터/네트워크 사용 등 일련의 작업 흐름을 기록해 둔 것&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;</description>
    </item>
    
  </channel>
</rss>
