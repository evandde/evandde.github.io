[{"categories":null,"content":"에반데의 지식창고를 찾아주셔서 고맙습니다. 수학과 물리학과 프로그래밍과 게임을 좋아하는 원자력공학 전공자입니다. 지식을 계속 쌓다보니, 이제는 저의 용량을 넘어섰는지 자꾸 넘쳐버리네요. 한 번 헤맸던 길에서는 다시 헤매지 않고자 지식창고를 만들었습니다. 제가 정리해둔 지식의 조각이 이 곳을 찾아주신 분들의 길을 밝혀줄 등불이 되길 기원합니다. 😄 ","date":"2020-11-10","objectID":"/about/:0:0","tags":null,"title":"About","uri":"/about/"},{"categories":["Windows","Linux"],"content":"이 글에서는 WSL2를 설치한 뒤 X window(GUI)를 사용하기 위한 세팅 방법을 알아봅니다. Success\r\r여기서는 WSL2 설치가 완료된 상태라고 가정합니다. 이에 관한 전반적인 내용은 이 글을 참고하세요.\r\r WSL을 설치하더라도, GUI 기반의 프로그램을 실행하려면 X window에 관한 추가적인 설정이 필요합니다. 이 글에서는 WSL2에서 X window 사용을 위한 세팅 방법을 다룹니다. ","date":"2020-10-27","objectID":"/wsl2-x/:0:0","tags":["HowTo","Windows","WSL","WSL2","X server","X window","Xming"],"title":"WSL2에서 X window를 세팅하는 법","uri":"/wsl2-x/"},{"categories":["Windows","Linux"],"content":"TL;DR Xming 공식 홈페이지에서 Xming 다운로드 Xming 설치 (다음만 누르며 설치해도 괜찮음) Xming 단축아이콘을 만들고, 속성-대상 항목의 맨 끝에 한 칸을 띄고 -ac를 이어서 적음 Warning\r\r지우고 적는 것이 아니라, 맨 끝에 추가하는 것임에 주의하세요.\r\r Windows PowerShell을 관리자 권한으로 실행한 뒤, 다음 명령어 입력 Set-NetFirewallRule -DisplayName \"Xming X Server\" -Enabled True -Profile Any WSL2에서 다음 명령어 입력 echo 'export DISPLAY=$(cat /etc/resolv.conf | grep nameserver | awk '\"'\"'{print $2}'\"'\"'):0' \u003e\u003e ~/.bashrc ","date":"2020-10-27","objectID":"/wsl2-x/:1:0","tags":["HowTo","Windows","WSL","WSL2","X server","X window","Xming"],"title":"WSL2에서 X window를 세팅하는 법","uri":"/wsl2-x/"},{"categories":["Windows","Linux"],"content":"X window, X server란 X window는 UNIX 내지 Linux 계열의 운영체제에서 사용되는 GUI 환경 구현을 위한 시스템입니다. X11이라고도 부르고, 줄여서 그냥 X라고 부르기도 합니다. X window의 동작 원리는 간단하게 말하면 서버-클라이언트 구조입니다. “프로그램이 GUI 창을 띄워달라고 X server에 요청“하면, “X server가 요청을 처리하여 GUI 창을 띄우는 것“이죠. 일반적으로 Linux 운영체제 내에서 X server 프로그램이 구동되도록 설정된 환경에서는 내부적으로 알아서 화면을 띄울 수 있습니다. 하지만, PuTTY1나 WSL과 같이 Windows에서 터미널만 켜서 이용하는 경우에는, 프로그램의 X window 실행 요청을 Windows가 받아서 처리해야 하기 때문에, Windows용 X server 프로그램이 필요합니다. 대표적으로 Xming, VcXsrv, X410 등이 있습니다. 클라이언트가 보내는 X window 실행 요청은, Linux 상에서 DISPLAY라고 정의된 환경변수의 값으로 전송됩니다. 즉, X server를 사용하려면, X server 프로그램이 요청을 받을 수 있는 일종의 사서함 주소를 확보한 뒤, 이 값을 DISPLAY로 정의해주면 되는 것입니다. ","date":"2020-10-27","objectID":"/wsl2-x/:2:0","tags":["HowTo","Windows","WSL","WSL2","X server","X window","Xming"],"title":"WSL2에서 X window를 세팅하는 법","uri":"/wsl2-x/"},{"categories":["Windows","Linux"],"content":"Xming 설치 이 글에서는 Xming이라는 프로그램을 이용할 것입니다. Xming 공식 홈페이지에 들어가셔서 Xming 설치파일을 받아오시기 바랍니다. (버전이 높은 것은 Xming 측에 돈을 기부하고 계정을 받아야 사용가능하니, 그 밑에 있는 낮은 버전을 받으시면 됩니다.) 설치는 그냥 다음 버튼만 누르며 하셔도 됩니다만, 나중의 편의를 위해 단축아이콘 하나만 만들어두도록 합니다. 아래 그림에 보이는 내용이 떴을 때 Create a desktop icon for Xming에 체크해주시면 됩니다. Xming이 켜져 있는지의 여부는, 작업표시줄 오른쪽의 트레이아이콘을 확인하시면 알 수 있습니다. 트레이아이콘 중 X모양의 아이콘이 있다면 켜져있는 것입니다. 종료하고자 할 때에는, 트레이아이콘을 우클릭하고 Exit를 눌러주시면 됩니다. ","date":"2020-10-27","objectID":"/wsl2-x/:3:0","tags":["HowTo","Windows","WSL","WSL2","X server","X window","Xming"],"title":"WSL2에서 X window를 세팅하는 법","uri":"/wsl2-x/"},{"categories":["Windows","Linux"],"content":"WSL2와 X server 연동의 어려움 WSL2에서 X server를 연동하는 경우는 WSL1에서와 사뭇 다릅니다. WSL1이 Windows와 동일한 네트워크를 사용했던 것과 달리, WSL2는 Windows 10 내에서 별도의 WSL2 전용 네트워크를 사용하고 있기 때문입니다. 즉, WSL2와 Windows 10의 주소가 다르기 때문에, WSL2에서 자기자신(localhost)에 X 요청을 보내게 되면 Window로 그 요청이 도달하지 못하는 것이지요. 우리는 이 문제를 해결하기 위해 다음의 과정을 거쳐야 합니다. Windows에서 실행한 X server 프로그램(Xming)에서 외부 IP로부터 들어오는 요청을 허용하도록 설정 Windows 방화벽에서 WSL2의 요청을 허용하도록 설정 WSL2에서 Windows의 주소를 획득하고, 이를 DISPLAY 환경변수로 지정 ","date":"2020-10-27","objectID":"/wsl2-x/:4:0","tags":["HowTo","Windows","WSL","WSL2","X server","X window","Xming"],"title":"WSL2에서 X window를 세팅하는 법","uri":"/wsl2-x/"},{"categories":["Windows","Linux"],"content":"WSL2와 Xming 연동 ","date":"2020-10-27","objectID":"/wsl2-x/:5:0","tags":["HowTo","Windows","WSL","WSL2","X server","X window","Xming"],"title":"WSL2에서 X window를 세팅하는 법","uri":"/wsl2-x/"},{"categories":["Windows","Linux"],"content":"Xming에서 외부 IP로부터의 요청을 허용하도록 설정 Xming은 기본적으로 자기자신(localhost)으로부터 들어온 요청만을 받아들이고, 외부 IP로부터의 요청은 받지 않도록 설정되어 있습니다. 그래서 Xming에서 설정을 바꿔주지 않으면, 아무리 WSL2에서 요청을 보내도 Xming이 받지 않는 것이지요. 이 부분을 허용하도록 설정하기 위해서는 Xming을 켤때 -ac 옵션을 넣어주면 됩니다. -ac 옵션을 넣어 실행하기 위한 Xming 단축아이콘 생성 (설치 시 바탕화면에 생성하였다면 이것을 이용해도 괜찮음) 단축아이콘에서 우클릭 - 속성 바로 가기 탭 선택 대상 항목의 맨 끝에 한 칸을 띄어쓴 뒤 -ac를 이어서 적음 Warning\r\r지우고 적는 것이 아니라, 맨 끝에 추가하는 것임에 주의하세요.\r\r 확인 이제 이 단축아이콘으로 Xming을 실행하게 되면, Xming이 -ac 옵션이 적용된 채로 켜지게 됩니다. 혹시 현재 Xming이 켜져있다면 종료하시고, 방금 설정한 단축아이콘으로 다시 실행해주세요. ","date":"2020-10-27","objectID":"/wsl2-x/:5:1","tags":["HowTo","Windows","WSL","WSL2","X server","X window","Xming"],"title":"WSL2에서 X window를 세팅하는 법","uri":"/wsl2-x/"},{"categories":["Windows","Linux"],"content":"Windows 방화벽에서 Xming으로 들어가는 요청 허용 WSL2에서 보내는 요청이 Xming에 도달하기 전에 Windows 방화벽이 차단해버리는 경우를 막기 위해, 다음의 작업을 통해 방화벽에서 Xming X Server로 들어가는 요청을 허용하도록 설정하시기 바랍니다. [WIN]+[R]을 눌러 실행 창 띄우기 powershell을 입력한 뒤, [CTRL]+[SHIFT]+[ENTER]를 눌러서 PowerShell을 관리자 권한으로 실행 다음 명령어 입력 Set-NetFirewallRule -DisplayName \"Xming X Server\" -Enabled True -Profile Any ","date":"2020-10-27","objectID":"/wsl2-x/:5:2","tags":["HowTo","Windows","WSL","WSL2","X server","X window","Xming"],"title":"WSL2에서 X window를 세팅하는 법","uri":"/wsl2-x/"},{"categories":["Windows","Linux"],"content":"Windows의 IP 주소 획득 및 DISPLAY 환경변수로 지정 WSL2에서 Windows의 IP 주소를 보는 것은 다음 명령어를 통해 가능합니다. cat /etc/resolv.conf 값을 확인했다면 이걸 이용해서 DISPLAY 환경변수의 값을 설정해주면 됩니다. export DISPLAY=위에서_확인한_IP:0 이 작업 역시, 터미널을 종료하면 설정한 정보가 날아가버립니다. 때문에, Windows의 IP 값을 받아다가 DISPLAY 변수를 정의하는 작업을 한 문장으로 작성하여 ~/.bashrc에 적어두는 방식을 사용합니다. 이 작업을 위해서는 |2, grep3, awk4등 생소할 수도 있는 명령어가 사용됩니다만, 그대로 따라서 한 번만 실행시키시면 WSL2에서 작업할 내용은 끝나게 됩니다. echo 'export DISPLAY=$(cat /etc/resolv.conf | grep nameserver | awk '\"'\"'{print $2}'\"'\"'):0' \u003e\u003e ~/.bashrc ","date":"2020-10-27","objectID":"/wsl2-x/:5:3","tags":["HowTo","Windows","WSL","WSL2","X server","X window","Xming"],"title":"WSL2에서 X window를 세팅하는 법","uri":"/wsl2-x/"},{"categories":["Windows","Linux"],"content":"GUI 연동 확인을 위한 테스트 이 모든 작업이 끝났다면, 아마 정상적으로 GUI가 실행될 것입니다. GUI 창을 띄우는 프로그램을 사용하시는 게 있다면 그 프로그램으로 테스트 하시면 됩니다. 이 글에서는 xclock이라는 프로그램을 받아서 테스트하도록 하겠습니다. ## x11 어플리케이션 설치 sudo apt install x11-apps -y ## xclock 실행 xclock PuTTY는 무료 터미널 에뮬레이터로, 대개 서버용으로 활용되는 리눅스 운영체제 기반 컴퓨터에 원격접속하는 용도로 활용됩니다. ↩︎ |는 pipe라고 부르며, |의 앞에 있는 명령어의 실행 결과를 |의 뒤에 있는 명령어 실행의 입력인자로 활용하는 기호입니다. ↩︎ grep은 텍스트 검색에 관한 명령어입니다. ↩︎ awk는 텍스트 형태의 데이터를 행과 단어 별로 처리하여 출력하는 데에 사용되는 명령어입니다. ↩︎ ","date":"2020-10-27","objectID":"/wsl2-x/:6:0","tags":["HowTo","Windows","WSL","WSL2","X server","X window","Xming"],"title":"WSL2에서 X window를 세팅하는 법","uri":"/wsl2-x/"},{"categories":["Windows","Linux"],"content":"이 글에서는 WSL1을 설치한 뒤 X window(GUI)를 사용하기 위한 세팅 방법을 알아봅니다. Success\r\r여기서는 WSL1 설치가 완료된 상태라고 가정합니다. 이에 관한 전반적인 내용은 이 글을 참고하세요.\r\r WSL을 설치하더라도, GUI 기반의 프로그램을 실행하려면 X window에 관한 추가적인 설정이 필요합니다. 이 글에서는 WSL1에서 X window 사용을 위한 세팅 방법을 다룹니다. ","date":"2020-10-27","objectID":"/wsl1-x/:0:0","tags":["HowTo","Windows","WSL","WSL1","X server","X window","Xming"],"title":"WSL1에서 X window를 세팅하는 법","uri":"/wsl1-x/"},{"categories":["Windows","Linux"],"content":"TL;DR Xming 공식 홈페이지에서 Xming 다운로드 Xming 설치 (다음만 누르며 설치해도 괜찮음) WSL1에서 다음 명령어 입력 echo \"export DISPLAY=localhost:0\" \u003e\u003e ~/.bashrc ","date":"2020-10-27","objectID":"/wsl1-x/:1:0","tags":["HowTo","Windows","WSL","WSL1","X server","X window","Xming"],"title":"WSL1에서 X window를 세팅하는 법","uri":"/wsl1-x/"},{"categories":["Windows","Linux"],"content":"X window, X server란 X window는 UNIX 내지 Linux 계열의 운영체제에서 사용되는 GUI 환경 구현을 위한 시스템입니다. X11이라고도 부르고, 줄여서 그냥 X라고 부르기도 합니다. X window의 동작 원리는 간단하게 말하면 서버-클라이언트 구조입니다. “프로그램이 GUI 창을 띄워달라고 X server에 요청“하면, “X server가 요청을 처리하여 GUI 창을 띄우는 것“이죠. 일반적으로 Linux 운영체제 내에서 X server 프로그램이 구동되도록 설정된 환경에서는 내부적으로 알아서 화면을 띄울 수 있습니다. 하지만, PuTTY1나 WSL과 같이 Windows에서 터미널만 켜서 이용하는 경우에는, 프로그램의 X window 실행 요청을 Windows가 받아서 처리해야 하기 때문에, Windows용 X server 프로그램이 필요합니다. 대표적으로 Xming, VcXsrv, X410 등이 있습니다. 클라이언트가 보내는 X window 실행 요청은, Linux 상에서 DISPLAY라고 정의된 환경변수의 값으로 전송됩니다. 즉, X server를 사용하려면, X server 프로그램이 요청을 받을 수 있는 일종의 사서함 주소를 확보한 뒤, 이 값을 DISPLAY로 정의해주면 되는 것입니다. ","date":"2020-10-27","objectID":"/wsl1-x/:2:0","tags":["HowTo","Windows","WSL","WSL1","X server","X window","Xming"],"title":"WSL1에서 X window를 세팅하는 법","uri":"/wsl1-x/"},{"categories":["Windows","Linux"],"content":"Xming 설치 이 글에서는 Xming이라는 프로그램을 이용할 것입니다. Xming 공식 홈페이지에 들어가셔서 Xming 설치파일을 받아오시기 바랍니다. (버전이 높은 것은 Xming 측에 돈을 기부하고 계정을 받아야 사용가능하니, 그 밑에 있는 낮은 버전을 받으시면 됩니다.) 설치는 그냥 다음 버튼만 누르며 하셔도 됩니다만, 나중의 편의를 위해 단축아이콘 하나만 만들어두도록 합니다. 아래 그림에 보이는 내용이 떴을 때 Create a desktop icon for Xming에 체크해주시면 됩니다. Xming이 켜져 있는지의 여부는, 작업표시줄 오른쪽의 트레이아이콘을 확인하시면 알 수 있습니다. 트레이아이콘 중 X모양의 아이콘이 있다면 켜져있는 것입니다. 종료하고자 할 때에는, 트레이아이콘을 우클릭하고 Exit를 눌러주시면 됩니다. ","date":"2020-10-27","objectID":"/wsl1-x/:3:0","tags":["HowTo","Windows","WSL","WSL1","X server","X window","Xming"],"title":"WSL1에서 X window를 세팅하는 법","uri":"/wsl1-x/"},{"categories":["Windows","Linux"],"content":"WSL1과 Xming 연동 WSL1은 고민할 것이 별로 없습니다. WSL1은 Windows와 네트워크 상 주소가 동일하기 때문입니다. 클라이언트에서 X window 요청이 들어오면, 그대로 자기자신(localhost)에게 켜져 있는 Windows용 X server에 던져주면 끝입니다. 명령어 상으로는 다음과 같이 적어주면 됩니다. export DISPLAY=localhost:0 다만, 이렇게 정의한 환경변수는 터미널이 종료되는 순간 사라집니다. 일반적으로는 매번 터미널이 켜질 때마다 저 명령줄이 자동으로 실행되도록 하기 위해, ~/.bashrc 파일에 위의 내용을 적어두는 방식으로 활용합니다. echo \"export DISPLAY=localhost:0\" \u003e\u003e ~/.bashrc ","date":"2020-10-27","objectID":"/wsl1-x/:4:0","tags":["HowTo","Windows","WSL","WSL1","X server","X window","Xming"],"title":"WSL1에서 X window를 세팅하는 법","uri":"/wsl1-x/"},{"categories":["Windows","Linux"],"content":"GUI 연동 확인을 위한 테스트 이 모든 작업이 끝났다면, 아마 정상적으로 GUI가 실행될 것입니다. GUI 창을 띄우는 프로그램을 사용하시는 게 있다면 그 프로그램으로 테스트 하시면 됩니다. 이 글에서는 xclock이라는 프로그램을 받아서 테스트하도록 하겠습니다. ## x11 어플리케이션 설치 sudo apt install x11-apps -y ## xclock 실행 xclock PuTTY는 무료 터미널 에뮬레이터로, 대개 서버용으로 활용되는 리눅스 운영체제 기반 컴퓨터에 원격접속하는 용도로 활용됩니다. ↩︎ ","date":"2020-10-27","objectID":"/wsl1-x/:5:0","tags":["HowTo","Windows","WSL","WSL1","X server","X window","Xming"],"title":"WSL1에서 X window를 세팅하는 법","uri":"/wsl1-x/"},{"categories":["TensorFlow"],"content":"TensorFlow 설치 후 이용 시, cudart64_xxx.dll을 찾지 못하는 오류를 해결하는 방법에 대해 알아봅니다. ","date":"2020-10-22","objectID":"/cudart64-not-found/:0:0","tags":["BugFix","TensorFlow","tf","CUDA","cudart64","dll","not found"],"title":"cudart64_xxx.dll not found 에러 해결","uri":"/cudart64-not-found/"},{"categories":["TensorFlow"],"content":"TL;DR https://developer.nvidia.com/cuda-toolkit-archive에서 맞는 버전을 다운받아 설치합니다. 예: cudart64_101.dll -\u003e CUDA Toolkit 10.1 update 2 설치 ","date":"2020-10-22","objectID":"/cudart64-not-found/:1:0","tags":["BugFix","TensorFlow","tf","CUDA","cudart64","dll","not found"],"title":"cudart64_xxx.dll not found 에러 해결","uri":"/cudart64-not-found/"},{"categories":["TensorFlow"],"content":"버그 설명 TensorFlow 2를 설치한 뒤 이용하려 할 때, cudart64_xxx.dll을 찾지 못하는 에러가 발생하는 경우가 있습니다. ","date":"2020-10-22","objectID":"/cudart64-not-found/:2:0","tags":["BugFix","TensorFlow","tf","CUDA","cudart64","dll","not found"],"title":"cudart64_xxx.dll not found 에러 해결","uri":"/cudart64-not-found/"},{"categories":["TensorFlow"],"content":"왜 발생하는가? TensorFlow 2로 오면서, GPU 사용이 기본이 되었습니다. 이에 따라, 관련 하드웨어 및 소프트웨어 요구사항이 존재합니다. 자세한 사항은 tensorflow 설치가이드에서 확인할 수 있습니다. ","date":"2020-10-22","objectID":"/cudart64-not-found/:3:0","tags":["BugFix","TensorFlow","tf","CUDA","cudart64","dll","not found"],"title":"cudart64_xxx.dll not found 에러 해결","uri":"/cudart64-not-found/"},{"categories":["TensorFlow"],"content":"해결방법 NVIDIA 홈페이지의 CUDA Toolkit 다운로드 페이지에서 맞는 버전을 다운받아 설치합니다. 최신 버전을 요구하지 않는 경우가 있으므로, 이 곳에서 해당하는 버전을 찾아 설치하시면 됩니다. cudart64_xxx.dll에서 xxx 부분이 버전에 해당합니다. 예를 들어, 2020년 10월 기준 TensorFlow 2에서 요구하는 버전은 cudart64_101.dll로, 10.1 버전을 받으시면 됩니다. 아래 그림과 같이 뜨면 성공입니다. ","date":"2020-10-22","objectID":"/cudart64-not-found/:4:0","tags":["BugFix","TensorFlow","tf","CUDA","cudart64","dll","not found"],"title":"cudart64_xxx.dll not found 에러 해결","uri":"/cudart64-not-found/"},{"categories":["TensorFlow"],"content":"TensorFlow 설치 후 이용 시, nvcuda.dll을 찾지 못하는 오류를 해결하는 방법에 대해 알아봅니다. ","date":"2020-10-22","objectID":"/nvcuda-not-found/:0:0","tags":["BugFix","TensorFlow","tf","cuDNN","nvcuda","dll","not found"],"title":"nvcuda.dll not found 에러 해결","uri":"/nvcuda-not-found/"},{"categories":["TensorFlow"],"content":"TL;DR https://developer.nvidia.com/cudnn에서 CUDA 버전에 맞는 것을 다운받고, 압축을 풀어서 CUDA가 설치된 폴더에 넣습니다. 단, NVIDIA 회원가입, Developer 정보 입력, cuDNN 이용목적 등의 설문조사 참여가 필요합니다. ","date":"2020-10-22","objectID":"/nvcuda-not-found/:1:0","tags":["BugFix","TensorFlow","tf","cuDNN","nvcuda","dll","not found"],"title":"nvcuda.dll not found 에러 해결","uri":"/nvcuda-not-found/"},{"categories":["TensorFlow"],"content":"버그 설명 TensorFlow 2를 설치한 뒤 이용하려 할 때, nvcuda.dll을 찾지 못하는 에러가 발생하는 경우가 있습니다. ","date":"2020-10-22","objectID":"/nvcuda-not-found/:2:0","tags":["BugFix","TensorFlow","tf","cuDNN","nvcuda","dll","not found"],"title":"nvcuda.dll not found 에러 해결","uri":"/nvcuda-not-found/"},{"categories":["TensorFlow"],"content":"왜 발생하는가? TensorFlow 2로 오면서, GPU 사용이 기본이 되었습니다. 이에 따라, 관련 하드웨어 및 소프트웨어 요구사항이 존재합니다. 자세한 사항은 tensorflow 설치가이드에서 확인할 수 있습니다. ","date":"2020-10-22","objectID":"/nvcuda-not-found/:3:0","tags":["BugFix","TensorFlow","tf","cuDNN","nvcuda","dll","not found"],"title":"nvcuda.dll not found 에러 해결","uri":"/nvcuda-not-found/"},{"categories":["TensorFlow"],"content":"해결방법 NVIDIA 홈페이지의 cuDNN 다운로드 페이지에서 맞는 버전을 다운받아 설치합니다. 단, cuDNN은 NVIDIA에의 회원가입 및 개발자가입이 요구됩니다. 그리고 cuDNN을 어떤 목적으로 사용할 것인지에 대한 설문조사도 있습니다. 2020년 10월 기준 TensorFlow 2에서 요구하는 버전은 cuDNN SDK 7.6이고, CUDA 10.1 버전을 지원하므로, 이에 맞추어 받으시면 됩니다. 해당 링크에서 압축파일이 받아지는데, 이를 풀면 cuda 폴더가 나옵니다. 이 안의 내용물을, CUDA를 설치한 폴더 안에 그대로 붙여넣으시면 됩니다. (일반적으로는 C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\vXX.X) ","date":"2020-10-22","objectID":"/nvcuda-not-found/:4:0","tags":["BugFix","TensorFlow","tf","cuDNN","nvcuda","dll","not found"],"title":"nvcuda.dll not found 에러 해결","uri":"/nvcuda-not-found/"},{"categories":["Windows"],"content":"Windows를 설치하면, C:\\Users\\사용자이름 폴더에 다운로드, 사진, 문서, 동영상 등의 폴더가 있는 것을 확인할 수 있습니다. 이러한 폴더를 사용자 폴더 라고 합니다. 이 글에서는 사용자 폴더의 위치를 변경하는 방법에 대해 알아봅니다. 사용자 폴더는 대개 응용프로그램(MS Office, Visual Studio, …) 자체가 설치되는 공간이 아니라, 우리가 컴퓨터를 사용하는 과정에서 생성되는 여러가지 데이터(*.txt, *.docx, *.pptx, …)들이 저장되는 공간입니다. 그렇기 때문에, 컴퓨터를 사용하다보면 이러한 사용자 폴더가 차지하는 용량이 점점 늘어나게 됩니다. 사용형태에 따라, C드라이브에는 적은 용량을 할당하여 윈도우와 응용프로그램을 설치하고, D드라이브에 많은 용량을 할당하여 데이터를 저장하고 백업하는 용도로 파티션 관리를 하는 분들도 꽤 있으리라 생각합니다. 이런 분들이라면 더욱, 사용자 폴더를 D드라이브로 변경하는 편이 용량 측면 및 백업·관리 측면에서 유리할 것입니다. 이 글에서는 사용자 폴더를 임의의 경로로 옮기는 몇 가지 방법을 살펴볼 것입니다. ","date":"2020-10-13","objectID":"/userdir-change/:0:0","tags":["HowTo","Windows","User directory","사용자 폴더"],"title":"사용자 폴더의 위치를 변경하는 방법사용자 폴더의 위치를 변경하는 방법","uri":"/userdir-change/"},{"categories":["Windows"],"content":"TL;DR ","date":"2020-10-13","objectID":"/userdir-change/:1:0","tags":["HowTo","Windows","User directory","사용자 폴더"],"title":"사용자 폴더의 위치를 변경하는 방법사용자 폴더의 위치를 변경하는 방법","uri":"/userdir-change/"},{"categories":["Windows"],"content":"개별 폴더마다 경로 변경을 간단하게 수행하고자 하는 경우 Warning\r\r일부 폴더는 이 절차를 적용할 수 없거나, 적용되더라도 의도대로 동작하지 않을 수 있습니다. 자세한 사항은 아래의 개별 폴더 경로변경의 문제점을 참고하세요.\r\r 사용자 폴더가 있는 위치로 이동. [WIN]+[R]을 눌러 실행 창 띄우기. %UserProfile%을 입력하고 확인을 눌러 사용자 폴더 위치의 파일 탐색기 띄우기. 옮기고 싶은 사용자 폴더에서 우클릭 - 속성. 위치 탭으로 이동. 값을 원하는 경로로 변경. 확인. ","date":"2020-10-13","objectID":"/userdir-change/:1:1","tags":["HowTo","Windows","User directory","사용자 폴더"],"title":"사용자 폴더의 위치를 변경하는 방법사용자 폴더의 위치를 변경하는 방법","uri":"/userdir-change/"},{"categories":["Windows"],"content":"Windows 설치 과정 중에 설정하는 법 Danger\r\r실수하지 않도록 각 단계를 차근차근 진행하세요. 작업이 정상적으로 이루어지지 않은 경우, 로그인이 되지 않거나, 최악의 경우 Windows를 다시 설치해야 할 수도 있습니다.\r\r Windows 설치 과정 중, 국가 선택창이 뜨면 [CTRL]+[SHIFT]+[F3]을 눌러 audit mode로 진입. Windows 데스크탑 화면이 뜬 뒤, System Preperation Tool 대화상자가 나타나면 Cancle버튼을 눌러 끔. 디스크 관리를 실행하여 사용자 폴더를 위치시키고자 하는 드라이브 문자 확인. [WIN]+[R]을 눌러 실행 창 띄우기. diskmgmt.msc을 입력하고 확인을 눌러 디스크 관리 띄우기. 파일 시스템이나 용량 등 정보를 바탕으로, 사용자 폴더를 위치시킬 드라이브의 문자 확인. 아래 내용으로 unattended answer file 생성. (인터넷 연결이 가능하므로, 이 블로그에서 아래 내용을 복사-붙여넣기 가능) 메모장 실행. 다음 XML 내용 입력. (4번 줄과 6번 줄 내용을 본인에 맞게 수정) \u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e \u003cunattend xmlns=\"urn:schemas-microsoft-com:unattend\"\u003e \u003csettings pass=\"oobeSystem\"\u003e \u003ccomponent name=\"Microsoft-Windows-Shell-Setup\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\" xmlns:wcm=\"http://schemas.microsoft.com/WMIConfig/2002/State\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\u003e \u003cFolderLocations\u003e \u003cProfilesDirectory\u003eD:\\Users\u003c/ProfilesDirectory\u003e \u003c/FolderLocations\u003e \u003c/component\u003e \u003c/settings\u003e \u003c/unattend\u003e 4번 줄: processorArchitecture 변수의 값은 64 bit 윈도우를 설치할 경우에는 amd64로 (프로세서 종류가 Intel / AMD 중 어느 것인지는 관계 없음), 32 bit 윈도우를 설치할 경우에는 x86로 입력. 6번 줄: ProfilesDirectory 태그의 값은 사용할 사용자 폴더의 위치로 설정. 이 글에서는 D드라이브로 변경할 것을 상정하여, D:\\Users로 설정하였음. C드라이브를 제외한 아무 드라이브의 최상위 위치에 relocate.xml로 저장. 관리자 권한으로 cmd를 켜고 다음 명령어 두 줄 실행. (2번 줄의 /unattend 항목은 위에서 저장한 relocate.xml의 경로를 입력) net stop WMPNetworkSvc %windir%\\system32\\sysprep\\sysprep.exe /oobe /reboot /unattend:d:\\relocate.xml 재부팅되는 것을 기다린 뒤 Windows 설치를 마저 진행하면 완료. ","date":"2020-10-13","objectID":"/userdir-change/:1:2","tags":["HowTo","Windows","User directory","사용자 폴더"],"title":"사용자 폴더의 위치를 변경하는 방법사용자 폴더의 위치를 변경하는 방법","uri":"/userdir-change/"},{"categories":["Windows"],"content":"용어 설명 환경변수 UserName: 현재 로그인한 Windows 계정의 사용자명입니다. 환경변수 UserProfile: 현재 로그인한 Windows 계정의 사용자 폴더 경로입니다. 기본값은 C:\\Users\\%UserName% 입니다. ","date":"2020-10-13","objectID":"/userdir-change/:2:0","tags":["HowTo","Windows","User directory","사용자 폴더"],"title":"사용자 폴더의 위치를 변경하는 방법사용자 폴더의 위치를 변경하는 방법","uri":"/userdir-change/"},{"categories":["Windows"],"content":"개별 폴더 경로만 변경 사용자 폴더 경로로 들어가 봅시다. [WIN]+[R]을 눌러 실행 창을 열고, %UserProfile%라고 입력하면 됩니다. (기본적으로 C:\\Users\\%UserName% 입니다) 그러면 다음과 같은 탐색기 창이 뜰 것입니다. 여기서 보이는 3D 개체, 검색, 다운로드, 동영상, … 이런 폴더들은 사실 일종의 단축아이콘 같은 녀석들입니다. 예를 들어 3D 개체라는 아이콘은 사실 C:\\Users\\%UserName%\\3D Objects와 같은 경로로 연결해주는 바로가기의 역할을 하지요. 그러므로, 이 바로가기의 경로만 변경해주면 됩니다. ","date":"2020-10-13","objectID":"/userdir-change/:3:0","tags":["HowTo","Windows","User directory","사용자 폴더"],"title":"사용자 폴더의 위치를 변경하는 방법사용자 폴더의 위치를 변경하는 방법","uri":"/userdir-change/"},{"categories":["Windows"],"content":"변경 방법 옮기고 싶은 폴더의 바로가기에서 우클릭 - 속성. 위치 탭으로 이동. 값을 원하는 경로로 변경. 확인. Info\r\r이미 해당 폴더 안에 데이터가 들어있다면, 확인을 눌렀을 때 그 데이터들을 새로운 경로로 이동할지의 여부를 묻는 알림 창이 뜹니다. 원하는 방식에 따라 선택하시면 됩니다.\r\r ","date":"2020-10-13","objectID":"/userdir-change/:3:1","tags":["HowTo","Windows","User directory","사용자 폴더"],"title":"사용자 폴더의 위치를 변경하는 방법사용자 폴더의 위치를 변경하는 방법","uri":"/userdir-change/"},{"categories":["Windows"],"content":"문제점 이 방법은 3D 개체, 검색, 다운로드, 동영상, … 로 정의되어 있는 바로가기의 경로를 변경하는 방법입니다. 예를 들어 “문서” 라는 바로가기의 경로를 C:\\Users\\%UserName%\\Documents에서 D:\\Users\\%UserName%\\Documents로 변경하는 것이죠. 문제는, 우리가 이처럼 “문서\"라는 바로가기를 변경해도, %UserProfile%이라는 환경변수는 그대로 C:\\Users\\%UserName%값을 가지고 있다는 것입니다. 일부 프로그램은, “문서\"라는 폴더에 데이터를 저장하려고 접근할 때, “문서\"라는 바로가기를 활용하지 않고 %UserProfile%\\Documents라는 경로를 활용하는 경우가 있습니다. 이런 프로그램은, 우리가 “문서\"라는 바로가기를 D로 옮겨놓아도, 이를 무시하고 %UserProfile%\\Documents(C:\\Users\\%UserName%\\Documents) 폴더를 새로 만들어버린 뒤 그 안에 데이터를 저장합니다. 이러면 “문서” 폴더가 C드라이브와 D드라이브에 따로따로 생기고, 더욱 복잡해지는 결과를 초래하지요. 또 다른 문제도 있습니다. %UserProfile% 폴더 안에는, 우리가 위치를 바꿀수 없는 폴더들도 존재합니다. 대표적인 예가 AppData 폴더입니다(기본적으로 숨김처리 되어있는 폴더입니다). 어떤 프로그램들은 그 프로그램의 환경설정 내용 등을 AppData 폴더에 저장하는 경우가 있습니다. 그런데, 이 폴더는 위에서 설명한 방법으로는 위치를 변경할 수 없습니다. ","date":"2020-10-13","objectID":"/userdir-change/:3:2","tags":["HowTo","Windows","User directory","사용자 폴더"],"title":"사용자 폴더의 위치를 변경하는 방법사용자 폴더의 위치를 변경하는 방법","uri":"/userdir-change/"},{"categories":["Windows"],"content":"환경변수 UserProfile 변경하기 앞서의 문제를 해결하려면, %UserProfile% 환경변수 자체를 D드라이브로 바꾸면 됩니다…만, 이 작업은 쉬운 일이 아닙니다. Danger\r\r이 작업은 실수의 여지가 많고, 난이도가 높습니다. 작업이 정상적으로 이루어지지 않은 경우, 로그인이 되지 않거나, 최악의 경우 Windows를 다시 설치해야 할 수도 있습니다. \r\r ","date":"2020-10-13","objectID":"/userdir-change/:4:0","tags":["HowTo","Windows","User directory","사용자 폴더"],"title":"사용자 폴더의 위치를 변경하는 방법사용자 폴더의 위치를 변경하는 방법","uri":"/userdir-change/"},{"categories":["Windows"],"content":"Windows 재설치 없이 변경하는 법 이 방법은 저도 아직 성공해본 적이 없습니다. 10회 이상 계정을 삭제하고 다시 만들고 Windows를 재설치하고 하며 시도하였지만, 성공하지 못했습니다. (물론 제가 해당 방법에 대한 이해가 부족했기 때문일 수 있습니다) 이 작업을 통해 %UserProfile%을 변경하면 내부적으로 어딘가에서 꼬이는 것 같았습니다. 변경 후에 기존 계정으로 로그인하면, 로그인 하자마자 혹은 시작 버튼을 누르자마자 다음과 같은 에러가 발생하였습니다. 때문에, 참고하였던 관련 링크와 함께 간단한 부연설명만 하고 넘어가겠습니다. 사용자 폴더를 이동하는 방법에 관해 구글링을 해보면 꽤나 많은 정보가 나옵니다. 핵심적인 흐름을 요약하면 다음과 같습니다. 관리자 계정을 활성화 기존 계정을 로그아웃하고 관리자 계정으로 로그인 레지스트리 변경을 통해 %UserProfile% 환경변수를 변경 관리자 계정을 로그아웃하고 기존 계정으로 다시 로그인 관리자 계정을 비활성화 대표적으로 제가 참고하였던 링크입니다. Windows10에서 사용자 폴더의 이름을 변경하는 방법 (C:\\Users\\Username) Windows 7, 사용자 폴더 위치를 변경하는 방법 (이론상 Windows 10에서도 동일하게 적용 가능합니다) 내용 추가 새로운 방법을 찾게되어 내용을 추가합니다. 제가 시도해보지는 않았지만 뭔가 가능할 것 같은 느낌이 듭니다. 다음에 기회가 되면 시도해보도록 하겠습니다. 윈도우 10에서 C:\\사용자 (실제명 : C:\\Users) 폴더를 다른 드라이브(ssd, hdd)로 옮기는 방법 ","date":"2020-10-13","objectID":"/userdir-change/:4:1","tags":["HowTo","Windows","User directory","사용자 폴더"],"title":"사용자 폴더의 위치를 변경하는 방법사용자 폴더의 위치를 변경하는 방법","uri":"/userdir-change/"},{"categories":["Windows"],"content":"Windows 설치 시 초기 설정을 통해 변경하는 법 저는 결국 이 방법을 통해 사용자 폴더의 위치를 변경하였습니다. 이 방법을 요약하면 다음과 같습니다. Windows를 설치할 때 oobe1단계에서 audit 모드2에 진입. 사용자 폴더를 변경한다는 내용이 담긴 unattended answer file3을 생성. 2에서 생성한 unattended answer file을 참고하여 Windows를 설치. Windows 재설치 ISO 파일을 이용하여 제작한 부팅디스크도 좋고, Windows에서 기본적으로 제공하는 PC 초기화 기능을 이용해도 좋습니다. Audit 모드 진입 드라이브 초기화가 진행된 뒤, 재설치가 시작되면 다음 그림과 같은 국가/언어 선택창이 뜹니다. 여기서 [CTRL]+[SHIFT]+[F3]을 눌러 audit 모드로 진입합니다. Windows 부팅 후 Sysprep 창 종료 자동으로 PC가 재부팅된 뒤, audit 모드로 진입할 것입니다. 윈도우 데스크탑이 뜬 뒤 다음과 같은 System Preparation Tool 창이 뜰텐데, 지금은 Cancle 버튼을 눌러 종료해 줍니다. 디스크 관리에서 사용자 폴더를 둘 드라이브명 확인 일반적으로 D드라이브라고 생각하고 있을지라도, audit 모드에서는 드라이브명이 다르게 부여되어 있을 수 있습니다. 반드시 디스크 관리를 열어 용량 정보 등을 보고 사용자 폴더를 위치시킬 드라이브의 드라이브명이 무엇인지 확인하세요. [WIN]+[R]을 눌러 실행 창을 띄움. diskmgmt.msc를 입력하고 실행하여 디스크 관리 창 띄움. 용량 정보, 파일 시스템 등을 토대로, 사용자 폴더를 위치시킬 드라이브의 드라이브명(알파벳)이 무엇인지 확인. Unattended answer file 생성 이 시점에서는 인터넷 연결이 가능합니다. 실수를 줄이기 위해, 아래의 xml 코드를 직접 입력하지 마시고, 복사-붙여넣기한 뒤 필요한 부분만 수정하시길 권장합니다. 다음의 과정을 통해 unattended answer file을 생성합니다. 메모장 실행. 다음 XML 내용 입력. 단, 4번 줄과 6번 줄의 내용은 본인에 맞게 수정. \u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e \u003cunattend xmlns=\"urn:schemas-microsoft-com:unattend\"\u003e \u003csettings pass=\"oobeSystem\"\u003e \u003ccomponent name=\"Microsoft-Windows-Shell-Setup\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\" xmlns:wcm=\"http://schemas.microsoft.com/WMIConfig/2002/State\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\u003e \u003cFolderLocations\u003e \u003cProfilesDirectory\u003eD:\\Users\u003c/ProfilesDirectory\u003e \u003c/FolderLocations\u003e \u003c/component\u003e \u003c/settings\u003e \u003c/unattend\u003e 4번 줄: processorArchitecture 변수의 값은 64 bit 윈도우를 설치할 경우에는 amd64로 (프로세서 종류가 Intel / AMD 중 어느 것인지는 관계 없음), 32 bit 윈도우를 설치할 경우에는 x86로 입력. 6번 줄: ProfilesDirectory 태그의 값은 사용할 Users 폴더의 위치로 설정. 이 글에서는 D드라이브로 변경할 것을 상정하여, D:\\Users로 설정하였음. C드라이브를 제외한 아무 드라이브의 최상위 위치에 relocate.xml로 저장. 반드시, 저장 시 파일 형식을 모든 파일(All files)로 선택하여 txt 형태로 저장되지 않도록 주의. 생성한 unattended answer file을 이용하여 설치 진행 우선 관리자 권한으로 cmd를 켭니다. [WIN]+[R]을 눌러 실행 창을 띄움. cmd를 입력하고, [CTRL]+[SHIFT]+[ENTER]을 눌러 관리자 권한으로 실행. 이어서, cmd창에 다음 명령어 두 줄을 입력합니다. 단, 2번 줄의 /unattend 항목은 위에서 저장한 relocate.xml의 경로로 입력합니다. net stop WMPNetworkSvc %windir%\\system32\\sysprep\\sysprep.exe /oobe /reboot /unattend:d:\\relocate.xml 다음과 같은 창이 뜬 뒤, 자동으로 재부팅될 것입니다. 이어서 Windows 설치를 진행하시면 됩니다. 긴 과정을 따라오시느라 고생하셨습니다. 정상적으로 진행되었다면, 사용자 폴더들이 원하는 드라이브에 생성되어 있을 것입니다. ","date":"2020-10-13","objectID":"/userdir-change/:4:2","tags":["HowTo","Windows","User directory","사용자 폴더"],"title":"사용자 폴더의 위치를 변경하는 방법사용자 폴더의 위치를 변경하는 방법","uri":"/userdir-change/"},{"categories":["Windows"],"content":"Reference https://itrainbowm.tistory.com/29 https://wisebee.tistory.com/13 https://www.tenforums.com/tutorials/1964-move-users-folder-location-windows-10-a.html https://ks2colorworld.tistory.com/13 Out-of-Box Experience의 약자로, 새로 설치된 Windows 제품을 처음 사용할 때의 단계를 의미. ↩︎ Windows에 내장된 관리자 계정 모드로, 설치 시점에서 다양한 설정을 할 수 있게 해줌. ↩︎ Windows의 설치 과정에서 사용할 설정 값이나 변수 등을 기록한 xml형식의 파일. ↩︎ ","date":"2020-10-13","objectID":"/userdir-change/:5:0","tags":["HowTo","Windows","User directory","사용자 폴더"],"title":"사용자 폴더의 위치를 변경하는 방법사용자 폴더의 위치를 변경하는 방법","uri":"/userdir-change/"},{"categories":["Windows","Linux"],"content":"MS Store를 통해 WSL을 다운받아 설치하게 되면, WSL이 설치되는 경로는 %LocalAppData%\\Packages\\[PackageName] 폴더 하위로 고정됩니다. 이 글에서는 Windows Subsystem for Linux를 기본 설치경로가 아닌 다른 경로에 설치하는 방법에 대해 알아봅니다. Success\r\r여기서는 WSL 설치를 위한 Windows 기능 켜기 등의 설정이 완료된 상태라고 가정합니다. 이에 관한 전반적인 내용은 이 글을 참고하세요.\r\r ","date":"2020-10-08","objectID":"/wsl-otherloc/:0:0","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"WSL을 다른 경로에 설치하는 법","uri":"/wsl-otherloc/"},{"categories":["Windows","Linux"],"content":"TL;DR 이 페이지에서 원하는 배포판을 다운로드 다음 명령어로 파일확장자 변경 Rename-Item XXXX.appx XXXX.zip 다음 명령어로 압축 해제 Extract-Archive XXXX.zip 압축 해제 후 생성된 폴더에 들어가서 배포판 실행 ","date":"2020-10-08","objectID":"/wsl-otherloc/:1:0","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"WSL을 다른 경로에 설치하는 법","uri":"/wsl-otherloc/"},{"categories":["Windows","Linux"],"content":"배포판 다운로드 이 페이지를 방문하여, 설치하고자 하는 배포판을 다운받습니다. 원래 MS Store를 사용할 수 없을 때 이용하라고 만들어져 있는 페이지입니다만, 이 페이지를 이용하면 .appx 형식의 파일을 받을 수 있습니다. WSL을 설치하고자 하는 경로에, 다운받은 .appx파일을 옮겨둡니다. ","date":"2020-10-08","objectID":"/wsl-otherloc/:2:0","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"WSL을 다른 경로에 설치하는 법","uri":"/wsl-otherloc/"},{"categories":["Windows","Linux"],"content":"다운받은 Appx파일의 압축 해제 아래 그림과 같이 .appx 파일을 옮겨둔 폴더에서 파일-Windows PowerShell 열기(R)-Windows PowerShell 열기(R)를 통해 PowerShell을 실행합니다. (PowerShell을 실행하여 해당 경로로 들어오셔도 됩니다.) 이어서 Rename-Item 명령어를 통해 확장자를 zip파일로 바꾸고, Expand-Archive 명령어를 통해 압축을 풀 것입니다. 예를들어 Ubuntu 20.04 배포판을 받았다면, Ubuntu_2004.2020.424.0_x64.appx 파일이 다운받아질 것입니다(작성일 기준). 그렇다면 다음과 같이 명령어를 입력하면 됩니다. ## 받은 appx 파일을 Ubuntu2004.zip으로 이름 변경 Rename-Item Ubuntu_2004.2020.424.0_x64.appx Ubuntu2004.zip ## zip 파일의 압축을 해제 Extract-Archive Ubuntu2004.zip ","date":"2020-10-08","objectID":"/wsl-otherloc/:3:0","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"WSL을 다른 경로에 설치하는 법","uri":"/wsl-otherloc/"},{"categories":["Windows","Linux"],"content":"배포판 실행하여 설치 마무리 압축을 해제하면 압축파일과 동일한 폴더가 생성됩니다. 그 폴더 안에 배포판의 실행파일이 있을 것입니다. 최초 실행 시에는 이 파일로 실행하셔야 합니다. 그러면 MS Store에서 설치하는 경우와 동일하게 자동으로 설치과정이 마무리되고 계정생성과정이 진행될 것입니다. Info\r\r이렇게 최초 실행 후 설치가 마무리된 뒤에는 MS Store로 설치한 WSL과 동일한 방법으로 사용/관리 할 수 있습니다.\r\r ","date":"2020-10-08","objectID":"/wsl-otherloc/:4:0","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"WSL을 다른 경로에 설치하는 법","uri":"/wsl-otherloc/"},{"categories":["Windows","Linux"],"content":"Windows Subsystem for Linux, 약칭 WSL을 설치하고 이용하는 법을 알아봅니다. 이 글은 WSL1과 WSL2을 둘 다 다룹니다. Linux용 Windows 하위 시스템(Windows Subsystem for Linux, WSL)은 가상머신을 이용함에 따른 추가적인 메모리/CPU 소모나 듀얼부팅 설정 등을 요구하지 않으면서도, Windows 운영체제 하에서 Linux 기반의 대부분의 명령줄 도구, 유틸리티, 애플리케이션 등을 사용할 수 있게 해주는 서비스입니다. 간단하게 말하면, Windows에서 Linux의 bash shell을 켤 수 있고, Linux 전용의 프로그램을 자유롭게 실행할 수 있게 된다는 뜻입니다. 그것도 별도의 가상머신 프로그램 없이 말이죠. 이 글에서는 두 가지 WSL 버전인 WSL1과 WSL2의 차이를 살펴보고, 이를 설치하고 이용하는 방법에 대해 알아봅니다. ","date":"2020-09-28","objectID":"/wsl/:0:0","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"Linux용 Windows Subsystem(WSL1, WSL2)","uri":"/wsl/"},{"categories":["Windows","Linux"],"content":"TL;DR PowerShell을 관리자 권한으로 실행한 뒤, Linux용 Windows 하위시스템 옵션을 사용하기 위해 다음 명령어 입력 dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart (WSL1 설치 시에는 이 과정 스킵) PowerShell을 관리자 권한으로 실행한 뒤, Virtual Machine 플랫폼 옵션을 사용하기 위해 다음 명령어 입력 dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart 재부팅 (WSL1 설치 시에는 이 과정 스킵) 본인의 아키텍쳐에 맞추어 Linux 커널 업데이트 패키지를 다운로드 후 설치 x64용 다운로드 링크: https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi ARM64용 다운로드 링크: https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_arm64.msi (WSL1 설치 시에는 이 과정 스킵) 재부팅 (WSL1 설치 시에는 이 과정 스킵) PowerShell을 관리자 권한으로 실행한 뒤, WSL2를 기본 버전으로 설정하기 위해 다음 명령어 입력 wsl --set-default-version 2 Microsoft Store에서 WSL 검색 후, 원하는 Linux 배포 설치 ","date":"2020-09-28","objectID":"/wsl/:1:0","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"Linux용 Windows Subsystem(WSL1, WSL2)","uri":"/wsl/"},{"categories":["Windows","Linux"],"content":"WSL1 vs. WSL2 위의 비교 표에서 알 수 있듯, WSL2가 WSL1에 비해 대개 우수한 성능을 보입니다. 다만, OS 파일시스템 간 성능 측면에서는 WSL1이 우수합니다. ","date":"2020-09-28","objectID":"/wsl/:2:0","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"Linux용 Windows Subsystem(WSL1, WSL2)","uri":"/wsl/"},{"categories":["Windows","Linux"],"content":"OS 파일시스템 간 성능이란 WSL 파일시스템과 Windows 파일시스템의 위치는 서로 다릅니다. 성능을 고려할 때 WSL에서 접근하는 파일은 되도록 WSL 파일시스템의 하위경로에 두고 사용할 것을 권장합니다. (이런 곳에 저장하세요) Linux 파일 시스템: \\\\wsl$\\\u003cdistro\u003e\\home\\\u003cusername\u003e\\ (이런 곳 말구요) Windows 파일 시스템: C:\\Users\\\u003cusername\u003e\\ 다만, WSL에서도 Windows 파일시스템에 존재하는 파일에 접근할 수 있으며, 그 반대 또한 가능합니다. 이런 식의 접근이 불가피하고 잦은 경우에는, WSL1을 이용하는 것이 더 나을 수 있습니다. ","date":"2020-09-28","objectID":"/wsl/:2:1","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"Linux용 Windows Subsystem(WSL1, WSL2)","uri":"/wsl/"},{"categories":["Windows","Linux"],"content":"최소 요구사양 운영체제: Windows 10 혹은 Windows server 2019 아키텍쳐1: 64 bit 빌드 버전2 WSL1을 설치하는 경우: Build 16215 이상 WSL2를 설치하는 경우: Build 19041 이상 ","date":"2020-09-28","objectID":"/wsl/:3:0","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"Linux용 Windows Subsystem(WSL1, WSL2)","uri":"/wsl/"},{"categories":["Windows","Linux"],"content":"WSL1 설치하기 1. Linux용 Windows 하위 시스템 사용 PowerShell을 관리자 권한으로 실행하고, 다음 명령어를 입력합니다. dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart 2. 재부팅 3. 원하는 Linux 배포를 다운로드하여 설치 Microsoft Store에서 WSL을 검색하고, 원하는 배포판을 설치하면 됩니다. Info\r\rMS Store에서 설치 시, 설치되는 경로는 %LocalAppData%\\Packages\\[PackageName] 폴더 하위로 고정됩니다. 만약 별도로 원하는 경로에 설치하고자 하는 경우에는 이 글을 참고하세요.\r\r ","date":"2020-09-28","objectID":"/wsl/:4:0","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"Linux용 Windows Subsystem(WSL1, WSL2)","uri":"/wsl/"},{"categories":["Windows","Linux"],"content":"WSL2 설치하기 1. Linux용 Windows 하위 시스템 사용 PowerShell을 관리자 권한으로 실행하고, 다음 명령어를 입력합니다. dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart 2. Virtual Machine 플랫폼 사용 PowerShell을 관리자 권한으로 실행하고, 다음 명령어를 입력합니다. dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart 3. 재부팅 4. Linux 커널 업데이트 패키지 설치 이 페이지를 방문하여 본인 시스템의 아키텍쳐에 맞는 Linux 커널 업데이트 패키지를 다운받습니다. 해당 페이지에 있는 링크를 그대로 아래에 복사해두었으니 아래를 이용하셔도 됩니다. x64용 다운로드 링크: https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi ARM64용 다운로드 링크: https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_arm64.msi .msi 파일을 다운받으셨다면, 실행하여 설치를 진행합니다. 5. 재부팅 6. WSL2를 WSL의 기본버전으로 설정 PowerShell을 관리자 권한으로 열어 실행하고, 다음 명령어를 입력합니다. wsl --set-default-version 2 7. 원하는 Linux 배포를 다운로드하여 설치 Microsoft Store에서 WSL을 검색하고, 원하는 배포판을 설치하면 됩니다. Info\r\rMS Store에서 설치 시, 설치되는 경로는 %LocalAppData%\\Packages\\[PackageName] 폴더 하위로 고정됩니다. 만약 별도로 원하는 경로에 설치하고자 하는 경우에는 이 글을 참고하세요.\r\r ","date":"2020-09-28","objectID":"/wsl/:5:0","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"Linux용 Windows Subsystem(WSL1, WSL2)","uri":"/wsl/"},{"categories":["Windows","Linux"],"content":"설치한 배포판 실행 Microsoft Store를 통해 설치하면, 시작메뉴에 설치한 리눅스 배포판이 뜰 것입니다. 이를 처음 실행하면 추가적인 설치 마무리 작업을 수행한 뒤, 그 후 계정 생성 과정이 진행됩니다. 여기서 원하는 계정명과 비밀번호를 입력하여 계정생성을 하면 설치가 완료됩니다. 이후에는, 아까와 같이 시작메뉴에서 배포판을 실행하거나, cmd/powershell/실행윈도우([WIN]+[R])에서 wsl을 입력하여 실행할 수 있습니다. ","date":"2020-09-28","objectID":"/wsl/:6:0","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"Linux용 Windows Subsystem(WSL1, WSL2)","uri":"/wsl/"},{"categories":["Windows","Linux"],"content":"배포판의 관리 Info\r\r하나의 Windows 운영체제에 여러 개의 WSL을 설치할 수 있습니다. 또한, 각 WSL마다 버전을 달리하여, 어떤 것은 WSL1로, 어떤 것은 WSL2로 이용할 수도 있습니다.\r\r PowerShell에서 wsl 명령어 뒤에 다양한 옵션을 입력하여, 설치한 wsl 배포판에 대한 다양한 설정을 할 수 있습니다. 사용 가능한 명령어의 설명은 다음 명령어로 확인 가능합니다. wsl --help ","date":"2020-09-28","objectID":"/wsl/:7:0","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"Linux용 Windows Subsystem(WSL1, WSL2)","uri":"/wsl/"},{"categories":["Windows","Linux"],"content":"설치된 배포판 목록 확인 현재 설치된 배포판을 확인하려면 다음 명령어를 입력합니다. wsl -l 이 때, -v 옵션을 더 추가하면, 각 배포판의 현재 상태와 더불어 WSL1/WSL2 중 어떤 버전인지에 대한 정보까지 출력할 수 있습니다. wsl -l -v NAME 옆의 * 표시는 wsl 이라는 명령어만 입력하였을때 실행되는 기본 wsl 배포판이 무엇인지 알려주는 표시입니다. ","date":"2020-09-28","objectID":"/wsl/:7:1","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"Linux용 Windows Subsystem(WSL1, WSL2)","uri":"/wsl/"},{"categories":["Windows","Linux"],"content":"기본 실행 배포판 변경 앞서 wsl -l 명령어로 확인한 배포판의 이름(예: Ubuntu-20.04)을 확인한 뒤, -s \u003cDistro\u003e 옵션을 이용합니다. 예를 들어 기본 실행 배포판을 Ubuntu-20.04로 변경하는 경우에는 다음과 같이 입력합니다. wsl -s Ubuntu-20.04 ","date":"2020-09-28","objectID":"/wsl/:7:2","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"Linux용 Windows Subsystem(WSL1, WSL2)","uri":"/wsl/"},{"categories":["Windows","Linux"],"content":"설치된 배포판의 버전 변경(WSL1/WSL2) 앞서 wsl -l 명령어로 확인한 배포판의 이름(예: Ubuntu-20.04)을 확인한 뒤, --set-version \u003cDistro\u003e \u003c버전\u003e 옵션을 이용합니다. Note\r\rWSL1에서 WSL2로 올리는 것도 되고, 반대로 WSL2에서 WSL1로 내리는 것도 가능합니다.\r\r 예를 들어 Ubuntu-20.04 배포판을 WSL2로 변경하는 경우에는 다음과 같이 입력합니다. wsl --set-version Ubuntu-20.04 2 수 분 정도 소요될 수 있습니다. 기다리면 배포판의 버전이 자동으로 변경됩니다. ","date":"2020-09-28","objectID":"/wsl/:7:3","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"Linux용 Windows Subsystem(WSL1, WSL2)","uri":"/wsl/"},{"categories":["Windows","Linux"],"content":"설치된 배포판의 제거 앞서 wsl -l 명령어로 확인한 배포판의 이름(예: Ubuntu-20.04)을 확인한 뒤, --unregister \u003cDistro\u003e 옵션을 이용합니다. 예를 들어 Ubuntu-20.04 배포판을 제거하는 경우에는 다음과 같이 입력합니다. wsl --unregister Ubuntu-20.04 이 후에, MS store에서 설치한 내역을 찾아 uninstall까지 해주면 완전히 제거됩니다. ","date":"2020-09-28","objectID":"/wsl/:7:4","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"Linux용 Windows Subsystem(WSL1, WSL2)","uri":"/wsl/"},{"categories":["Windows","Linux"],"content":"WSL에서 Windows 파일시스템 접근 Windows의 디스크 드라이브는 WSL에서 /mnt/c, /mnt/d… 등으로 마운트되어 있습니다. 사용자가 별도로 마운트하지 않아도 바로 접근이 가능합니다. Failure\r\rUSB나 media drive 등 이동식 디스크에 대해서는 마운트 방법이 지원되지 않고 있습니다.\r\r ","date":"2020-09-28","objectID":"/wsl/:8:0","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"Linux용 Windows Subsystem(WSL1, WSL2)","uri":"/wsl/"},{"categories":["Windows","Linux"],"content":"Windows에서 WSL 파일시스템 접근 \\\\wsl$\\\u003cDistro\u003e\\ 경로를 갖는 네트워크 드라이브로 접근할 수 있습니다. 예를 들어 Ubuntu-20.04 배포판의 파일시스템은 \\\\wsl$\\Ubuntu-20.04\\로 접근할 수 있습니다. Note\r\r만약 탐색기에서 \\\\wsl$\\에 접근 시 하위 목록이 보이지 않는다면, 한 번도 해당 인스턴스가 기동되지 않았기 때문입니다. 경로 입력란에 \\\\wsl$\\\u003cDistro\u003e를 입력하여 한 번 들어가고 난 뒤부터는 표시가 될 것입니다.\r\r ","date":"2020-09-28","objectID":"/wsl/:9:0","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"Linux용 Windows Subsystem(WSL1, WSL2)","uri":"/wsl/"},{"categories":["Windows","Linux"],"content":"Reference https://docs.microsoft.com/en-us/windows/wsl/ https://cloudlinuxtech.com/install-linux-on-windows-10-wsl/#Prerequisite_to_install_WSL1_or_WSL2 [WIN]+[R]로 실행 창을 연 뒤, msinfo32를 입력하여 시스템 정보 창을 띄우고, 시스템 종류를 확인합니다. ↩︎ [WIN]+[R]로 실행 창을 연 뒤, msinfo32를 입력하여 시스템 정보 창을 띄우고, 버전을 확인합니다. ↩︎ ","date":"2020-09-28","objectID":"/wsl/:10:0","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"Linux용 Windows Subsystem(WSL1, WSL2)","uri":"/wsl/"},{"categories":["Windows"],"content":"PowerShell에서 git log나 git diff 출력 시 인코딩 문제로 인해 글자가 깨져 나오는 경우가 있습니다. 이 문제를 해결하는 방법을 알아봅니다. ","date":"2020-09-25","objectID":"/powershell-encoding/:0:0","tags":["BugFix","PowerShell","Git","한글","encoding"],"title":"PowerShell에서 git log, diff 출력 시 한글 깨지는 오류 해결","uri":"/powershell-encoding/"},{"categories":["Windows"],"content":"TL;DR Git 설정을 변경하거나, 혹은 PowerShell 설정을 변경하거나. 둘 중 하나만 해도 고쳐집니다. 방법 1. Git 설정을 변경 Git의 출력 설정을 변경합니다. 이 방법은 Git의 설정만을 변경하므로, Git에 한해서만 문제가 해결됩니다. PowerShell은 건드리지 않으므로, 동일한 문제가 다른 프로그램에서도 발생한다면 그 부분은 고쳐지지 않을 것입니다. git config --global core.pager 'less --raw-control-chars' 방법 2. PowerShell 설정을 변경 Powershell에서 환경변수를 설정합니다. 이는 해당 PowerShell창에 한해 일시적으로 문제를 해결합니다. $env:LC_ALL='C.UTF-8' Powershell을 켤 때 자동실행되는 스크립트에 환경변수를 설정하는 내용을 적습니다. 이는 새로운 PowerShell 창이 켜질때마다 해당 PowerShell 창에 환경변수를 설정하므로, 영구적으로 문제를 해결해줍니다. Set-ExecutionPolicy unrestricted if(!(Test-Path -path $profile)){ New-Item -Type File -Path $profile -Force } Add-Content -Path $profile -Value '$env:LC_ALL=''C.UTF-8''' ","date":"2020-09-25","objectID":"/powershell-encoding/:1:0","tags":["BugFix","PowerShell","Git","한글","encoding"],"title":"PowerShell에서 git log, diff 출력 시 한글 깨지는 오류 해결","uri":"/powershell-encoding/"},{"categories":["Windows"],"content":"버그 설명 PowerShell에서 git log를 출력해보니 다음과 같이 한글이 깨져서 출력되는 일을 겪었습니다. 이 글에서는 이런 문제를 해결하는 방법을 다룹니다. ","date":"2020-09-25","objectID":"/powershell-encoding/:2:0","tags":["BugFix","PowerShell","Git","한글","encoding"],"title":"PowerShell에서 git log, diff 출력 시 한글 깨지는 오류 해결","uri":"/powershell-encoding/"},{"categories":["Windows"],"content":"왜 발생하는가? Git과 PowerShell에서의 인코딩 형식이 호환되지 않아서 그렇습니다. ","date":"2020-09-25","objectID":"/powershell-encoding/:3:0","tags":["BugFix","PowerShell","Git","한글","encoding"],"title":"PowerShell에서 git log, diff 출력 시 한글 깨지는 오류 해결","uri":"/powershell-encoding/"},{"categories":["Windows"],"content":"해결방법 1. Git 설정을 변경 첫 번째 방법은 git의 출력형식을 변경해주는 것입니다. 이 방법은 git의 설정만 변경할 뿐, PowerShell은 전혀 건드리지 않는다는 장점이 있습니다. PowerShell에서 다음 명령어를 통해 git의 출력 설정을 변경합니다. git config --global core.pager 'less --raw-control-chars' 참고로 이 세팅을 해제하는 방법은 다음과 같습니다. git config --global --unset core.pager ","date":"2020-09-25","objectID":"/powershell-encoding/:4:0","tags":["BugFix","PowerShell","Git","한글","encoding"],"title":"PowerShell에서 git log, diff 출력 시 한글 깨지는 오류 해결","uri":"/powershell-encoding/"},{"categories":["Windows"],"content":"해결방법 2. PowerShell 설정을 변경 두 번째 방법은 PowerShell에서 인코딩하는 방식을 변경해주는 것입니다. 이 방법은 PowerShell 설정을 변경하는 것이므로, PowerShell에서 사용하는 다른 프로그램에 영향을 줄 수도 있습니다. ","date":"2020-09-25","objectID":"/powershell-encoding/:5:0","tags":["BugFix","PowerShell","Git","한글","encoding"],"title":"PowerShell에서 git log, diff 출력 시 한글 깨지는 오류 해결","uri":"/powershell-encoding/"},{"categories":["Windows"],"content":"해당 PowerShell 윈도우에서만 일시적으로 수정 Powershell에서 $env:LC_ALL이라는 환경변수의 값을 'C.UTF-8'로 설정해주면 됩니다. Warning\r\r이 방법은 그 PowerShell창에서만 유효합니다. 새로운 창에서는 문제가 다시 나타날 것입니다.\r\r 다음 명령어를 입력하여 환경변수를 설정합니다. $env:LC_ALL='C.UTF-8' ","date":"2020-09-25","objectID":"/powershell-encoding/:5:1","tags":["BugFix","PowerShell","Git","한글","encoding"],"title":"PowerShell에서 git log, diff 출력 시 한글 깨지는 오류 해결","uri":"/powershell-encoding/"},{"categories":["Windows"],"content":"PowerShell을 시작할 때마다 수정되도록 자동실행 스크립트 생성 PowerShell을 켤 때마다 자동으로 실행되는 스크립트를 만들고 그 스크립트에 $env:LC_ALL 환경변수를 설정하는 내용을 적으면, 매 번 환경변수를 따로 설정하지 않아도 자동으로 문제가 해결됩니다. 단, PowerShell에서 외부 스크립트를 실행하기 위해서는 실행 정책의 제한을 풀어줘야 합니다. 먼저, 다음 명령어를 통해 실행 정책 제한을 풀어줍니다. Set-ExecutionPolicy unrestricted PowerShell을 켤 때마다 자동으로 실행되는 스크립트의 경로는 $profile 변수에 저장되어 있습니다. 다음 명령줄을 통해, 만약 해당 경로에 스크립트가 없다면 새로 만들어줍니다. 그 뒤, 만들어진 스크립트 파일에 $env:LC_ALL='C.UTF-8' 내용을 추가합니다. 이를 통해, 앞으로는 PowerShell을 새로 시작할 때마다 이 스크립트가 실행되어 환경변수가 설정되도록 할 수 있습니다. if(!(Test-Path -path $profile)){ New-Item -Type File -Path $profile -Force } Add-Content -Path $profile -Value '$env:LC_ALL=''C.UTF-8''' ","date":"2020-09-25","objectID":"/powershell-encoding/:5:2","tags":["BugFix","PowerShell","Git","한글","encoding"],"title":"PowerShell에서 git log, diff 출력 시 한글 깨지는 오류 해결","uri":"/powershell-encoding/"},{"categories":["Windows"],"content":"Reference https://stackoverflow.com/questions/41139067/git-log-output-encoding-issues-on-windows-10-command-prompt ","date":"2020-09-25","objectID":"/powershell-encoding/:6:0","tags":["BugFix","PowerShell","Git","한글","encoding"],"title":"PowerShell에서 git log, diff 출력 시 한글 깨지는 오류 해결","uri":"/powershell-encoding/"},{"categories":["Windows"],"content":"이 글에서는 시작-실행 혹은 단축키 [WIN]+[R]을 통해 띄울 수 있는 실행 창에서 사용 가능한 다양한 명령어를 정리해 봅니다. ","date":"2020-09-24","objectID":"/windowrun/:0:0","tags":["HowTo","Windows","run","실행"],"title":"Windows 실행([WIN]+[R]) 명령어 정리","uri":"/windowrun/"},{"categories":["Windows"],"content":"사용법 ","date":"2020-09-24","objectID":"/windowrun/:1:0","tags":["HowTo","Windows","run","실행"],"title":"Windows 실행([WIN]+[R]) 명령어 정리","uri":"/windowrun/"},{"categories":["Windows"],"content":"기본적인 사용 실행 창을 띄웁니다. (시작-실행 혹은 단축키 [WIN]+[R]) 열기(O): 라고 표시된 상자 안에 명령어를 입력합니다. (대소문자는 상관 없습니다) 확인을 누릅니다. (혹은 [ENTER]를 누릅니다.) ","date":"2020-09-24","objectID":"/windowrun/:1:1","tags":["HowTo","Windows","run","실행"],"title":"Windows 실행([WIN]+[R]) 명령어 정리","uri":"/windowrun/"},{"categories":["Windows"],"content":"관리자 권한으로 실행 어떤 명령어든, 위의 사용법 설명에서 확인을 누르는 대신, [CTRL]+[SHIFT]+[ENTER]를 누르면, 해당 명령어가 관리자 권한으로 실행됩니다. 주로 cmd나 powershell 등을 관리자권한으로 실행하고 싶을 때 사용하면 좋습니다. ","date":"2020-09-24","objectID":"/windowrun/:1:2","tags":["HowTo","Windows","run","실행"],"title":"Windows 실행([WIN]+[R]) 명령어 정리","uri":"/windowrun/"},{"categories":["Windows"],"content":"응용프로그램 명령어 명령어  결과  calc 계산기 cmd 커맨드 창 mspaint 그림판 notepad 메모장 powershell 파워셸 ","date":"2020-09-24","objectID":"/windowrun/:2:0","tags":["HowTo","Windows","run","실행"],"title":"Windows 실행([WIN]+[R]) 명령어 정리","uri":"/windowrun/"},{"categories":["Windows"],"content":"환경변수로 정의된 폴더명 명령어 결과 %AppData% 현재 로그인한 사용자계정 폴더 내에 숨김처리된 AppData\\Roaming\\ 폴더 (일반적으로 C:\\Users\\\u003c계정명\u003e\\Appdata\\Roaming\\) %LocalAppData% 현재 로그인한 사용자계정 폴더 내에 숨김처리된 AppData\\Local\\ 폴더 (일반적으로 C:\\Users\\\u003c계정명\u003e\\Appdata\\Local\\) %ProgramData% ProgramData 폴더 (일반적으로 C:\\ProgramData\\) %ProgramFiles% Program Files 폴더 (일반적으로 C:\\Program Files\\) %ProgramFiles(x86)% Program Files (x86) 폴더. 64 bit 전용 (일반적으로 C:\\Program Files (x86)\\) %UserProfile% 현재 로그인한 사용자계정 폴더 (일반적으로 C:\\Users\\\u003c계정명\u003e\\) %WinDir% Windows 폴더 (일반적으로 C:\\Windows\\) shell:Startup 현재 사용자의 시작프로그램 폴더 shell:Common Startup 모든 사용자를 위한 시작프로그램 폴더 ","date":"2020-09-24","objectID":"/windowrun/:3:0","tags":["HowTo","Windows","run","실행"],"title":"Windows 실행([WIN]+[R]) 명령어 정리","uri":"/windowrun/"},{"categories":["Windows"],"content":"Windows 시스템 명령어 결과 appwiz.cpl 프로그램 제거 또는 변경 cleanmgr 디스크 정리 compmgmt.msc 컴퓨터 관리 control 제어판 desk.cpl 디스플레이 설정 devmgmt.msc 장치 관리자 diskmgmt.msc 디스크 관리 dxdiag Direct X 진단 도구 firewall.cpl 방화벽 mmsys.cpl 사운드 및 오디오 등록정보 mrt 악성 소프트웨어 제거 도구 mstsc 원격 데스크탑 연결 mstsc /v \u003cIP주소\u003e IP 주소를 명시하여 원격 데스크탑 연결 실행 ncpa.cpl 네트워크 연결 정보 optionalfeatures Windows 기능 켜기/끄기 perfmon.msc 성능 모니터 뷰 powercfg.cpl 전원 옵션 regedit 레지스트리 편집기 services.msc 서비스 sndvol 볼륨 Mixer sysdm.cpl 시스템 속성 taskmgr Windows 작업 관리자 taskschd.msc 작업 스케줄러 winver Windows 버전 정보 ","date":"2020-09-24","objectID":"/windowrun/:4:0","tags":["HowTo","Windows","run","실행"],"title":"Windows 실행([WIN]+[R]) 명령어 정리","uri":"/windowrun/"},{"categories":["Windows"],"content":"이 글에서는 Windows용 패키지 관리자인 Chocolatey(약칭: choco)를 설치하고 이용하는 방법에 대해 알아봅니다. Chocolatey는 Linux에서의 apt(apt-get), yum이나 macOS에서의 Homebrew처럼 패키지를 설치/업데이트/제거 등 관리하는 데에 사용하는 Windows용 프로그램입니다. Note\r\rChocolatey로 프로그램의 설치/제거 등을 하실 때에는 관리자 권한으로 작업하셔야 합니다. 관리자 권한 없이 이용하려면 설치경로의 변경 등의 작업이 요구됩니다. (참고: https://chocolatey.org/install#non-administrative-install) \r\r ","date":"2020-09-24","objectID":"/chocolatey/:0:0","tags":["HowTo","Windows","Chocolatey","choco"],"title":"Windows용 패키지 관리자 Chocolatey(choco) 설치 및 이용하기","uri":"/chocolatey/"},{"categories":["Windows"],"content":"Chocolatey 설치하기 ","date":"2020-09-24","objectID":"/chocolatey/:1:0","tags":["HowTo","Windows","Chocolatey","choco"],"title":"Windows용 패키지 관리자 Chocolatey(choco) 설치 및 이용하기","uri":"/chocolatey/"},{"categories":["Windows"],"content":"요구사항 Windows 7+/ Windows Server 2003+ Powershell v2+ (온라인 설치 시 v3+) .Net Framework 4+ (온라인 설치 시 4.5+) ","date":"2020-09-24","objectID":"/chocolatey/:1:1","tags":["HowTo","Windows","Chocolatey","choco"],"title":"Windows용 패키지 관리자 Chocolatey(choco) 설치 및 이용하기","uri":"/chocolatey/"},{"categories":["Windows"],"content":"cmd.exe로 설치하기 cmd.exe를 관리자 권한으로 실행합니다. 다음 명령줄을 실행합니다. @\"%SystemRoot%\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command \" [System.Net.ServicePointManager]::SecurityProtocol = 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\" \u0026\u0026 SET \"PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin\" ","date":"2020-09-24","objectID":"/chocolatey/:1:2","tags":["HowTo","Windows","Chocolatey","choco"],"title":"Windows용 패키지 관리자 Chocolatey(choco) 설치 및 이용하기","uri":"/chocolatey/"},{"categories":["Windows"],"content":"PowerShell.exe로 설치하기 PowerShell로 설치할 때에는 실행 정책(Execution Policy)상 제한이 걸리지 않도록 설정하는 과정이 추가적으로 필요할 수 있습니다. 실행 정책에 관해서는 간단하게 Bypass 옵션을 사용하셔도 되고, 좀 더 보안을 신경쓰신다면 AllSigned 옵션을 사용하셔도 됩니다. PowerShell.exe를 관리자 권한으로 실행합니다. Get-ExecutionPolicy 명령어로 실행 정책을 확인합니다. 만약 Restricted가 출력된다면, Set-ExecutionPolicy AllSigned 나, Set-ExecutionPolicy Bypass -Scope Process를 입력하여 제한을 풀어줍니다. 이제 다음의 명령줄을 실행합니다. [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1')) ","date":"2020-09-24","objectID":"/chocolatey/:1:3","tags":["HowTo","Windows","Chocolatey","choco"],"title":"Windows용 패키지 관리자 Chocolatey(choco) 설치 및 이용하기","uri":"/chocolatey/"},{"categories":["Windows"],"content":"그 외의 방법으로 설치하기 chocolatey 공식 홈페이지를 참고하세요. ","date":"2020-09-24","objectID":"/chocolatey/:1:4","tags":["HowTo","Windows","Chocolatey","choco"],"title":"Windows용 패키지 관리자 Chocolatey(choco) 설치 및 이용하기","uri":"/chocolatey/"},{"categories":["Windows"],"content":"Chocolatey 이용하기 ","date":"2020-09-24","objectID":"/chocolatey/:2:0","tags":["HowTo","Windows","Chocolatey","choco"],"title":"Windows용 패키지 관리자 Chocolatey(choco) 설치 및 이용하기","uri":"/chocolatey/"},{"categories":["Windows"],"content":"패키지 검색하기 choco로 설치 가능한 전체 패키지 목록은 https://chocolatey.org/packages에서 확인할 수 있습니다. 혹은, cmd나 PowerShell에서 choco search 명령어로 검색이 가능합니다. choco search 검색할내용 추가적으로 다음과 같은 옵션을 사용할 수도 있습니다. 검색할내용과 정확하게 일치하는 항목만 출력하기: -e (--exact) 패키지에 대한 자세한 정보 출력하기: --detailed 현재 컴퓨터에 설치된 패키지 목록 출력하기: -l (--local) (아래(설치한 패키지 목록 보기) 참고) ","date":"2020-09-24","objectID":"/chocolatey/:2:1","tags":["HowTo","Windows","Chocolatey","choco"],"title":"Windows용 패키지 관리자 Chocolatey(choco) 설치 및 이용하기","uri":"/chocolatey/"},{"categories":["Windows"],"content":"패키지 설치하기 choco install 명령어를 통해 패키지를 설치할 수 있습니다. choco install 패키지이름 추가적으로 다음과 같은 옵션을 사용할 수도 있습니다. 설치 시 확인여부를 묻는 내용을 띄우지 않고 무조건 수락하기: -y 특정 버전을 설치하기: --version 버전번호 (예: choco install python --version 3.8.5) ","date":"2020-09-24","objectID":"/chocolatey/:2:2","tags":["HowTo","Windows","Chocolatey","choco"],"title":"Windows용 패키지 관리자 Chocolatey(choco) 설치 및 이용하기","uri":"/chocolatey/"},{"categories":["Windows"],"content":"설치한 패키지 목록 보기 choco search 명령어 뒤에 -l옵션을 쓰면, 현재 이 컴퓨터에 설치된 목록을 출력해줍니다. choco search -l ","date":"2020-09-24","objectID":"/chocolatey/:2:3","tags":["HowTo","Windows","Chocolatey","choco"],"title":"Windows용 패키지 관리자 Chocolatey(choco) 설치 및 이용하기","uri":"/chocolatey/"},{"categories":["Windows"],"content":"패키지 삭제하기 choco uninstall 명령어를 통해 설치한 패키지를 삭제할 수 있습니다. choco uninstall 패키지이름 ","date":"2020-09-24","objectID":"/chocolatey/:2:4","tags":["HowTo","Windows","Chocolatey","choco"],"title":"Windows용 패키지 관리자 Chocolatey(choco) 설치 및 이용하기","uri":"/chocolatey/"},{"categories":["Windows"],"content":"패키지 업그레이드하기 choco upgrade 명령어를 통해 설치한 패키지를 업그레이드할 수 있습니다. choco upgrade 패키지이름 choco upgrade chocolatey 명령어를 입력하면, chocolatey도 최신화할 수 있습니다. choco upgrade all 명령어를 입력하면, 현재 컴퓨터에 설치된 모든 패키지(chocolatey 포함)를 최신화할 수 있습니다. ","date":"2020-09-24","objectID":"/chocolatey/:2:5","tags":["HowTo","Windows","Chocolatey","choco"],"title":"Windows용 패키지 관리자 Chocolatey(choco) 설치 및 이용하기","uri":"/chocolatey/"},{"categories":["Windows"],"content":"Reference https://chocolatey.org/ https://github.com/chocolatey/choco/wiki https://chocolatey.org/docs/commands-reference ","date":"2020-09-24","objectID":"/chocolatey/:3:0","tags":["HowTo","Windows","Chocolatey","choco"],"title":"Windows용 패키지 관리자 Chocolatey(choco) 설치 및 이용하기","uri":"/chocolatey/"}]