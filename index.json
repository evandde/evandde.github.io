[{"categories":null,"content":"에반데의 지식창고를 찾아주셔서 고맙습니다. 수학과 물리학과 프로그래밍과 게임을 좋아하는 원자력공학 전공자입니다. 지식을 계속 쌓다보니, 이제는 저의 용량을 넘어섰는지 자꾸 넘쳐버리네요. 한 번 헤맸던 길에서는 다시 헤매지 않고자 지식창고를 만들었습니다. 제가 정리해둔 지식의 조각이 이 곳을 찾아주신 분들의 길을 밝혀줄 등불이 되길 기원합니다. 😄 ","date":"2020-11-10","objectID":"/about/:0:0","tags":null,"title":"About","uri":"/about/"},{"categories":["Windows","Linux"],"content":"MS Store를 통해 WSL을 다운받아 설치하게 되면, WSL이 설치되는 경로는 %LocalAppData%\\Packages\\[PackageName] 폴더 하위로 고정됩니다. 이 글에서는 Windows Subsystem for Linux를 기본 설치경로가 아닌 다른 경로에 설치하는 방법에 대해 알아봅니다. Success\r\r여기서는 WSL 설치를 위한 Windows 기능 켜기 등의 설정이 완료된 상태라고 가정합니다. 이에 관한 전반적인 내용은 이 글을 참고하세요.\r\r ","date":"2020-10-08","objectID":"/wsl-otherloc/:0:0","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"WSL을 다른 경로에 설치하는 법","uri":"/wsl-otherloc/"},{"categories":["Windows","Linux"],"content":"TL;DR 이 페이지에서 원하는 배포판을 다운로드 다음 명령어로 파일확장자 변경 Rename-Item XXXX.appx XXXX.zip 다음 명령어로 압축 해제 Extract-Archive XXXX.zip 압축 해제 후 생성된 폴더에 들어가서 배포판 실행 ","date":"2020-10-08","objectID":"/wsl-otherloc/:1:0","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"WSL을 다른 경로에 설치하는 법","uri":"/wsl-otherloc/"},{"categories":["Windows","Linux"],"content":"배포판 다운로드 이 페이지를 방문하여, 설치하고자 하는 배포판을 다운받습니다. 원래 MS Store를 사용할 수 없을 때 이용하라고 만들어져 있는 페이지입니다만, 이 페이지를 이용하면 .appx 형식의 파일을 받을 수 있습니다. WSL을 설치하고자 하는 경로에, 다운받은 .appx파일을 옮겨둡니다. ","date":"2020-10-08","objectID":"/wsl-otherloc/:2:0","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"WSL을 다른 경로에 설치하는 법","uri":"/wsl-otherloc/"},{"categories":["Windows","Linux"],"content":"다운받은 Appx파일의 압축 해제 아래 그림과 같이 .appx 파일을 옮겨둔 폴더에서 파일-Windows PowerShell 열기(R)-Windows PowerShell 열기(R)를 통해 PowerShell을 실행합니다. (PowerShell을 실행하여 해당 경로로 들어오셔도 됩니다.) 이어서 Rename-Item 명령어를 통해 확장자를 zip파일로 바꾸고, Expand-Archive 명령어를 통해 압축을 풀 것입니다. 예를들어 Ubuntu 20.04 배포판을 받았다면, Ubuntu_2004.2020.424.0_x64.appx 파일이 다운받아질 것입니다(작성일 기준). 그렇다면 다음과 같이 명령어를 입력하면 됩니다. ## 받은 appx 파일을 Ubuntu2004.zip으로 이름 변경 Rename-Item Ubuntu_2004.2020.424.0_x64.appx Ubuntu2004.zip ## zip 파일의 압축을 해제 Extract-Archive Ubuntu2004.zip ","date":"2020-10-08","objectID":"/wsl-otherloc/:3:0","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"WSL을 다른 경로에 설치하는 법","uri":"/wsl-otherloc/"},{"categories":["Windows","Linux"],"content":"배포판 실행하여 설치 마무리 압축을 해제하면 압축파일과 동일한 폴더가 생성됩니다. 그 폴더 안에 배포판의 실행파일이 있을 것입니다. 최초 실행 시에는 이 파일로 실행하셔야 합니다. 그러면 MS Store에서 설치하는 경우와 동일하게 자동으로 설치과정이 마무리되고 계정생성과정이 진행될 것입니다. Info\r\r이렇게 최초 실행 후 설치가 마무리된 뒤에는 MS Store로 설치한 WSL과 동일한 방법으로 사용/관리 할 수 있습니다.\r\r ","date":"2020-10-08","objectID":"/wsl-otherloc/:4:0","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"WSL을 다른 경로에 설치하는 법","uri":"/wsl-otherloc/"},{"categories":["Windows","Linux"],"content":"Windows Subsystem for Linux, 약칭 WSL을 설치하고 이용하는 법을 알아봅니다. 이 글은 WSL1과 WSL2을 둘 다 다룹니다. Linux용 Windows 하위 시스템(Windows Subsystem for Linux, WSL)은 가상머신을 이용함에 따른 추가적인 메모리/CPU 소모나 듀얼부팅 설정 등을 요구하지 않으면서도, Windows 운영체제 하에서 Linux 기반의 대부분의 명령줄 도구, 유틸리티, 애플리케이션 등을 사용할 수 있게 해주는 서비스입니다. 간단하게 말하면, Windows에서 Linux의 bash shell을 켤 수 있고, Linux 전용의 프로그램을 자유롭게 실행할 수 있게 된다는 뜻입니다. 그것도 별도의 가상머신 프로그램 없이 말이죠. 이 글에서는 두 가지 WSL 버전인 WSL1과 WSL2의 차이를 살펴보고, 이를 설치하고 이용하는 방법에 대해 알아봅니다. ","date":"2020-09-28","objectID":"/wsl/:0:0","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"Linux용 Windows Subsystem(WSL1, WSL2)","uri":"/wsl/"},{"categories":["Windows","Linux"],"content":"TL;DR PowerShell을 관리자 권한으로 실행한 뒤, Linux용 Windows 하위시스템 옵션을 사용하기 위해 다음 명령어 입력 dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart (WSL1 설치 시에는 이 과정 스킵) PowerShell을 관리자 권한으로 실행한 뒤, Virtual Machine 플랫폼 옵션을 사용하기 위해 다음 명령어 입력 dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart 재부팅 (WSL1 설치 시에는 이 과정 스킵) 본인의 아키텍쳐에 맞추어 Linux 커널 업데이트 패키지를 다운로드 후 설치 x64용 다운로드 링크: https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi ARM64용 다운로드 링크: https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_arm64.msi (WSL1 설치 시에는 이 과정 스킵) 재부팅 (WSL1 설치 시에는 이 과정 스킵) PowerShell을 관리자 권한으로 실행한 뒤, WSL2를 기본 버전으로 설정하기 위해 다음 명령어 입력 wsl --set-default-version 2 Microsoft Store에서 WSL 검색 후, 원하는 Linux 배포 설치 ","date":"2020-09-28","objectID":"/wsl/:1:0","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"Linux용 Windows Subsystem(WSL1, WSL2)","uri":"/wsl/"},{"categories":["Windows","Linux"],"content":"WSL1 vs. WSL2 위의 비교 표에서 알 수 있듯, WSL2가 WSL1에 비해 대개 우수한 성능을 보입니다. 다만, OS 파일시스템 간 성능 측면에서는 WSL1이 우수합니다. ","date":"2020-09-28","objectID":"/wsl/:2:0","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"Linux용 Windows Subsystem(WSL1, WSL2)","uri":"/wsl/"},{"categories":["Windows","Linux"],"content":"OS 파일시스템 간 성능이란 WSL 파일시스템과 Windows 파일시스템의 위치는 서로 다릅니다. 성능을 고려할 때 WSL에서 접근하는 파일은 되도록 WSL 파일시스템의 하위경로에 두고 사용할 것을 권장합니다. (이런 곳에 저장하세요) Linux 파일 시스템: \\\\wsl$\\\u003cdistro\u003e\\home\\\u003cusername\u003e\\ (이런 곳 말구요) Windows 파일 시스템: C:\\Users\\\u003cusername\u003e\\ 다만, WSL에서도 Windows 파일시스템에 존재하는 파일에 접근할 수 있으며, 그 반대 또한 가능합니다. 이런 식의 접근이 불가피하고 잦은 경우에는, WSL1을 이용하는 것이 더 나을 수 있습니다. ","date":"2020-09-28","objectID":"/wsl/:2:1","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"Linux용 Windows Subsystem(WSL1, WSL2)","uri":"/wsl/"},{"categories":["Windows","Linux"],"content":"최소 요구사양 운영체제: Windows 10 혹은 Windows server 2019 아키텍쳐1: 64 bit 빌드 버전2 WSL1을 설치하는 경우: Build 16215 이상 WSL2를 설치하는 경우: Build 19041 이상 ","date":"2020-09-28","objectID":"/wsl/:3:0","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"Linux용 Windows Subsystem(WSL1, WSL2)","uri":"/wsl/"},{"categories":["Windows","Linux"],"content":"WSL1 설치하기 1. Linux용 Windows 하위 시스템 사용 PowerShell을 관리자 권한으로 실행하고, 다음 명령어를 입력합니다. dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart 2. 재부팅 3. 원하는 Linux 배포를 다운로드하여 설치 Microsoft Store에서 WSL을 검색하고, 원하는 배포판을 설치하면 됩니다. Info\r\rMS Store에서 설치 시, 설치되는 경로는 %LocalAppData%\\Packages\\[PackageName] 폴더 하위로 고정됩니다. 만약 별도로 원하는 경로에 설치하고자 하는 경우에는 이 글을 참고하세요.\r\r ","date":"2020-09-28","objectID":"/wsl/:4:0","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"Linux용 Windows Subsystem(WSL1, WSL2)","uri":"/wsl/"},{"categories":["Windows","Linux"],"content":"WSL2 설치하기 1. Linux용 Windows 하위 시스템 사용 PowerShell을 관리자 권한으로 실행하고, 다음 명령어를 입력합니다. dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart 2. Virtual Machine 플랫폼 사용 PowerShell을 관리자 권한으로 실행하고, 다음 명령어를 입력합니다. dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart 3. 재부팅 4. Linux 커널 업데이트 패키지 설치 이 페이지를 방문하여 본인 시스템의 아키텍쳐에 맞는 Linux 커널 업데이트 패키지를 다운받습니다. 해당 페이지에 있는 링크를 그대로 아래에 복사해두었으니 아래를 이용하셔도 됩니다. x64용 다운로드 링크: https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi ARM64용 다운로드 링크: https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_arm64.msi .msi 파일을 다운받으셨다면, 실행하여 설치를 진행합니다. 5. 재부팅 6. WSL2를 WSL의 기본버전으로 설정 PowerShell을 관리자 권한으로 열어 실행하고, 다음 명령어를 입력합니다. wsl --set-default-version 2 7. 원하는 Linux 배포를 다운로드하여 설치 Microsoft Store에서 WSL을 검색하고, 원하는 배포판을 설치하면 됩니다. Info\r\rMS Store에서 설치 시, 설치되는 경로는 %LocalAppData%\\Packages\\[PackageName] 폴더 하위로 고정됩니다. 만약 별도로 원하는 경로에 설치하고자 하는 경우에는 이 글을 참고하세요.\r\r ","date":"2020-09-28","objectID":"/wsl/:5:0","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"Linux용 Windows Subsystem(WSL1, WSL2)","uri":"/wsl/"},{"categories":["Windows","Linux"],"content":"설치한 배포판 실행 Microsoft Store를 통해 설치하면, 시작메뉴에 설치한 리눅스 배포판이 뜰 것입니다. 이를 처음 실행하면 추가적인 설치 마무리 작업을 수행한 뒤, 그 후 계정 생성 과정이 진행됩니다. 여기서 원하는 계정명과 비밀번호를 입력하여 계정생성을 하면 설치가 완료됩니다. 이후에는, 아까와 같이 시작메뉴에서 배포판을 실행하거나, cmd/powershell/실행윈도우([WIN]+[R])에서 wsl을 입력하여 실행할 수 있습니다. ","date":"2020-09-28","objectID":"/wsl/:6:0","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"Linux용 Windows Subsystem(WSL1, WSL2)","uri":"/wsl/"},{"categories":["Windows","Linux"],"content":"배포판의 관리 Info\r\r하나의 Windows 운영체제에 여러 개의 WSL을 설치할 수 있습니다. 또한, 각 WSL마다 버전을 달리하여, 어떤 것은 WSL1로, 어떤 것은 WSL2로 이용할 수도 있습니다.\r\r PowerShell에서 wsl 명령어 뒤에 다양한 옵션을 입력하여, 설치한 wsl 배포판에 대한 다양한 설정을 할 수 있습니다. 사용 가능한 명령어의 설명은 다음 명령어로 확인 가능합니다. wsl --help ","date":"2020-09-28","objectID":"/wsl/:7:0","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"Linux용 Windows Subsystem(WSL1, WSL2)","uri":"/wsl/"},{"categories":["Windows","Linux"],"content":"설치된 배포판 목록 확인 현재 설치된 배포판을 확인하려면 다음 명령어를 입력합니다. wsl -l 이 때, -v 옵션을 더 추가하면, 각 배포판의 현재 상태와 더불어 WSL1/WSL2 중 어떤 버전인지에 대한 정보까지 출력할 수 있습니다. wsl -l -v NAME 옆의 * 표시는 wsl 이라는 명령어만 입력하였을때 실행되는 기본 wsl 배포판이 무엇인지 알려주는 표시입니다. ","date":"2020-09-28","objectID":"/wsl/:7:1","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"Linux용 Windows Subsystem(WSL1, WSL2)","uri":"/wsl/"},{"categories":["Windows","Linux"],"content":"기본 실행 배포판 변경 앞서 wsl -l 명령어로 확인한 배포판의 이름(예: Ubuntu-20.04)을 확인한 뒤, -s \u003cDistro\u003e 옵션을 이용합니다. 예를 들어 기본 실행 배포판을 Ubuntu-20.04로 변경하는 경우에는 다음과 같이 입력합니다. wsl -s Ubuntu-20.04 ","date":"2020-09-28","objectID":"/wsl/:7:2","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"Linux용 Windows Subsystem(WSL1, WSL2)","uri":"/wsl/"},{"categories":["Windows","Linux"],"content":"설치된 배포판의 버전 변경(WSL1/WSL2) 앞서 wsl -l 명령어로 확인한 배포판의 이름(예: Ubuntu-20.04)을 확인한 뒤, --set-version \u003cDistro\u003e \u003c버전\u003e 옵션을 이용합니다. Note\r\rWSL1에서 WSL2로 올리는 것도 되고, 반대로 WSL2에서 WSL1로 내리는 것도 가능합니다.\r\r 예를 들어 Ubuntu-20.04 배포판을 WSL2로 변경하는 경우에는 다음과 같이 입력합니다. wsl --set-version Ubuntu-20.04 2 수 분 정도 소요될 수 있습니다. 기다리면 배포판의 버전이 자동으로 변경됩니다. ","date":"2020-09-28","objectID":"/wsl/:7:3","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"Linux용 Windows Subsystem(WSL1, WSL2)","uri":"/wsl/"},{"categories":["Windows","Linux"],"content":"설치된 배포판의 제거 앞서 wsl -l 명령어로 확인한 배포판의 이름(예: Ubuntu-20.04)을 확인한 뒤, --unregister \u003cDistro\u003e 옵션을 이용합니다. 예를 들어 Ubuntu-20.04 배포판을 제거하는 경우에는 다음과 같이 입력합니다. wsl --unregister Ubuntu-20.04 이 후에, MS store에서 설치한 내역을 찾아 uninstall까지 해주면 완전히 제거됩니다. ","date":"2020-09-28","objectID":"/wsl/:7:4","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"Linux용 Windows Subsystem(WSL1, WSL2)","uri":"/wsl/"},{"categories":["Windows","Linux"],"content":"WSL에서 Windows 파일시스템 접근 Windows의 디스크 드라이브는 WSL에서 /mnt/c, /mnt/d… 등으로 마운트되어 있습니다. 사용자가 별도로 마운트하지 않아도 바로 접근이 가능합니다. Failure\r\rUSB나 media drive 등 이동식 디스크에 대해서는 마운트 방법이 지원되지 않고 있습니다.\r\r ","date":"2020-09-28","objectID":"/wsl/:8:0","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"Linux용 Windows Subsystem(WSL1, WSL2)","uri":"/wsl/"},{"categories":["Windows","Linux"],"content":"Windows에서 WSL 파일시스템 접근 \\\\wsl$\\\u003cDistro\u003e\\ 경로를 갖는 네트워크 드라이브로 접근할 수 있습니다. 예를 들어 Ubuntu-20.04 배포판의 파일시스템은 \\\\wsl$\\Ubuntu-20.04\\로 접근할 수 있습니다. Note\r\r만약 탐색기에서 \\\\wsl$\\에 접근 시 하위 목록이 보이지 않는다면, 한 번도 해당 인스턴스가 기동되지 않았기 때문입니다. 경로 입력란에 \\\\wsl$\\\u003cDistro\u003e를 입력하여 한 번 들어가고 난 뒤부터는 표시가 될 것입니다.\r\r ","date":"2020-09-28","objectID":"/wsl/:9:0","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"Linux용 Windows Subsystem(WSL1, WSL2)","uri":"/wsl/"},{"categories":["Windows","Linux"],"content":"Reference https://docs.microsoft.com/en-us/windows/wsl/ https://cloudlinuxtech.com/install-linux-on-windows-10-wsl/#Prerequisite_to_install_WSL1_or_WSL2 [WIN]+[R]로 실행 창을 연 뒤, msinfo32를 입력하여 시스템 정보 창을 띄우고, 시스템 종류를 확인합니다. ↩︎ [WIN]+[R]로 실행 창을 연 뒤, msinfo32를 입력하여 시스템 정보 창을 띄우고, 버전을 확인합니다. ↩︎ ","date":"2020-09-28","objectID":"/wsl/:10:0","tags":["HowTo","Windows","WSL","Linux","Install"],"title":"Linux용 Windows Subsystem(WSL1, WSL2)","uri":"/wsl/"},{"categories":["Windows"],"content":"PowerShell에서 git log나 git diff 출력 시 인코딩 문제로 인해 글자가 깨져 나오는 경우가 있습니다. 이 문제를 해결하는 방법을 알아봅니다. ","date":"2020-09-25","objectID":"/powershell-encoding/:0:0","tags":["BugFix","PowerShell","Git","한글","encoding"],"title":"PowerShell에서 git log, diff 출력 시 한글 깨지는 오류 해결","uri":"/powershell-encoding/"},{"categories":["Windows"],"content":"TL;DR Git 설정을 변경하거나, 혹은 PowerShell 설정을 변경하거나. 둘 중 하나만 해도 고쳐집니다. 방법 1. Git 설정을 변경 Git의 출력 설정을 변경합니다. 이 방법은 Git의 설정만을 변경하므로, Git에 한해서만 문제가 해결됩니다. PowerShell은 건드리지 않으므로, 동일한 문제가 다른 프로그램에서도 발생한다면 그 부분은 고쳐지지 않을 것입니다. git config --global core.pager 'less --raw-control-chars' 방법 2. PowerShell 설정을 변경 Powershell에서 환경변수를 설정합니다. 이는 해당 PowerShell창에 한해 일시적으로 문제를 해결합니다. $env:LC_ALL='C.UTF-8' Powershell을 켤 때 자동실행되는 스크립트에 환경변수를 설정하는 내용을 적습니다. 이는 새로운 PowerShell 창이 켜질때마다 해당 PowerShell 창에 환경변수를 설정하므로, 영구적으로 문제를 해결해줍니다. Set-ExecutionPolicy unrestricted if(!(Test-Path -path $profile)){ New-Item -Type File -Path $profile -Force } Add-Content -Path $profile -Value '$env:LC_ALL=''C.UTF-8''' ","date":"2020-09-25","objectID":"/powershell-encoding/:1:0","tags":["BugFix","PowerShell","Git","한글","encoding"],"title":"PowerShell에서 git log, diff 출력 시 한글 깨지는 오류 해결","uri":"/powershell-encoding/"},{"categories":["Windows"],"content":"버그 설명 PowerShell에서 git log를 출력해보니 다음과 같이 한글이 깨져서 출력되는 일을 겪었습니다. 이 글에서는 이런 문제를 해결하는 방법을 다룹니다. ","date":"2020-09-25","objectID":"/powershell-encoding/:2:0","tags":["BugFix","PowerShell","Git","한글","encoding"],"title":"PowerShell에서 git log, diff 출력 시 한글 깨지는 오류 해결","uri":"/powershell-encoding/"},{"categories":["Windows"],"content":"왜 발생하는가? Git과 PowerShell에서의 인코딩 형식이 호환되지 않아서 그렇습니다. ","date":"2020-09-25","objectID":"/powershell-encoding/:3:0","tags":["BugFix","PowerShell","Git","한글","encoding"],"title":"PowerShell에서 git log, diff 출력 시 한글 깨지는 오류 해결","uri":"/powershell-encoding/"},{"categories":["Windows"],"content":"해결방법 1. Git 설정을 변경 첫 번째 방법은 git의 출력형식을 변경해주는 것입니다. 이 방법은 git의 설정만 변경할 뿐, PowerShell은 전혀 건드리지 않는다는 장점이 있습니다. PowerShell에서 다음 명령어를 통해 git의 출력 설정을 변경합니다. git config --global core.pager 'less --raw-control-chars' 참고로 이 세팅을 해제하는 방법은 다음과 같습니다. git config --global --unset core.pager ","date":"2020-09-25","objectID":"/powershell-encoding/:4:0","tags":["BugFix","PowerShell","Git","한글","encoding"],"title":"PowerShell에서 git log, diff 출력 시 한글 깨지는 오류 해결","uri":"/powershell-encoding/"},{"categories":["Windows"],"content":"해결방법 2. PowerShell 설정을 변경 두 번째 방법은 PowerShell에서 인코딩하는 방식을 변경해주는 것입니다. 이 방법은 PowerShell 설정을 변경하는 것이므로, PowerShell에서 사용하는 다른 프로그램에 영향을 줄 수도 있습니다. ","date":"2020-09-25","objectID":"/powershell-encoding/:5:0","tags":["BugFix","PowerShell","Git","한글","encoding"],"title":"PowerShell에서 git log, diff 출력 시 한글 깨지는 오류 해결","uri":"/powershell-encoding/"},{"categories":["Windows"],"content":"해당 PowerShell 윈도우에서만 일시적으로 수정 Powershell에서 $env:LC_ALL이라는 환경변수의 값을 'C.UTF-8'로 설정해주면 됩니다. Warning\r\r이 방법은 그 PowerShell창에서만 유효합니다. 새로운 창에서는 문제가 다시 나타날 것입니다.\r\r 다음 명령어를 입력하여 환경변수를 설정합니다. $env:LC_ALL='C.UTF-8' ","date":"2020-09-25","objectID":"/powershell-encoding/:5:1","tags":["BugFix","PowerShell","Git","한글","encoding"],"title":"PowerShell에서 git log, diff 출력 시 한글 깨지는 오류 해결","uri":"/powershell-encoding/"},{"categories":["Windows"],"content":"PowerShell을 시작할 때마다 수정되도록 자동실행 스크립트 생성 PowerShell을 켤 때마다 자동으로 실행되는 스크립트를 만들고 그 스크립트에 $env:LC_ALL 환경변수를 설정하는 내용을 적으면, 매 번 환경변수를 따로 설정하지 않아도 자동으로 문제가 해결됩니다. 단, PowerShell에서 외부 스크립트를 실행하기 위해서는 실행 정책의 제한을 풀어줘야 합니다. 먼저, 다음 명령어를 통해 실행 정책 제한을 풀어줍니다. Set-ExecutionPolicy unrestricted PowerShell을 켤 때마다 자동으로 실행되는 스크립트의 경로는 $profile 변수에 저장되어 있습니다. 다음 명령줄을 통해, 만약 해당 경로에 스크립트가 없다면 새로 만들어줍니다. 그 뒤, 만들어진 스크립트 파일에 $env:LC_ALL='C.UTF-8' 내용을 추가합니다. 이를 통해, 앞으로는 PowerShell을 새로 시작할 때마다 이 스크립트가 실행되어 환경변수가 설정되도록 할 수 있습니다. if(!(Test-Path -path $profile)){ New-Item -Type File -Path $profile -Force } Add-Content -Path $profile -Value '$env:LC_ALL=''C.UTF-8''' ","date":"2020-09-25","objectID":"/powershell-encoding/:5:2","tags":["BugFix","PowerShell","Git","한글","encoding"],"title":"PowerShell에서 git log, diff 출력 시 한글 깨지는 오류 해결","uri":"/powershell-encoding/"},{"categories":["Windows"],"content":"Reference https://stackoverflow.com/questions/41139067/git-log-output-encoding-issues-on-windows-10-command-prompt ","date":"2020-09-25","objectID":"/powershell-encoding/:6:0","tags":["BugFix","PowerShell","Git","한글","encoding"],"title":"PowerShell에서 git log, diff 출력 시 한글 깨지는 오류 해결","uri":"/powershell-encoding/"},{"categories":["Windows"],"content":"이 글에서는 시작-실행 혹은 단축키 [WIN]+[R]을 통해 띄울 수 있는 실행 창에서 사용 가능한 다양한 명령어를 정리해 봅니다. ","date":"2020-09-24","objectID":"/windowrun/:0:0","tags":["HowTo","Windows","run","실행"],"title":"Windows 실행([WIN]+[R]) 명령어 정리","uri":"/windowrun/"},{"categories":["Windows"],"content":"사용법 ","date":"2020-09-24","objectID":"/windowrun/:1:0","tags":["HowTo","Windows","run","실행"],"title":"Windows 실행([WIN]+[R]) 명령어 정리","uri":"/windowrun/"},{"categories":["Windows"],"content":"기본적인 사용 실행 창을 띄웁니다. (시작-실행 혹은 단축키 [WIN]+[R]) 열기(O): 라고 표시된 상자 안에 명령어를 입력합니다. (대소문자는 상관 없습니다) 확인을 누릅니다. (혹은 [ENTER]를 누릅니다.) ","date":"2020-09-24","objectID":"/windowrun/:1:1","tags":["HowTo","Windows","run","실행"],"title":"Windows 실행([WIN]+[R]) 명령어 정리","uri":"/windowrun/"},{"categories":["Windows"],"content":"관리자 권한으로 실행 어떤 명령어든, 위의 사용법 설명에서 확인을 누르는 대신, [CTRL]+[SHIFT]+[ENTER]를 누르면, 해당 명령어가 관리자 권한으로 실행됩니다. 주로 cmd나 powershell 등을 관리자권한으로 실행하고 싶을 때 사용하면 좋습니다. ","date":"2020-09-24","objectID":"/windowrun/:1:2","tags":["HowTo","Windows","run","실행"],"title":"Windows 실행([WIN]+[R]) 명령어 정리","uri":"/windowrun/"},{"categories":["Windows"],"content":"응용프로그램 명령어 명령어  결과  calc 계산기 cmd 커맨드 창 mspaint 그림판 notepad 메모장 powershell 파워셸 ","date":"2020-09-24","objectID":"/windowrun/:2:0","tags":["HowTo","Windows","run","실행"],"title":"Windows 실행([WIN]+[R]) 명령어 정리","uri":"/windowrun/"},{"categories":["Windows"],"content":"환경변수로 정의된 폴더명 명령어 결과 %AppData% 현재 로그인한 사용자계정 폴더 내에 숨김처리된 AppData\\Roaming\\ 폴더 (일반적으로 C:\\Users\\\u003c계정명\u003e\\Appdata\\Roaming\\) %LocalAppData% 현재 로그인한 사용자계정 폴더 내에 숨김처리된 AppData\\Local\\ 폴더 (일반적으로 C:\\Users\\\u003c계정명\u003e\\Appdata\\Local\\) %ProgramData% ProgramData 폴더 (일반적으로 C:\\ProgramData\\) %ProgramFiles% Program Files 폴더 (일반적으로 C:\\Program Files\\) %ProgramFiles(x86)% Program Files (x86) 폴더. 64 bit 전용 (일반적으로 C:\\Program Files (x86)\\) %UserProfile% 현재 로그인한 사용자계정 폴더 (일반적으로 C:\\Users\\\u003c계정명\u003e\\) %WinDir% Windows 폴더 (일반적으로 C:\\Windows\\) shell:Startup 현재 사용자의 시작프로그램 폴더 shell:Common Startup 모든 사용자를 위한 시작프로그램 폴더 ","date":"2020-09-24","objectID":"/windowrun/:3:0","tags":["HowTo","Windows","run","실행"],"title":"Windows 실행([WIN]+[R]) 명령어 정리","uri":"/windowrun/"},{"categories":["Windows"],"content":"Windows 시스템 명령어 결과 appwiz.cpl 프로그램 제거 또는 변경 cleanmgr 디스크 정리 compmgmt.msc 컴퓨터 관리 control 제어판 desk.cpl 디스플레이 설정 devmgmt.msc 장치 관리자 diskmgmt.msc 디스크 관리 dxdiag Direct X 진단 도구 firewall.cpl 방화벽 mmsys.cpl 사운드 및 오디오 등록정보 mrt 악성 소프트웨어 제거 도구 mstsc 원격 데스크탑 연결 mstsc /v \u003cIP주소\u003e IP 주소를 명시하여 원격 데스크탑 연결 실행 ncpa.cpl 네트워크 연결 정보 optionalfeatures Windows 기능 켜기/끄기 perfmon.msc 성능 모니터 뷰 powercfg.cpl 전원 옵션 regedit 레지스트리 편집기 services.msc 서비스 sndvol 볼륨 Mixer sysdm.cpl 시스템 속성 taskmgr Windows 작업 관리자 taskschd.msc 작업 스케줄러 winver Windows 버전 정보 ","date":"2020-09-24","objectID":"/windowrun/:4:0","tags":["HowTo","Windows","run","실행"],"title":"Windows 실행([WIN]+[R]) 명령어 정리","uri":"/windowrun/"},{"categories":["Windows"],"content":"이 글에서는 Windows용 패키지 관리자인 Chocolatey(약칭: choco)를 설치하고 이용하는 방법에 대해 알아봅니다. Chocolatey는 Linux에서의 apt(apt-get), yum이나 macOS에서의 Homebrew처럼 패키지를 설치/업데이트/제거 등 관리하는 데에 사용하는 Windows용 프로그램입니다. Note\r\rChocolatey로 프로그램의 설치/제거 등을 하실 때에는 관리자 권한으로 작업하셔야 합니다. 관리자 권한 없이 이용하려면 설치경로의 변경 등의 작업이 요구됩니다. (참고: https://chocolatey.org/install#non-administrative-install) \r\r ","date":"2020-09-24","objectID":"/chocolatey/:0:0","tags":["HowTo","Windows","Chocolatey","choco"],"title":"Windows용 패키지 관리자 Chocolatey(choco) 설치 및 이용하기","uri":"/chocolatey/"},{"categories":["Windows"],"content":"Chocolatey 설치하기 ","date":"2020-09-24","objectID":"/chocolatey/:1:0","tags":["HowTo","Windows","Chocolatey","choco"],"title":"Windows용 패키지 관리자 Chocolatey(choco) 설치 및 이용하기","uri":"/chocolatey/"},{"categories":["Windows"],"content":"요구사항 Windows 7+/ Windows Server 2003+ Powershell v2+ (온라인 설치 시 v3+) .Net Framework 4+ (온라인 설치 시 4.5+) ","date":"2020-09-24","objectID":"/chocolatey/:1:1","tags":["HowTo","Windows","Chocolatey","choco"],"title":"Windows용 패키지 관리자 Chocolatey(choco) 설치 및 이용하기","uri":"/chocolatey/"},{"categories":["Windows"],"content":"cmd.exe로 설치하기 cmd.exe를 관리자 권한으로 실행합니다. 다음 명령줄을 실행합니다. @\"%SystemRoot%\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command \" [System.Net.ServicePointManager]::SecurityProtocol = 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\" \u0026\u0026 SET \"PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin\" ","date":"2020-09-24","objectID":"/chocolatey/:1:2","tags":["HowTo","Windows","Chocolatey","choco"],"title":"Windows용 패키지 관리자 Chocolatey(choco) 설치 및 이용하기","uri":"/chocolatey/"},{"categories":["Windows"],"content":"PowerShell.exe로 설치하기 PowerShell로 설치할 때에는 실행 정책(Execution Policy)상 제한이 걸리지 않도록 설정하는 과정이 추가적으로 필요할 수 있습니다. 실행 정책에 관해서는 간단하게 Bypass 옵션을 사용하셔도 되고, 좀 더 보안을 신경쓰신다면 AllSigned 옵션을 사용하셔도 됩니다. PowerShell.exe를 관리자 권한으로 실행합니다. Get-ExecutionPolicy 명령어로 실행 정책을 확인합니다. 만약 Restricted가 출력된다면, Set-ExecutionPolicy AllSigned 나, Set-ExecutionPolicy Bypass -Scope Process를 입력하여 제한을 풀어줍니다. 이제 다음의 명령줄을 실행합니다. [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1')) ","date":"2020-09-24","objectID":"/chocolatey/:1:3","tags":["HowTo","Windows","Chocolatey","choco"],"title":"Windows용 패키지 관리자 Chocolatey(choco) 설치 및 이용하기","uri":"/chocolatey/"},{"categories":["Windows"],"content":"그 외의 방법으로 설치하기 chocolatey 공식 홈페이지를 참고하세요. ","date":"2020-09-24","objectID":"/chocolatey/:1:4","tags":["HowTo","Windows","Chocolatey","choco"],"title":"Windows용 패키지 관리자 Chocolatey(choco) 설치 및 이용하기","uri":"/chocolatey/"},{"categories":["Windows"],"content":"Chocolatey 이용하기 ","date":"2020-09-24","objectID":"/chocolatey/:2:0","tags":["HowTo","Windows","Chocolatey","choco"],"title":"Windows용 패키지 관리자 Chocolatey(choco) 설치 및 이용하기","uri":"/chocolatey/"},{"categories":["Windows"],"content":"패키지 검색하기 choco로 설치 가능한 전체 패키지 목록은 https://chocolatey.org/packages에서 확인할 수 있습니다. 혹은, cmd나 PowerShell에서 choco search 명령어로 검색이 가능합니다. choco search 검색할내용 추가적으로 다음과 같은 옵션을 사용할 수도 있습니다. 검색할내용과 정확하게 일치하는 항목만 출력하기: -e (--exact) 패키지에 대한 자세한 정보 출력하기: --detailed 현재 컴퓨터에 설치된 패키지 목록 출력하기: -l (--local) (아래(설치한 패키지 목록 보기) 참고) ","date":"2020-09-24","objectID":"/chocolatey/:2:1","tags":["HowTo","Windows","Chocolatey","choco"],"title":"Windows용 패키지 관리자 Chocolatey(choco) 설치 및 이용하기","uri":"/chocolatey/"},{"categories":["Windows"],"content":"패키지 설치하기 choco install 명령어를 통해 패키지를 설치할 수 있습니다. choco install 패키지이름 추가적으로 다음과 같은 옵션을 사용할 수도 있습니다. 설치 시 확인여부를 묻는 내용을 띄우지 않고 무조건 수락하기: -y 특정 버전을 설치하기: --version 버전번호 (예: choco install python --version 3.8.5) ","date":"2020-09-24","objectID":"/chocolatey/:2:2","tags":["HowTo","Windows","Chocolatey","choco"],"title":"Windows용 패키지 관리자 Chocolatey(choco) 설치 및 이용하기","uri":"/chocolatey/"},{"categories":["Windows"],"content":"설치한 패키지 목록 보기 choco search 명령어 뒤에 -l옵션을 쓰면, 현재 이 컴퓨터에 설치된 목록을 출력해줍니다. choco search -l ","date":"2020-09-24","objectID":"/chocolatey/:2:3","tags":["HowTo","Windows","Chocolatey","choco"],"title":"Windows용 패키지 관리자 Chocolatey(choco) 설치 및 이용하기","uri":"/chocolatey/"},{"categories":["Windows"],"content":"패키지 삭제하기 choco uninstall 명령어를 통해 설치한 패키지를 삭제할 수 있습니다. choco uninstall 패키지이름 ","date":"2020-09-24","objectID":"/chocolatey/:2:4","tags":["HowTo","Windows","Chocolatey","choco"],"title":"Windows용 패키지 관리자 Chocolatey(choco) 설치 및 이용하기","uri":"/chocolatey/"},{"categories":["Windows"],"content":"패키지 업그레이드하기 choco upgrade 명령어를 통해 설치한 패키지를 업그레이드할 수 있습니다. choco upgrade 패키지이름 choco upgrade chocolatey 명령어를 입력하면, chocolatey도 최신화할 수 있습니다. choco upgrade all 명령어를 입력하면, 현재 컴퓨터에 설치된 모든 패키지(chocolatey 포함)를 최신화할 수 있습니다. ","date":"2020-09-24","objectID":"/chocolatey/:2:5","tags":["HowTo","Windows","Chocolatey","choco"],"title":"Windows용 패키지 관리자 Chocolatey(choco) 설치 및 이용하기","uri":"/chocolatey/"},{"categories":["Windows"],"content":"Reference https://chocolatey.org/ https://github.com/chocolatey/choco/wiki https://chocolatey.org/docs/commands-reference ","date":"2020-09-24","objectID":"/chocolatey/:3:0","tags":["HowTo","Windows","Chocolatey","choco"],"title":"Windows용 패키지 관리자 Chocolatey(choco) 설치 및 이용하기","uri":"/chocolatey/"}]